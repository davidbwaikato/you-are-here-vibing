var Bx=Object.defineProperty,Vx=e=>{throw TypeError(e)},q4=(e,t,a)=>t in e?Bx(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,Jr=(e,t)=>{for(var a in t)Bx(e,a,{get:t[a],enumerable:!0})},Ae=(e,t,a)=>q4(e,typeof t!="symbol"?t+"":t,a),Ux=(e,t,a)=>t.has(e)||Vx("Cannot "+a),on=(e,t,a)=>(Ux(e,t,"read from private field"),a?a.call(e):t.get(e)),Nr=(e,t,a)=>t.has(e)?Vx("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,a),Rs=(e,t,a,n)=>(Ux(e,t,"write to private field"),t.set(e,a),a),N0={};Jr(N0,{Abs:()=>zI,Acos:()=>Zs,Acosh:()=>Js,AdadeltaOptimizer:()=>Tm,AdagradOptimizer:()=>Rm,AdamOptimizer:()=>Em,AdamaxOptimizer:()=>_m,Add:()=>LI,AddN:()=>Qs,All:()=>WI,Any:()=>BI,ArgMax:()=>Il,ArgMin:()=>Sl,Asin:()=>ei,Asinh:()=>ti,Atan:()=>ai,Atan2:()=>ri,Atanh:()=>ni,AvgPool:()=>si,AvgPool3D:()=>Cl,AvgPool3DGrad:()=>wd,AvgPoolGrad:()=>vd,BackendWasm:()=>r7,BatchMatMul:()=>ii,BatchToSpaceND:()=>Nl,Bincount:()=>oi,BitwiseAnd:()=>Tl,BroadcastArgs:()=>Rl,BroadcastTo:()=>VI,Cast:()=>li,Ceil:()=>ui,ClipByValue:()=>Qr,Complex:()=>kd,ComplexAbs:()=>Id,Concat:()=>El,Conv2D:()=>di,Conv2DBackpropFilter:()=>Sd,Conv2DBackpropInput:()=>pi,Conv3D:()=>ci,Conv3DBackpropFilterV2:()=>_l,Conv3DBackpropInputV2:()=>hi,Cos:()=>UI,Cosh:()=>fi,CropAndResize:()=>yi,Cumprod:()=>mi,Cumsum:()=>gi,DataStorage:()=>xd,DenseBincount:()=>$l,DepthToSpace:()=>xi,DepthwiseConv2dNative:()=>Ai,DepthwiseConv2dNativeBackpropFilter:()=>Cd,DepthwiseConv2dNativeBackpropInput:()=>Nd,Diag:()=>Ml,Dilation2D:()=>bi,Dilation2DBackpropFilter:()=>ul,Dilation2DBackpropInput:()=>ll,Draw:()=>Td,ENV:()=>_0,Einsum:()=>Rd,Elu:()=>GI,EluGrad:()=>Fl,Environment:()=>nA,Equal:()=>wi,Erf:()=>HI,Exp:()=>jI,ExpandDims:()=>Pl,Expm1:()=>ki,FFT:()=>qI,Fill:()=>Ol,FlipLeftRight:()=>Ii,Floor:()=>Si,FloorDiv:()=>Ci,FromPixels:()=>Yu,FusedBatchNorm:()=>Ni,FusedConv2D:()=>Vr,FusedDepthwiseConv2D:()=>Ur,GPGPUContext:()=>Hu,GatherNd:()=>Ti,GatherV2:()=>Dl,GraphModel:()=>lh,Greater:()=>Ri,GreaterEqual:()=>Ei,IFFT:()=>Ed,Identity:()=>_i,Imag:()=>_d,IsFinite:()=>$i,IsInf:()=>Mi,IsNan:()=>Fi,KernelBackend:()=>wl,LRN:()=>ZI,LRNGrad:()=>zl,LeakyRelu:()=>Pi,Less:()=>Oi,LessEqual:()=>Di,LinSpace:()=>zi,Log:()=>XI,Log1p:()=>Li,LogSoftmax:()=>KI,LogicalAnd:()=>Wi,LogicalNot:()=>Bi,LogicalOr:()=>Vi,LogicalXor:()=>sA,LowerBound:()=>YI,MathBackendCPU:()=>Wm,MathBackendWebGL:()=>ch,MatrixBandPart:()=>JI,Max:()=>QI,MaxPool:()=>Gi,MaxPool3D:()=>Ll,MaxPool3DGrad:()=>Md,MaxPoolGrad:()=>$d,MaxPoolWithArgmax:()=>Wl,Maximum:()=>Ui,Mean:()=>Hi,Min:()=>eS,Minimum:()=>ji,MirrorPad:()=>qi,Mod:()=>tS,MomentumOptimizer:()=>$m,Multinomial:()=>Xi,Multiply:()=>Ki,Neg:()=>aS,NonMaxSuppressionV3:()=>Zi,NonMaxSuppressionV4:()=>Bl,NonMaxSuppressionV5:()=>Ji,NotEqual:()=>Yi,OP_SCOPE_SUFFIX:()=>O0,OneHot:()=>Qi,OnesLike:()=>Vl,Optimizer:()=>ns,OptimizerConstructors:()=>w1,Pack:()=>Ul,PadV2:()=>eo,Pool:()=>nS,Pow:()=>rS,Prelu:()=>to,Prod:()=>ao,RMSPropOptimizer:()=>Mm,RaggedGather:()=>zc,RaggedRange:()=>Lc,RaggedTensorToTensor:()=>Wc,Range:()=>Gl,Rank:()=>wf,Real:()=>Fd,RealDiv:()=>vi,Reciprocal:()=>no,Reduction:()=>pa,Relu:()=>ro,Relu6:()=>oo,Reshape:()=>Hl,ResizeBilinear:()=>io,ResizeBilinearGrad:()=>ql,ResizeNearestNeighbor:()=>so,ResizeNearestNeighborGrad:()=>jl,Reverse:()=>lo,RotateWithOffset:()=>To,Round:()=>uo,Rsqrt:()=>po,SGDOptimizer:()=>ih,ScatterNd:()=>co,SearchSorted:()=>fo,Select:()=>Xl,Selu:()=>mo,Sigmoid:()=>xo,Sign:()=>yo,Sin:()=>sS,Sinh:()=>go,Slice:()=>Kl,Softmax:()=>vo,Softplus:()=>Ao,SpaceToBatchND:()=>Yl,SparseFillEmptyRows:()=>Pd,SparseReshape:()=>Jl,SparseSegmentMean:()=>Ql,SparseSegmentSum:()=>eu,SparseToDense:()=>wo,SplitV:()=>Zl,Sqrt:()=>bo,Square:()=>Od,SquaredDifference:()=>ko,StaticRegexReplace:()=>Dd,Step:()=>ts,StridedSlice:()=>Io,StringNGrams:()=>tu,StringSplit:()=>zd,StringToHashBucketFast:()=>Ld,Sub:()=>oS,Sum:()=>iS,Tan:()=>lS,Tanh:()=>So,Tensor:()=>xt,TensorBuffer:()=>Mt,TensorScatterUpdate:()=>ho,Tile:()=>es,TopK:()=>Co,Transform:()=>No,Transpose:()=>rr,Unique:()=>Wd,Unpack:()=>au,UnsortedSegmentSum:()=>Bd,UpperBound:()=>uS,Variable:()=>ed,WebGPUBackend:()=>I2,ZerosLike:()=>nu,_FusedMatMul:()=>Br,abs:()=>za,acos:()=>PA,acosh:()=>OA,add:()=>Ie,addN:()=>W0,all:()=>DA,any:()=>zA,argMax:()=>su,argMin:()=>LA,asin:()=>WA,asinh:()=>BA,atan:()=>VA,atan2:()=>UA,atanh:()=>GA,avgPool:()=>V0,avgPool3d:()=>XA,backend:()=>Er,backend_util:()=>C,basicLSTMCell:()=>KA,batchNorm:()=>Xd,batchNorm2d:()=>YA,batchNorm3d:()=>ZA,batchNorm4d:()=>JA,batchToSpaceND:()=>U0,bincount:()=>G0,bitwiseAnd:()=>QA,booleanMaskAsync:()=>D3,broadcastArgs:()=>eb,broadcastTo:()=>rl,broadcast_util:()=>Ro,browser:()=>Zn,buffer:()=>$e,cast:()=>qe,ceil:()=>tb,clipByValue:()=>ab,clone:()=>Ta,complex:()=>or,concat:()=>ft,concat1d:()=>nb,concat2d:()=>Gc,concat3d:()=>rb,concat4d:()=>sb,conv1d:()=>ib,conv2d:()=>Kd,conv2dTranspose:()=>lb,conv3d:()=>ub,conv3dTranspose:()=>db,copyRegisteredKernels:()=>fS,cos:()=>pb,cosh:()=>cb,cosineWindow:()=>th,cumprod:()=>hb,cumsum:()=>fb,customGrad:()=>Un,denseBincount:()=>mb,deprecationWarn:()=>vA,depthToSpace:()=>gb,depthwiseConv2d:()=>Hc,deregisterOp:()=>m$,device_util:()=>Hd,diag:()=>yb,dilation2d:()=>xb,disableDeprecationWarnings:()=>US,dispose:()=>ae,disposeVariables:()=>GS,div:()=>Te,divNoNan:()=>bb,dot:()=>vb,dropout:()=>V3,einsum:()=>vs,elu:()=>q0,enableDebugMode:()=>VS,enableProdMode:()=>bA,enclosingPowerOfTwo:()=>Sm,engine:()=>$t,ensureShape:()=>wb,env:()=>U,equal:()=>j0,erf:()=>kb,euclideanNorm:()=>Cb,exp:()=>qr,expandDims:()=>ua,expm1:()=>Nb,eye:()=>K0,fft:()=>Zc,fill:()=>lr,findBackend:()=>wA,findBackendFactory:()=>KS,floor:()=>Y0,floorDiv:()=>Uc,forceHalfFloat:()=>J5,fused:()=>Cm,gather:()=>Z0,gatherND:()=>B3,gather_util:()=>Om,getBackend:()=>la,getGradient:()=>bf,getKernel:()=>Ju,getKernelsForBackend:()=>Ds,getThreadsCount:()=>Ene,gpgpu_util:()=>R5,grad:()=>_9,grads:()=>$9,greater:()=>Jd,greaterEqual:()=>J0,ifft:()=>ld,imag:()=>Qd,image:()=>Pe,inTopKAsync:()=>U3,io:()=>ar,irfft:()=>Am,isFinite:()=>Tb,isInf:()=>Rb,isNaN:()=>Eb,keep:()=>In,kernel_impls:()=>yn,leakyRelu:()=>Q0,less:()=>mc,lessEqual:()=>jc,linalg:()=>Z3,linspace:()=>_b,loadGraphModel:()=>X1,loadGraphModelSync:()=>vM,localResponseNormalization:()=>$b,log:()=>cl,log1p:()=>em,logSigmoid:()=>Fb,logSoftmax:()=>Pb,logSumExp:()=>am,logicalAnd:()=>sd,logicalNot:()=>nm,logicalOr:()=>rm,logicalXor:()=>Ob,losses:()=>J3,lowerBound:()=>Db,matMul:()=>rt,math:()=>d1,max:()=>tn,maxPool:()=>sm,maxPool3d:()=>zb,maxPoolWithArgmax:()=>Lb,maximum:()=>im,mean:()=>id,memory:()=>HS,meshgrid:()=>Wb,min:()=>Fs,minimum:()=>od,mirrorPad:()=>Bb,mod:()=>Kc,moments:()=>Vb,movingAverage:()=>z3,mul:()=>te,multiRNNCell:()=>Ub,multinomial:()=>Gb,neg:()=>Nn,nextFrame:()=>k1,node:()=>$7,norm:()=>Zd,notEqual:()=>om,oneHot:()=>gc,ones:()=>$r,onesLike:()=>Hb,op:()=>L,outerProduct:()=>jb,pad:()=>hr,pad1d:()=>qb,pad2d:()=>Xb,pad3d:()=>Kb,pad4d:()=>Yb,pool:()=>Zb,pow:()=>pl,prelu:()=>um,print:()=>L0,prod:()=>Jb,profile:()=>jS,raggedGather:()=>Qb,raggedRange:()=>e3,raggedTensorToTensor:()=>t3,rand:()=>a3,randomGamma:()=>i3,randomNormal:()=>fm,randomStandardNormal:()=>o3,randomUniform:()=>Yc,randomUniformInt:()=>l3,range:()=>hl,ready:()=>Vc,real:()=>fl,reciprocal:()=>u3,registerBackend:()=>ru,registerGradient:()=>pS,registerKernel:()=>Sn,registerOp:()=>f$,relu:()=>ep,relu6:()=>mm,removeBackend:()=>XS,reshape:()=>Z,reverse:()=>Xr,reverse1d:()=>d3,reverse2d:()=>p3,reverse3d:()=>c3,reverse4d:()=>h3,rfft:()=>Jc,round:()=>gm,rsqrt:()=>f3,scalar:()=>Be,scatterND:()=>L3,scatter_util:()=>Qc,searchSorted:()=>Xc,selu:()=>m3,separableConv2d:()=>g3,serialization:()=>t1,setBackend:()=>hc,setPlatform:()=>YS,setThreadsCount:()=>Rne,setWasmPath:()=>Tne,setWasmPaths:()=>p0,setWebGLContext:()=>a2,setdiff1dAsync:()=>y3,shared:()=>uh,sigmoid:()=>Cn,sign:()=>x3,signal:()=>Y3,sin:()=>A3,sinh:()=>b3,slice:()=>We,slice1d:()=>v3,slice2d:()=>w3,slice3d:()=>yc,slice4d:()=>ym,slice_util:()=>wt,softmax:()=>xm,softplus:()=>tm,spaceToBatchND:()=>lm,sparse:()=>Q3,sparseToDense:()=>W3,spectral:()=>K3,split:()=>Rn,sqrt:()=>Vn,square:()=>fn,squaredDifference:()=>bm,squeeze:()=>Ze,stack:()=>Ua,step:()=>vm,stridedSlice:()=>k3,string:()=>e1,sub:()=>ke,sum:()=>st,sumOutType:()=>Gd,tan:()=>I3,tanh:()=>fc,tensor:()=>He,tensor1d:()=>Qt,tensor2d:()=>Or,tensor3d:()=>wm,tensor4d:()=>S3,tensor5d:()=>C3,tensor6d:()=>N3,tensorScatterUpdate:()=>R3,tensor_util:()=>pA,test_util:()=>n3,tidy:()=>Ue,tile:()=>Ps,time:()=>qS,topk:()=>E3,train:()=>p_,transpose:()=>ml,truncatedNormal:()=>_3,unique:()=>$3,unregisterGradient:()=>hS,unregisterKernel:()=>cS,unsortedSegmentSum:()=>M3,unstack:()=>gn,upcastType:()=>ea,upperBound:()=>F3,util:()=>v,valueAndGrad:()=>M9,valueAndGrads:()=>F9,variable:()=>P3,variableGrads:()=>Mb,version:()=>R2,version_converter:()=>kM,version_core:()=>d_,version_cpu:()=>DF,version_wasm:()=>_ne,version_webgl:()=>CV,webgl:()=>NV,webgl_util:()=>Qv,webgpu_util:()=>o7,where:()=>sr,whereAsync:()=>Im,zeros:()=>Tn,zerosLike:()=>Va});var X4=Object.create,T0=Object.defineProperty,K4=Object.getOwnPropertyDescriptor,Y4=Object.getOwnPropertyNames,Z4=Object.getPrototypeOf,J4=Object.prototype.hasOwnProperty,zt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),je=(e,t)=>{for(var a in t)T0(e,a,{get:t[a],enumerable:!0})},Q4=(e,t,a,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Y4(t))!J4.call(e,r)&&r!==a&&T0(e,r,{get:()=>t[r],enumerable:!(n=K4(t,r))||n.enumerable});return e},vl=(e,t,a)=>(a=e!=null?X4(Z4(e)):{},Q4(!e||!e.__esModule?T0(a,"default",{value:e,enumerable:!0}):a,e)),eI=zt((e,t)=>{t.exports=n;var a=null;try{a=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function n(I,F,$){this.low=I|0,this.high=F|0,this.unsigned=!!$}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0});function r(I){return(I&&I.__isLong__)===!0}n.isLong=r;var s={},i={};function o(I,F){var $,z,M;return F?(I>>>=0,(M=0<=I&&I<256)&&(z=i[I],z)?z:($=d(I,(I|0)<0?-1:0,!0),M&&(i[I]=$),$)):(I|=0,(M=-128<=I&&I<128)&&(z=s[I],z)?z:($=d(I,I<0?-1:0,!1),M&&(s[I]=$),$))}n.fromInt=o;function u(I,F){if(isNaN(I))return F?b:A;if(F){if(I<0)return b;if(I>=g)return _}else{if(I<=-y)return P;if(I+1>=y)return T}return I<0?u(-I,F).neg():d(I%m|0,I/m|0,F)}n.fromNumber=u;function d(I,F,$){return new n(I,F,$)}n.fromBits=d;var l=Math.pow;function p(I,F,$){if(I.length===0)throw Error("empty string");if(I==="NaN"||I==="Infinity"||I==="+Infinity"||I==="-Infinity")return A;if(typeof F=="number"?($=F,F=!1):F=!!F,$=$||10,$<2||36<$)throw RangeError("radix");var z;if((z=I.indexOf("-"))>0)throw Error("interior hyphen");if(z===0)return p(I.substring(1),F,$).neg();for(var M=u(l($,8)),H=A,V=0;V<I.length;V+=8){var q=Math.min(8,I.length-V),G=parseInt(I.substring(V,V+q),$);if(q<8){var B=u(l($,q));H=H.mul(B).add(u(G))}else H=H.mul(M),H=H.add(u(G))}return H.unsigned=F,H}n.fromString=p;function c(I,F){return typeof I=="number"?u(I,F):typeof I=="string"?p(I,F):d(I.low,I.high,typeof F=="boolean"?F:I.unsigned)}n.fromValue=c;var h=65536,f=1<<24,m=h*h,g=m*m,y=g/2,x=o(f),A=o(0);n.ZERO=A;var b=o(0,!0);n.UZERO=b;var w=o(1);n.ONE=w;var S=o(1,!0);n.UONE=S;var N=o(-1);n.NEG_ONE=N;var T=d(-1,2147483647,!1);n.MAX_VALUE=T;var _=d(-1,-1,!0);n.MAX_UNSIGNED_VALUE=_;var P=d(0,-2147483648,!1);n.MIN_VALUE=P;var E=n.prototype;E.toInt=function(){return this.unsigned?this.low>>>0:this.low},E.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},E.toString=function(I){if(I=I||10,I<2||36<I)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(P)){var F=u(I),$=this.div(F),z=$.mul(F).sub(this);return $.toString(I)+z.toInt().toString(I)}else return"-"+this.neg().toString(I);for(var M=u(l(I,6),this.unsigned),H=this,V="";;){var q=H.div(M),G=H.sub(q.mul(M)).toInt()>>>0,B=G.toString(I);if(H=q,H.isZero())return B+V;for(;B.length<6;)B="0"+B;V=""+B+V}},E.getHighBits=function(){return this.high},E.getHighBitsUnsigned=function(){return this.high>>>0},E.getLowBits=function(){return this.low},E.getLowBitsUnsigned=function(){return this.low>>>0},E.getNumBitsAbs=function(){if(this.isNegative())return this.eq(P)?64:this.neg().getNumBitsAbs();for(var I=this.high!=0?this.high:this.low,F=31;F>0&&!(I&1<<F);F--);return this.high!=0?F+33:F+1},E.isZero=function(){return this.high===0&&this.low===0},E.eqz=E.isZero,E.isNegative=function(){return!this.unsigned&&this.high<0},E.isPositive=function(){return this.unsigned||this.high>=0},E.isOdd=function(){return(this.low&1)===1},E.isEven=function(){return(this.low&1)===0},E.equals=function(I){return r(I)||(I=c(I)),this.unsigned!==I.unsigned&&this.high>>>31===1&&I.high>>>31===1?!1:this.high===I.high&&this.low===I.low},E.eq=E.equals,E.notEquals=function(I){return!this.eq(I)},E.neq=E.notEquals,E.ne=E.notEquals,E.lessThan=function(I){return this.comp(I)<0},E.lt=E.lessThan,E.lessThanOrEqual=function(I){return this.comp(I)<=0},E.lte=E.lessThanOrEqual,E.le=E.lessThanOrEqual,E.greaterThan=function(I){return this.comp(I)>0},E.gt=E.greaterThan,E.greaterThanOrEqual=function(I){return this.comp(I)>=0},E.gte=E.greaterThanOrEqual,E.ge=E.greaterThanOrEqual,E.compare=function(I){if(r(I)||(I=c(I)),this.eq(I))return 0;var F=this.isNegative(),$=I.isNegative();return F&&!$?-1:!F&&$?1:this.unsigned?I.high>>>0>this.high>>>0||I.high===this.high&&I.low>>>0>this.low>>>0?-1:1:this.sub(I).isNegative()?-1:1},E.comp=E.compare,E.negate=function(){return!this.unsigned&&this.eq(P)?P:this.not().add(w)},E.neg=E.negate,E.add=function(I){r(I)||(I=c(I));var F=this.high>>>16,$=this.high&65535,z=this.low>>>16,M=this.low&65535,H=I.high>>>16,V=I.high&65535,q=I.low>>>16,G=I.low&65535,B=0,K=0,X=0,J=0;return J+=M+G,X+=J>>>16,J&=65535,X+=z+q,K+=X>>>16,X&=65535,K+=$+V,B+=K>>>16,K&=65535,B+=F+H,B&=65535,d(X<<16|J,B<<16|K,this.unsigned)},E.subtract=function(I){return r(I)||(I=c(I)),this.add(I.neg())},E.sub=E.subtract,E.multiply=function(I){if(this.isZero())return A;if(r(I)||(I=c(I)),a){var F=a.mul(this.low,this.high,I.low,I.high);return d(F,a.get_high(),this.unsigned)}if(I.isZero())return A;if(this.eq(P))return I.isOdd()?P:A;if(I.eq(P))return this.isOdd()?P:A;if(this.isNegative())return I.isNegative()?this.neg().mul(I.neg()):this.neg().mul(I).neg();if(I.isNegative())return this.mul(I.neg()).neg();if(this.lt(x)&&I.lt(x))return u(this.toNumber()*I.toNumber(),this.unsigned);var $=this.high>>>16,z=this.high&65535,M=this.low>>>16,H=this.low&65535,V=I.high>>>16,q=I.high&65535,G=I.low>>>16,B=I.low&65535,K=0,X=0,J=0,ee=0;return ee+=H*B,J+=ee>>>16,ee&=65535,J+=M*B,X+=J>>>16,J&=65535,J+=H*G,X+=J>>>16,J&=65535,X+=z*B,K+=X>>>16,X&=65535,X+=M*G,K+=X>>>16,X&=65535,X+=H*q,K+=X>>>16,X&=65535,K+=$*B+z*G+M*q+H*V,K&=65535,d(J<<16|ee,K<<16|X,this.unsigned)},E.mul=E.multiply,E.divide=function(I){if(r(I)||(I=c(I)),I.isZero())throw Error("division by zero");if(a){if(!this.unsigned&&this.high===-2147483648&&I.low===-1&&I.high===-1)return this;var F=(this.unsigned?a.div_u:a.div_s)(this.low,this.high,I.low,I.high);return d(F,a.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?b:A;var $,z,M;if(this.unsigned){if(I.unsigned||(I=I.toUnsigned()),I.gt(this))return b;if(I.gt(this.shru(1)))return S;M=b}else{if(this.eq(P)){if(I.eq(w)||I.eq(N))return P;if(I.eq(P))return w;var H=this.shr(1);return $=H.div(I).shl(1),$.eq(A)?I.isNegative()?w:N:(z=this.sub(I.mul($)),M=$.add(z.div(I)),M)}else if(I.eq(P))return this.unsigned?b:A;if(this.isNegative())return I.isNegative()?this.neg().div(I.neg()):this.neg().div(I).neg();if(I.isNegative())return this.div(I.neg()).neg();M=A}for(z=this;z.gte(I);){$=Math.max(1,Math.floor(z.toNumber()/I.toNumber()));for(var V=Math.ceil(Math.log($)/Math.LN2),q=V<=48?1:l(2,V-48),G=u($),B=G.mul(I);B.isNegative()||B.gt(z);)$-=q,G=u($,this.unsigned),B=G.mul(I);G.isZero()&&(G=w),M=M.add(G),z=z.sub(B)}return M},E.div=E.divide,E.modulo=function(I){if(r(I)||(I=c(I)),a){var F=(this.unsigned?a.rem_u:a.rem_s)(this.low,this.high,I.low,I.high);return d(F,a.get_high(),this.unsigned)}return this.sub(this.div(I).mul(I))},E.mod=E.modulo,E.rem=E.modulo,E.not=function(){return d(~this.low,~this.high,this.unsigned)},E.and=function(I){return r(I)||(I=c(I)),d(this.low&I.low,this.high&I.high,this.unsigned)},E.or=function(I){return r(I)||(I=c(I)),d(this.low|I.low,this.high|I.high,this.unsigned)},E.xor=function(I){return r(I)||(I=c(I)),d(this.low^I.low,this.high^I.high,this.unsigned)},E.shiftLeft=function(I){return r(I)&&(I=I.toInt()),(I&=63)===0?this:I<32?d(this.low<<I,this.high<<I|this.low>>>32-I,this.unsigned):d(0,this.low<<I-32,this.unsigned)},E.shl=E.shiftLeft,E.shiftRight=function(I){return r(I)&&(I=I.toInt()),(I&=63)===0?this:I<32?d(this.low>>>I|this.high<<32-I,this.high>>I,this.unsigned):d(this.high>>I-32,this.high>=0?0:-1,this.unsigned)},E.shr=E.shiftRight,E.shiftRightUnsigned=function(I){if(r(I)&&(I=I.toInt()),I&=63,I===0)return this;var F=this.high;if(I<32){var $=this.low;return d($>>>I|F<<32-I,F>>>I,this.unsigned)}else return I===32?d(F,0,this.unsigned):d(F>>>I-32,0,this.unsigned)},E.shru=E.shiftRightUnsigned,E.shr_u=E.shiftRightUnsigned,E.toSigned=function(){return this.unsigned?d(this.low,this.high,!1):this},E.toUnsigned=function(){return this.unsigned?this:d(this.low,this.high,!0)},E.toBytes=function(I){return I?this.toBytesLE():this.toBytesBE()},E.toBytesLE=function(){var I=this.high,F=this.low;return[F&255,F>>>8&255,F>>>16&255,F>>>24,I&255,I>>>8&255,I>>>16&255,I>>>24]},E.toBytesBE=function(){var I=this.high,F=this.low;return[I>>>24,I>>>16&255,I>>>8&255,I&255,F>>>24,F>>>16&255,F>>>8&255,F&255]},n.fromBytes=function(I,F,$){return $?n.fromBytesLE(I,F):n.fromBytesBE(I,F)},n.fromBytesLE=function(I,F){return new n(I[0]|I[1]<<8|I[2]<<16|I[3]<<24,I[4]|I[5]<<8|I[6]<<16|I[7]<<24,F)},n.fromBytesBE=function(I,F){return new n(I[4]<<24|I[5]<<16|I[6]<<8|I[7],I[0]<<24|I[1]<<16|I[2]<<8|I[3],F)}}),tI=zt(()=>{}),aI=zt(()=>{}),nI=zt((e,t)=>{(function(a,n,r){function s(d){var l=this,p=u();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=p(" "),l.s1=p(" "),l.s2=p(" "),l.s0-=p(d),l.s0<0&&(l.s0+=1),l.s1-=p(d),l.s1<0&&(l.s1+=1),l.s2-=p(d),l.s2<0&&(l.s2+=1),p=null}function i(d,l){return l.c=d.c,l.s0=d.s0,l.s1=d.s1,l.s2=d.s2,l}function o(d,l){var p=new s(d),c=l&&l.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,c&&(typeof c=="object"&&i(c,p),h.state=function(){return i(p,{})}),h}function u(){var d=4022871197,l=function(p){p=String(p);for(var c=0;c<p.length;c++){d+=p.charCodeAt(c);var h=.02519603282416938*d;d=h>>>0,h-=d,h*=d,d=h>>>0,h-=d,d+=h*4294967296}return(d>>>0)*23283064365386963e-26};return l}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),rI=zt((e,t)=>{(function(a,n,r){function s(u){var d=this,l="";d.x=0,d.y=0,d.z=0,d.w=0,d.next=function(){var c=d.x^d.x<<11;return d.x=d.y,d.y=d.z,d.z=d.w,d.w^=d.w>>>19^c^c>>>8},u===(u|0)?d.x=u:l+=u;for(var p=0;p<l.length+64;p++)d.x^=l.charCodeAt(p)|0,d.next()}function i(u,d){return d.x=u.x,d.y=u.y,d.z=u.z,d.w=u.w,d}function o(u,d){var l=new s(u),p=d&&d.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,p&&(typeof p=="object"&&i(p,l),c.state=function(){return i(l,{})}),c}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),sI=zt((e,t)=>{(function(a,n,r){function s(u){var d=this,l="";d.next=function(){var c=d.x^d.x>>>2;return d.x=d.y,d.y=d.z,d.z=d.w,d.w=d.v,(d.d=d.d+362437|0)+(d.v=d.v^d.v<<4^(c^c<<1))|0},d.x=0,d.y=0,d.z=0,d.w=0,d.v=0,u===(u|0)?d.x=u:l+=u;for(var p=0;p<l.length+64;p++)d.x^=l.charCodeAt(p)|0,p==l.length&&(d.d=d.x<<10^d.x>>>4),d.next()}function i(u,d){return d.x=u.x,d.y=u.y,d.z=u.z,d.w=u.w,d.v=u.v,d.d=u.d,d}function o(u,d){var l=new s(u),p=d&&d.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,p&&(typeof p=="object"&&i(p,l),c.state=function(){return i(l,{})}),c}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),iI=zt((e,t)=>{(function(a,n,r){function s(u){var d=this;d.next=function(){var p=d.x,c=d.i,h,f;return h=p[c],h^=h>>>7,f=h^h<<24,h=p[c+1&7],f^=h^h>>>10,h=p[c+3&7],f^=h^h>>>3,h=p[c+4&7],f^=h^h<<7,h=p[c+7&7],h=h^h<<13,f^=h^h<<9,p[c]=f,d.i=c+1&7,f};function l(p,c){var h,f=[];if(c===(c|0))f[0]=c;else for(c=""+c,h=0;h<c.length;++h)f[h&7]=f[h&7]<<15^c.charCodeAt(h)+f[h+1&7]<<13;for(;f.length<8;)f.push(0);for(h=0;h<8&&f[h]===0;++h);for(h==8?f[7]=-1:f[h],p.x=f,p.i=0,h=256;h>0;--h)p.next()}l(d,u)}function i(u,d){return d.x=u.x.slice(),d.i=u.i,d}function o(u,d){u==null&&(u=+new Date);var l=new s(u),p=d&&d.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,p&&(p.x&&i(p,l),c.state=function(){return i(l,{})}),c}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),oI=zt((e,t)=>{(function(a,n,r){function s(u){var d=this;d.next=function(){var p=d.w,c=d.X,h=d.i,f,m;return d.w=p=p+1640531527|0,m=c[h+34&127],f=c[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=c[h]=m^f,d.i=h,m+(p^p>>>16)|0};function l(p,c){var h,f,m,g,y,x=[],A=128;for(c===(c|0)?(f=c,c=null):(c=c+"\0",f=0,A=Math.max(A,c.length)),m=0,g=-32;g<A;++g)c&&(f^=c.charCodeAt((g+32)%c.length)),g===0&&(y=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(y=y+1640531527|0,h=x[g&127]^=f+y,m=h==0?m+1:0);for(m>=128&&(x[(c&&c.length||0)&127]=-1),m=127,g=512;g>0;--g)f=x[m+34&127],h=x[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,x[m]=f^h;p.w=y,p.X=x,p.i=m}l(d,u)}function i(u,d){return d.i=u.i,d.w=u.w,d.X=u.X.slice(),d}function o(u,d){u==null&&(u=+new Date);var l=new s(u),p=d&&d.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,p&&(p.X&&i(p,l),c.state=function(){return i(l,{})}),c}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),lI=zt((e,t)=>{(function(a,n,r){function s(u){var d=this,l="";d.next=function(){var c=d.b,h=d.c,f=d.d,m=d.a;return c=c<<25^c>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-c|0,d.b=c=c<<20^c>>>12^h,d.c=h=h-f|0,d.d=f<<16^h>>>16^m,d.a=m-c|0},d.a=0,d.b=0,d.c=-1640531527,d.d=1367130551,u===Math.floor(u)?(d.a=u/4294967296|0,d.b=u|0):l+=u;for(var p=0;p<l.length+20;p++)d.b^=l.charCodeAt(p)|0,d.next()}function i(u,d){return d.a=u.a,d.b=u.b,d.c=u.c,d.d=u.d,d}function o(u,d){var l=new s(u),p=d&&d.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var h=l.next()>>>11,f=(l.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},c.int32=l.next,c.quick=c,p&&(typeof p=="object"&&i(p,l),c.state=function(){return i(l,{})}),c}n&&n.exports?n.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),uI=zt(()=>{}),dI=zt((e,t)=>{(function(a,n,r){var s=256,i=6,o=52,u="random",d=r.pow(s,i),l=r.pow(2,o),p=l*2,c=s-1,h;function f(w,S,N){var T=[];S=S==!0?{entropy:!0}:S||{};var _=x(y(S.entropy?[w,b(n)]:w??A(),3),T),P=new m(T),E=function(){for(var I=P.g(i),F=d,$=0;I<l;)I=(I+$)*s,F*=s,$=P.g(1);for(;I>=p;)I/=2,F/=2,$>>>=1;return(I+$)/F};return E.int32=function(){return P.g(4)|0},E.quick=function(){return P.g(4)/4294967296},E.double=E,x(b(P.S),n),(S.pass||N||function(I,F,$,z){return z&&(z.S&&g(z,P),I.state=function(){return g(P,{})}),$?(r[u]=I,F):I})(E,_,"global"in S?S.global:this==r,S.state)}function m(w){var S,N=w.length,T=this,_=0,P=T.i=T.j=0,E=T.S=[];for(N||(w=[N++]);_<s;)E[_]=_++;for(_=0;_<s;_++)E[_]=E[P=c&P+w[_%N]+(S=E[_])],E[P]=S;(T.g=function(I){for(var F,$=0,z=T.i,M=T.j,H=T.S;I--;)F=H[z=c&z+1],$=$*s+H[c&(H[z]=H[M=c&M+F])+(H[M]=F)];return T.i=z,T.j=M,$})(s)}function g(w,S){return S.i=w.i,S.j=w.j,S.S=w.S.slice(),S}function y(w,S){var N=[],T=typeof w,_;if(S&&T=="object")for(_ in w)try{N.push(y(w[_],S-1))}catch{}return N.length?N:T=="string"?w:w+"\0"}function x(w,S){for(var N=w+"",T,_=0;_<N.length;)S[c&_]=c&(T^=S[c&_]*19)+N.charCodeAt(_++);return b(S)}function A(){try{var w;return h&&(w=h.randomBytes)?w=w(s):(w=new Uint8Array(s),(a.crypto||a.msCrypto).getRandomValues(w)),b(w)}catch{var S=a.navigator,N=S&&S.plugins;return[+new Date,a,N,a.screen,b(n)]}}function b(w){return String.fromCharCode.apply(0,w)}if(x(r.random(),n),typeof t=="object"&&t.exports){t.exports=f;try{h=uI()}catch{}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+u]=f})(typeof self<"u"?self:e,[],Math)}),Gx=zt((e,t)=>{var a=nI(),n=rI(),r=sI(),s=iI(),i=oI(),o=lI(),u=dI();u.alea=a,u.xor128=n,u.xorwow=r,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}),Hx=zt(()=>{}),jx=zt(()=>{}),pI=zt(()=>{}),cI=zt(()=>{}),hI=zt(()=>{}),fI=zt((e,t)=>{var a=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(r){r=r||{};function s(){return V.buffer!=le&&Xe(V.buffer),Se}function i(){return V.buffer!=le&&Xe(V.buffer),Re}function o(){return V.buffer!=le&&Xe(V.buffer),Me}function u(){return V.buffer!=le&&Xe(V.buffer),Oe}function d(){return V.buffer!=le&&Xe(V.buffer),ot}var l=typeof r<"u"?r:{},p,c;l.ready=new Promise(function(D,j){p=D,c=j});var h;typeof process<"u"&&process.listeners&&(h={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),m=(D,j)=>{throw j},g=typeof window=="object",y=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",A=l.ENVIRONMENT_IS_PTHREAD||!1,b="";function w(D){return l.locateFile?l.locateFile(D,b):b+D}var S,N,T;function _(D){D instanceof Xn||z("exiting due to exception: "+D)}if(x){var P=Hx(),E=jx();y?b=E.dirname(b)+"/":b=__dirname+"/",S=(j,se)=>(j=br(j)?new URL(j):E.normalize(j),P.readFileSync(j,se?void 0:"utf8")),T=j=>{var se=S(j,!0);return se.buffer||(se=new Uint8Array(se)),se},N=(j,se,Ee)=>{j=br(j)?new URL(j):E.normalize(j),P.readFile(j,function(De,Le){De?Ee(De):se(Le.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(j){if(!(j instanceof Xn))throw j}),process.on("unhandledRejection",function(j){throw j}),m=(j,se)=>{if(It())throw process.exitCode=j,se;_(se),process.exit(j)},l.inspect=function(){return"[Emscripten Module object]"};let D;try{D=pI()}catch(j){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),j}global.Worker=D.Worker}else(g||y)&&(y?b=self.location.href:typeof document<"u"&&document.currentScript&&(b=document.currentScript.src),typeof n<"u"&&n&&(b=n),b.indexOf("blob:")!==0?b=b.substr(0,b.replace(/[?#].*/,"").lastIndexOf("/")+1):b="",x||(S=D=>{var j=new XMLHttpRequest;return j.open("GET",D,!1),j.send(null),j.responseText},y&&(T=D=>{var j=new XMLHttpRequest;return j.open("GET",D,!1),j.responseType="arraybuffer",j.send(null),new Uint8Array(j.response)}),N=(D,j,se)=>{var Ee=new XMLHttpRequest;Ee.open("GET",D,!0),Ee.responseType="arraybuffer",Ee.onload=()=>{if(Ee.status==200||Ee.status==0&&Ee.response){j(Ee.response);return}se()},Ee.onerror=se,Ee.send(null)}));x&&typeof performance>"u"&&(global.performance=cI().performance);var I=console.log.bind(console),F=console.warn.bind(console);x&&(I=D=>P.writeSync(1,D+`
`),F=D=>P.writeSync(2,D+`
`));var $=l.print||I,z=l.printErr||F;Object.assign(l,f),f=null,l.arguments&&l.arguments,l.thisProgram&&l.thisProgram,l.quit&&(m=l.quit);var M;l.wasmBinary&&(M=l.wasmBinary);var H=l.noExitRuntime||!0;typeof WebAssembly!="object"&&qn("no native wasm support detected");var V,q,G=!1,B;function K(D,j){D||qn(j)}var X=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function J(D,j,se){j>>>=0;for(var Ee=j+se,De=j;D[De]&&!(De>=Ee);)++De;if(De-j>16&&D.buffer&&X)return X.decode(D.buffer instanceof SharedArrayBuffer?D.slice(j,De):D.subarray(j,De));for(var Le="";j<De;){var me=D[j++];if(!(me&128)){Le+=String.fromCharCode(me);continue}var Ce=D[j++]&63;if((me&224)==192){Le+=String.fromCharCode((me&31)<<6|Ce);continue}var bt=D[j++]&63;if((me&240)==224?me=(me&15)<<12|Ce<<6|bt:me=(me&7)<<18|Ce<<12|bt<<6|D[j++]&63,me<65536)Le+=String.fromCharCode(me);else{var Ka=me-65536;Le+=String.fromCharCode(55296|Ka>>10,56320|Ka&1023)}}return Le}function ee(D,j){return D>>>=0,D?J(i(),D,j):""}function ye(D,j,se,Ee){if(se>>>=0,!(Ee>0))return 0;for(var De=se,Le=se+Ee-1,me=0;me<D.length;++me){var Ce=D.charCodeAt(me);if(Ce>=55296&&Ce<=57343){var bt=D.charCodeAt(++me);Ce=65536+((Ce&1023)<<10)|bt&1023}if(Ce<=127){if(se>=Le)break;j[se++>>>0]=Ce}else if(Ce<=2047){if(se+1>=Le)break;j[se++>>>0]=192|Ce>>6,j[se++>>>0]=128|Ce&63}else if(Ce<=65535){if(se+2>=Le)break;j[se++>>>0]=224|Ce>>12,j[se++>>>0]=128|Ce>>6&63,j[se++>>>0]=128|Ce&63}else{if(se+3>=Le)break;j[se++>>>0]=240|Ce>>18,j[se++>>>0]=128|Ce>>12&63,j[se++>>>0]=128|Ce>>6&63,j[se++>>>0]=128|Ce&63}}return j[se>>>0]=0,se-De}function xe(D,j,se){return ye(D,i(),j,se)}var le,Se,Re,Me,Oe,ot;A&&(le=l.buffer);function Xe(D){le=D,l.HEAP8=Se=new Int8Array(D),l.HEAP16=new Int16Array(D),l.HEAP32=Me=new Int32Array(D),l.HEAPU8=Re=new Uint8Array(D),l.HEAPU16=new Uint16Array(D),l.HEAPU32=Oe=new Uint32Array(D),l.HEAPF32=new Float32Array(D),l.HEAPF64=ot=new Float64Array(D)}var Ye=l.INITIAL_MEMORY||16777216;if(A)V=l.wasmMemory,le=l.buffer;else if(l.wasmMemory)V=l.wasmMemory;else if(V=new WebAssembly.Memory({initial:Ye/65536,maximum:65536,shared:!0}),!(V.buffer instanceof SharedArrayBuffer))throw z("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&z("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");V&&(le=V.buffer),Ye=le.byteLength,Xe(le);var Fe,at=[],dt=[],Ma=[];function It(){return H}function ga(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)rn(l.preRun.shift());pt(at)}function Xt(){!A&&pt(dt)}function ya(){if(!A){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)xa(l.postRun.shift());pt(Ma)}}function rn(D){at.unshift(D)}function Fa(D){dt.unshift(D)}function xa(D){Ma.unshift(D)}var Kt=0,qa=null;function Ar(D){Kt++,l.monitorRunDependencies&&l.monitorRunDependencies(Kt)}function vu(D){if(Kt--,l.monitorRunDependencies&&l.monitorRunDependencies(Kt),Kt==0&&qa){var j=qa;qa=null,j()}}function qn(D){l.onAbort&&l.onAbort(D),D="Aborted("+D+")",z(D),G=!0,B=1,D+=". Build with -sASSERTIONS for more info.";var j=new WebAssembly.RuntimeError(D);throw c(j),j}var wu="data:application/octet-stream;base64,";function Fn(D){return D.startsWith(wu)}function br(D){return D.startsWith("file://")}var Yt;Yt="tfjs-backend-wasm-threaded-simd.wasm",Fn(Yt)||(Yt=w(Yt));function dp(D){try{if(D==Yt&&M)return new Uint8Array(M);if(T)return T(D);throw"both async and sync fetching of the wasm failed"}catch(j){qn(j)}}function pp(){if(!M&&(g||y)){if(typeof fetch=="function"&&!br(Yt))return fetch(Yt,{credentials:"same-origin"}).then(function(D){if(!D.ok)throw"failed to load wasm binary file at '"+Yt+"'";return D.arrayBuffer()}).catch(function(){return dp(Yt)});if(N)return new Promise(function(D,j){N(Yt,function(se){D(new Uint8Array(se))},j)})}return Promise.resolve().then(function(){return dp(Yt)})}function cp(){var D={env:U2,wasi_snapshot_preview1:U2};function j(me,Ce){var bt=me.exports;if(l.asm=bt,Kn(l.asm._emscripten_tls_init),Fe=l.asm.__indirect_function_table,Fa(l.asm.__wasm_call_ctors),q=Ce,!A){var Ka=he.unusedWorkers.length;he.unusedWorkers.forEach(function(Yn){he.loadWasmModuleToWorker(Yn,function(){--Ka||vu()})})}}A||Ar();function se(me){j(me.instance,me.module)}function Ee(me){return pp().then(function(Ce){return WebAssembly.instantiate(Ce,D)}).then(function(Ce){return Ce}).then(me,function(Ce){z("failed to asynchronously prepare wasm: "+Ce),qn(Ce)})}function De(){return!M&&typeof WebAssembly.instantiateStreaming=="function"&&!Fn(Yt)&&!br(Yt)&&!x&&typeof fetch=="function"?fetch(Yt,{credentials:"same-origin"}).then(function(me){var Ce=WebAssembly.instantiateStreaming(me,D);return Ce.then(se,function(bt){return z("wasm streaming compile failed: "+bt),z("falling back to ArrayBuffer instantiation"),Ee(se)})}):Ee(se)}if(l.instantiateWasm)try{var Le=l.instantiateWasm(D,j);return Le}catch(me){z("Module.instantiateWasm callback failed with error: "+me),c(me)}return De().catch(c),{}}var hp={};function Xn(D){this.name="ExitStatus",this.message="Program terminated with exit("+D+")",this.status=D}function Wo(D){var j=he.pthreads[D];delete he.pthreads[D],j.terminate(),Th(D),he.runningWorkers.splice(he.runningWorkers.indexOf(j),1),j.pthread_ptr=0}function fp(D){var j=he.pthreads[D];j.postMessage({cmd:"cancel"})}function ps(D){var j=he.pthreads[D];K(j),he.returnWorkerToPool(j)}function cs(D){var j=he.getNewWorker();if(!j)return 6;he.runningWorkers.push(j),he.pthreads[D.pthread_ptr]=j,j.pthread_ptr=D.pthread_ptr;var se={cmd:"run",start_routine:D.startRoutine,arg:D.arg,pthread_ptr:D.pthread_ptr};return j.runPthread=()=>{x&&j.ref(),j.postMessage(se,D.transferList),delete j.runPthread},j.loaded&&j.runPthread(),0}function mp(D){if(A)return Bo(1,1,D);B=D,It()||(he.terminateAllThreads(),l.onExit&&l.onExit(D),G=!0),m(D,new Xn(D))}function Y(D,j){if(B=D,!j&&A)throw Ge(D),"unwind";mp(D)}var re=Y;function Ne(D){if(D instanceof Xn||D=="unwind")return B;m(1,D)}var he={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){A?he.initWorker():he.initMainThread()},initMainThread:function(){for(var D=8;D--;)he.allocateUnusedWorker()},initWorker:function(){H=!1},setExitStatus:function(D){B=D},terminateAllThreads:function(){for(var D of Object.values(he.pthreads))he.returnWorkerToPool(D);for(var D of he.unusedWorkers)D.terminate();he.unusedWorkers=[]},returnWorkerToPool:function(D){var j=D.pthread_ptr;delete he.pthreads[j],he.unusedWorkers.push(D),he.runningWorkers.splice(he.runningWorkers.indexOf(D),1),D.pthread_ptr=0,x&&D.unref(),Th(j)},receiveObjectTransfer:function(D){},threadInitTLS:function(){he.tlsInitFunctions.forEach(D=>D())},loadWasmModuleToWorker:function(D,j){D.onmessage=Le=>{var me=Le.data,Ce=me.cmd;if(D.pthread_ptr&&(he.currentProxiedOperationCallerThread=D.pthread_ptr),me.targetThread&&me.targetThread!=Ap()){var bt=he.pthreads[me.targetThread];bt?bt.postMessage(me,me.transferList):z('Internal error! Worker sent a message "'+Ce+'" to target pthread '+me.targetThread+", but that thread no longer exists!"),he.currentProxiedOperationCallerThread=void 0;return}Ce==="processProxyingQueue"?Sh(me.queue):Ce==="spawnThread"?cs(me):Ce==="cleanupThread"?ps(me.thread):Ce==="killThread"?Wo(me.thread):Ce==="cancelThread"?fp(me.thread):Ce==="loaded"?(D.loaded=!0,x&&D.unref(),j&&j(D),D.runPthread&&D.runPthread()):Ce==="print"?$("Thread "+me.threadId+": "+me.text):Ce==="printErr"?z("Thread "+me.threadId+": "+me.text):Ce==="alert"?alert("Thread "+me.threadId+": "+me.text):me.target==="setimmediate"?D.postMessage(me):Ce==="callHandler"?l[me.handler](...me.args):Ce&&z("worker sent an unknown command "+Ce),he.currentProxiedOperationCallerThread=void 0},D.onerror=Le=>{var me="worker sent an error!";throw z(me+" "+Le.filename+":"+Le.lineno+": "+Le.message),Le},x&&(D.on("message",function(Le){D.onmessage({data:Le})}),D.on("error",function(Le){D.onerror(Le)}),D.on("detachedExit",function(){}));var se=[],Ee=["onExit","onAbort","print","printErr"];for(var De of Ee)l.hasOwnProperty(De)&&se.push(De);D.postMessage({cmd:"load",handlers:se,urlOrBlob:l.mainScriptUrlOrBlob||n,wasmMemory:V,wasmModule:q})},allocateUnusedWorker:function(){var D,j=w("tfjs-backend-wasm-threaded-simd.worker.js");D=new Worker(j),he.unusedWorkers.push(D)},getNewWorker:function(){return he.unusedWorkers.length==0&&(he.allocateUnusedWorker(),he.loadWasmModuleToWorker(he.unusedWorkers[0])),he.unusedWorkers.pop()}};l.PThread=he;function pt(D){for(;D.length>0;)D.shift()(l)}function At(){var D=Ap(),j=o()[D+52>>>2],se=o()[D+56>>>2],Ee=j-se;X2(j,Ee),bp(j)}l.establishStackSpace=At;function Ge(D){if(A)return Bo(2,0,D);try{re(D)}catch(j){Ne(j)}}var ze=[];function Et(D){var j=ze[D];return j||(D>=ze.length&&(ze.length=D+1),ze[D]=j=Fe.get(D)),j}function Xa(D,j){var se=Et(D)(j);It()?he.setExitStatus(se):q2(se)}l.invokeEntryPoint=Xa;function Kn(D){he.tlsInitFunctions.push(D)}function gp(D){G2(D,!y,1,!g),he.threadInitTLS()}function ku(D){A?postMessage({cmd:"cleanupThread",thread:D}):ps(D)}function yp(D,j,se,Ee){return A?Bo(3,1,D,j,se,Ee):na(D,j,se,Ee)}function na(D,j,se,Ee){if(typeof SharedArrayBuffer>"u")return z("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var De=[],Le=0;if(A&&(De.length===0||Le))return yp(D,j,se,Ee);var me={startRoutine:se,pthread_ptr:D,arg:Ee,transferList:De};return A?(me.cmd="spawnThread",postMessage(me,De),0):cs(me)}function vr(){return 65536}var xp=!0;function S4(){return xp}function Sh(D){Atomics.store(o(),D>>2,1),Ap()&&j2(D),Atomics.compareExchange(o(),D>>2,1,0)}l.executeNotifiedProxyingQueue=Sh;function C4(D,j,se,Ee){if(D==j)setTimeout(()=>Sh(Ee));else if(A)postMessage({targetThread:D,cmd:"processProxyingQueue",queue:Ee});else{var De=he.pthreads[D];if(!De)return;De.postMessage({cmd:"processProxyingQueue",queue:Ee})}return 1}function N4(D,j,se){return-1}function T4(){qn("")}function Iu(D){Iu.shown||(Iu.shown={}),Iu.shown[D]||(Iu.shown[D]=1,x&&(D="warning: "+D),z(D))}function R4(){x||y||Iu("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function E4(){return Date.now()}function z2(){return 4294901760}function _4(){return z2()}var Ch;x?Ch=()=>{var D=process.hrtime();return D[0]*1e3+D[1]/1e6}:Ch=()=>performance.timeOrigin+performance.now();function $4(D,j,se){i().copyWithin(D>>>0,j>>>0,j+se>>>0)}function M4(){return x?hI().cpus().length:navigator.hardwareConcurrency}function F4(D){var j=Rh(),se=D();return bp(j),se}function Bo(D,j){var se=arguments.length-2,Ee=arguments;return F4(()=>{for(var De=se,Le=vp(De*8),me=Le>>3,Ce=0;Ce<se;Ce++){var bt=Ee[2+Ce];d()[me+Ce>>>0]=bt}return H2(D,De,Le,j)})}var Nh=[];function P4(D,j,se){Nh.length=j;for(var Ee=se>>3,De=0;De<j;De++)Nh[De]=d()[Ee+De>>>0];var Le=D<0,me=Le?hp[-D-1]:G4[D];return me.apply(null,Nh)}function O4(D){try{return V.grow(D-le.byteLength+65535>>>16),Xe(V.buffer),1}catch{}}function D4(D){var j=i().length;if(D=D>>>0,D<=j)return!1;var se=z2();if(D>se)return!1;let Ee=(bt,Ka)=>bt+(Ka-bt%Ka)%Ka;for(var De=1;De<=4;De*=2){var Le=j*(1+.2/De);Le=Math.min(Le,D+100663296);var me=Math.min(se,Ee(Math.max(D,Le),65536)),Ce=O4(me);if(Ce)return!0}return!1}function z4(){throw"unwind"}function L2(D){return A?Bo(4,1,D):52}function W2(D,j,se,Ee,De){return A?Bo(5,1,D,j,se,Ee,De):70}var L4=[null,[],[]];function W4(D,j){var se=L4[D];j===0||j===10?((D===1?$:z)(J(se,0)),se.length=0):se.push(j)}function B2(D,j,se,Ee){if(A)return Bo(6,1,D,j,se,Ee);for(var De=0,Le=0;Le<se;Le++){var me=u()[j>>>2],Ce=u()[j+4>>>2];j+=8;for(var bt=0;bt<Ce;bt++)W4(D,i()[me+bt>>>0]);De+=Ce}return u()[Ee>>>2]=De,0}function V2(D){var j=l["_"+D];return j}function B4(D,j){s().set(D,j>>>0)}function V4(D,j,se,Ee,De){var Le={string:Ya=>{var Vo=0;if(Ya!=null&&Ya!==0){var Z2=(Ya.length<<2)+1;Vo=vp(Z2),xe(Ya,Vo,Z2)}return Vo},array:Ya=>{var Vo=vp(Ya.length);return B4(Ya,Vo),Vo}};function me(Ya){return j==="string"?ee(Ya):j==="boolean"?!!Ya:Ya}var Ce=V2(D),bt=[],Ka=0;if(Ee)for(var Yn=0;Yn<Ee.length;Yn++){var Y2=Le[se[Yn]];Y2?(Ka===0&&(Ka=Rh()),bt[Yn]=Y2(Ee[Yn])):bt[Yn]=Ee[Yn]}var Eh=Ce.apply(null,bt);function j4(Ya){return Ka!==0&&bp(Ka),me(Ya)}return Eh=j4(Eh),Eh}function U4(D,j,se,Ee){se=se||[];var De=se.every(me=>me==="number"||me==="boolean"),Le=j!=="string";return Le&&De&&!Ee?V2(D):function(){return V4(D,j,se,arguments)}}he.init();var G4=[null,mp,Ge,yp,L2,W2,B2],U2={__emscripten_init_main_thread_js:gp,__emscripten_thread_cleanup:ku,__pthread_create_js:na,_emscripten_default_pthread_stack_size:vr,_emscripten_get_now_is_monotonic:S4,_emscripten_notify_task_queue:C4,_emscripten_set_offscreencanvas_size:N4,abort:T4,emscripten_check_blocking_allowed:R4,emscripten_date_now:E4,emscripten_get_heap_max:_4,emscripten_get_now:Ch,emscripten_memcpy_big:$4,emscripten_num_logical_cores:M4,emscripten_receive_on_main_thread_js:P4,emscripten_resize_heap:D4,emscripten_unwind_to_js_event_loop:z4,exit:re,fd_close:L2,fd_seek:W2,fd_write:B2,memory:V||l.wasmMemory};cp(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},l._init=function(){return(l._init=l.asm.init).apply(null,arguments)},l._init_with_threads_count=function(){return(l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},l._get_threads_count=function(){return(l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.register_tensor).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.dispose_data).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.dispose).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.Abs).apply(null,arguments)},l._Acos=function(){return(l._Acos=l.asm.Acos).apply(null,arguments)},l._Acosh=function(){return(l._Acosh=l.asm.Acosh).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.Add).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.AddN).apply(null,arguments)},l._All=function(){return(l._All=l.asm.All).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.Any).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.ArgMax).apply(null,arguments)},l._ArgMin=function(){return(l._ArgMin=l.asm.ArgMin).apply(null,arguments)},l._Asin=function(){return(l._Asin=l.asm.Asin).apply(null,arguments)},l._Asinh=function(){return(l._Asinh=l.asm.Asinh).apply(null,arguments)},l._Atan=function(){return(l._Atan=l.asm.Atan).apply(null,arguments)},l._Atan2=function(){return(l._Atan2=l.asm.Atan2).apply(null,arguments)},l._Atanh=function(){return(l._Atanh=l.asm.Atanh).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.AvgPool).apply(null,arguments)},l._AvgPool3D=function(){return(l._AvgPool3D=l.asm.AvgPool3D).apply(null,arguments)},l._AvgPool3DGrad=function(){return(l._AvgPool3DGrad=l.asm.AvgPool3DGrad).apply(null,arguments)},l._AvgPoolGrad=function(){return(l._AvgPoolGrad=l.asm.AvgPoolGrad).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},l._Bincount=function(){return(l._Bincount=l.asm.Bincount).apply(null,arguments)},l._BitwiseAnd=function(){return(l._BitwiseAnd=l.asm.BitwiseAnd).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.Ceil).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Conv2D).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},l._Conv3D=function(){return(l._Conv3D=l.asm.Conv3D).apply(null,arguments)},l._Conv3DBackpropFilterV2=function(){return(l._Conv3DBackpropFilterV2=l.asm.Conv3DBackpropFilterV2).apply(null,arguments)},l._Conv3DBackpropInputV2=function(){return(l._Conv3DBackpropInputV2=l.asm.Conv3DBackpropInputV2).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Cos).apply(null,arguments)},l._Cosh=function(){return(l._Cosh=l.asm.Cosh).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},l._Cumprod=function(){return(l._Cumprod=l.asm.Cumprod).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.Cumsum).apply(null,arguments)},l._DenseBincount=function(){return(l._DenseBincount=l.asm.DenseBincount).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},l._Diag=function(){return(l._Diag=l.asm.Diag).apply(null,arguments)},l._Dilation2D=function(){return(l._Dilation2D=l.asm.Dilation2D).apply(null,arguments)},l._Dilation2DBackpropFilter=function(){return(l._Dilation2DBackpropFilter=l.asm.Dilation2DBackpropFilter).apply(null,arguments)},l._Dilation2DBackpropInput=function(){return(l._Dilation2DBackpropInput=l.asm.Dilation2DBackpropInput).apply(null,arguments)},l._Elu=function(){return(l._Elu=l.asm.Elu).apply(null,arguments)},l._EluGrad=function(){return(l._EluGrad=l.asm.EluGrad).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.Equal).apply(null,arguments)},l._Erf=function(){return(l._Erf=l.asm.Erf).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Exp).apply(null,arguments)},l._Expm1=function(){return(l._Expm1=l.asm.Expm1).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm.Floor).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.Gather).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.GatherNd).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.Greater).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},l._IsFinite=function(){return(l._IsFinite=l.asm.IsFinite).apply(null,arguments)},l._IsInf=function(){return(l._IsInf=l.asm.IsInf).apply(null,arguments)},l._IsNan=function(){return(l._IsNan=l.asm.IsNan).apply(null,arguments)},l._LRN=function(){return(l._LRN=l.asm.LRN).apply(null,arguments)},l._LRNGrad=function(){return(l._LRNGrad=l.asm.LRNGrad).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.Less).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.LessEqual).apply(null,arguments)},l._LinSpace=function(){return(l._LinSpace=l.asm.LinSpace).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.Log).apply(null,arguments)},l._Log1p=function(){return(l._Log1p=l.asm.Log1p).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},l._LogicalNot=function(){return(l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},l._LogicalOr=function(){return(l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},l._LogicalXor=function(){return(l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.Max).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.MaxPool).apply(null,arguments)},l._MaxPool3D=function(){return(l._MaxPool3D=l.asm.MaxPool3D).apply(null,arguments)},l._MaxPool3DGrad=function(){return(l._MaxPool3DGrad=l.asm.MaxPool3DGrad).apply(null,arguments)},l._MaxPoolGrad=function(){return(l._MaxPoolGrad=l.asm.MaxPoolGrad).apply(null,arguments)},l._MaxPoolWithArgmax=function(){return(l._MaxPoolWithArgmax=l.asm.MaxPoolWithArgmax).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.Maximum).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.Mean).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.Min).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.Minimum).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},l._Mod=function(){return(l._Mod=l.asm.Mod).apply(null,arguments)},l._Multinomial=function(){return(l._Multinomial=l.asm.Multinomial).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.Multiply).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.Neg).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.NotEqual).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.OneHot).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.PadV2).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Pow).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Prelu).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Prod).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.RealDiv).apply(null,arguments)},l._Reciprocal=function(){return(l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Relu).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Relu6).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},l._ResizeBilinearGrad=function(){return(l._ResizeBilinearGrad=l.asm.ResizeBilinearGrad).apply(null,arguments)},l._ResizeNearestNeighbor=function(){return(l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},l._ResizeNearestNeighborGrad=function(){return(l._ResizeNearestNeighborGrad=l.asm.ResizeNearestNeighborGrad).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Reverse).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Round).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},l._SearchSorted=function(){return(l._SearchSorted=l.asm.SearchSorted).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l._Selu=function(){return(l._Selu=l.asm.Selu).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},l._Sign=function(){return(l._Sign=l.asm.Sign).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Sin).apply(null,arguments)},l._Sinh=function(){return(l._Sinh=l.asm.Sinh).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Softmax).apply(null,arguments)},l._Softplus=function(){return(l._Softplus=l.asm.Softplus).apply(null,arguments)},l._SparseFillEmptyRows=function(){return(l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},l._SparseReshape=function(){return(l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},l._SparseSegmentReduction=function(){return(l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l._SparseToDense=function(){return(l._SparseToDense=l.asm.SparseToDense).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Sqrt).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Square).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Step).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Sub).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Sum).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Tan).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Tanh).apply(null,arguments)},l._TensorScatterUpdate=function(){return(l._TensorScatterUpdate=l.asm.TensorScatterUpdate).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Tile).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.TopK).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.Transform).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Transpose).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},l._malloc=function(){return(l._malloc=l.asm.malloc).apply(null,arguments)},l._free=function(){return(l._free=l.asm.free).apply(null,arguments)},l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)};var Ap=l._pthread_self=function(){return(Ap=l._pthread_self=l.asm.pthread_self).apply(null,arguments)};l.___errno_location=function(){return(l.___errno_location=l.asm.__errno_location).apply(null,arguments)};var G2=l.__emscripten_thread_init=function(){return(G2=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)};l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},l._emscripten_main_thread_process_queued_calls=function(){return(l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var H2=l._emscripten_run_in_main_runtime_thread_js=function(){return(H2=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};l._emscripten_dispatch_to_thread_=function(){return(l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var j2=l.__emscripten_proxy_execute_task_queue=function(){return(j2=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Th=l.__emscripten_thread_free_data=function(){return(Th=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},q2=l.__emscripten_thread_exit=function(){return(q2=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},X2=l._emscripten_stack_set_limits=function(){return(X2=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},Rh=l.stackSave=function(){return(Rh=l.stackSave=l.asm.stackSave).apply(null,arguments)},bp=l.stackRestore=function(){return(bp=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},vp=l.stackAlloc=function(){return(vp=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)};l.dynCall_iijjiiii=function(){return(l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},l.keepRuntimeAlive=It,l.wasmMemory=V,l.cwrap=U4,l.ExitStatus=Xn,l.PThread=he;var wp;qa=function D(){wp||K2(),wp||(qa=D)};function K2(D){if(Kt>0)return;if(A){p(l),Xt(),startWorker(l);return}if(ga(),Kt>0)return;function j(){wp||(wp=!0,l.calledRun=!0,!G&&(Xt(),p(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),ya()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),j()},1)):j()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();K2();var kp;h&&(kp={uncaughtException:process.listeners("uncaughtException").filter(function(D){return!h.uncaughtException.indexOf(D)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(D){return!h.unhandledRejection.indexOf(D)>-1})});var Ip;if(typeof WasmBackendModule<"u")Ip=WasmBackendModule;else if(typeof r<"u")Ip=r;else throw new Error("Could not find wasm module in post.js");if(kp){var H4=Ip._dispose;Ip._dispose=function(){H4(),kp.uncaughtException.forEach(function(D){process.removeListener("uncaughtException",D)}),kp.unhandledRejection.forEach(function(D){process.removeListener("unhandledRejection",D)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=a)}),mI=zt((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),gI=zt((e,t)=>{var a=(()=>{var n=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(n=n||__filename),function(r){r=r||{};var s=typeof r<"u"?r:{},i,o;s.ready=new Promise(function(Y,re){i=Y,o=re});var u;typeof process<"u"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var d=Object.assign({},s),l=typeof window=="object",p=typeof importScripts=="function",c=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",h="";function f(Y){return s.locateFile?s.locateFile(Y,h):h+Y}var m,g,y;if(c){var x=Hx(),A=jx();p?h=A.dirname(h)+"/":h=__dirname+"/",m=(Y,re)=>(Y=Ye(Y)?new URL(Y):A.normalize(Y),x.readFileSync(Y,re?void 0:"utf8")),y=Y=>{var re=m(Y,!0);return re.buffer||(re=new Uint8Array(re)),re},g=(Y,re,Ne)=>{Y=Ye(Y)?new URL(Y):A.normalize(Y),x.readFile(Y,function(he,pt){he?Ne(he):re(pt.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(Y){if(!(Y instanceof It))throw Y}),process.on("unhandledRejection",function(Y){throw Y}),s.inspect=function(){return"[Emscripten Module object]"}}else(l||p)&&(p?h=self.location.href:typeof document<"u"&&document.currentScript&&(h=document.currentScript.src),n&&(h=n),h.indexOf("blob:")!==0?h=h.substr(0,h.replace(/[?#].*/,"").lastIndexOf("/")+1):h="",m=Y=>{var re=new XMLHttpRequest;return re.open("GET",Y,!1),re.send(null),re.responseText},p&&(y=Y=>{var re=new XMLHttpRequest;return re.open("GET",Y,!1),re.responseType="arraybuffer",re.send(null),new Uint8Array(re.response)}),g=(Y,re,Ne)=>{var he=new XMLHttpRequest;he.open("GET",Y,!0),he.responseType="arraybuffer",he.onload=()=>{if(he.status==200||he.status==0&&he.response){re(he.response);return}Ne()},he.onerror=Ne,he.send(null)});var b=s.print||console.log.bind(console),w=s.printErr||console.warn.bind(console);Object.assign(s,d),d=null,s.arguments&&s.arguments,s.thisProgram&&s.thisProgram,s.quit&&s.quit;var S;s.wasmBinary&&(S=s.wasmBinary),s.noExitRuntime,typeof WebAssembly!="object"&&Oe("no native wasm support detected");var N,T=!1,_=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function P(Y,re,Ne){re>>>=0;for(var he=re+Ne,pt=re;Y[pt]&&!(pt>=he);)++pt;if(pt-re>16&&Y.buffer&&_)return _.decode(Y.subarray(re,pt));for(var At="";re<pt;){var Ge=Y[re++];if(!(Ge&128)){At+=String.fromCharCode(Ge);continue}var ze=Y[re++]&63;if((Ge&224)==192){At+=String.fromCharCode((Ge&31)<<6|ze);continue}var Et=Y[re++]&63;if((Ge&240)==224?Ge=(Ge&15)<<12|ze<<6|Et:Ge=(Ge&7)<<18|ze<<12|Et<<6|Y[re++]&63,Ge<65536)At+=String.fromCharCode(Ge);else{var Xa=Ge-65536;At+=String.fromCharCode(55296|Xa>>10,56320|Xa&1023)}}return At}function E(Y,re){return Y>>>=0,Y?P(M,Y,re):""}function I(Y,re,Ne,he){if(Ne>>>=0,!(he>0))return 0;for(var pt=Ne,At=Ne+he-1,Ge=0;Ge<Y.length;++Ge){var ze=Y.charCodeAt(Ge);if(ze>=55296&&ze<=57343){var Et=Y.charCodeAt(++Ge);ze=65536+((ze&1023)<<10)|Et&1023}if(ze<=127){if(Ne>=At)break;re[Ne++>>>0]=ze}else if(ze<=2047){if(Ne+1>=At)break;re[Ne++>>>0]=192|ze>>6,re[Ne++>>>0]=128|ze&63}else if(ze<=65535){if(Ne+2>=At)break;re[Ne++>>>0]=224|ze>>12,re[Ne++>>>0]=128|ze>>6&63,re[Ne++>>>0]=128|ze&63}else{if(Ne+3>=At)break;re[Ne++>>>0]=240|ze>>18,re[Ne++>>>0]=128|ze>>12&63,re[Ne++>>>0]=128|ze>>6&63,re[Ne++>>>0]=128|ze&63}}return re[Ne>>>0]=0,Ne-pt}function F(Y,re,Ne){return I(Y,M,re,Ne)}var $,z,M,H;function V(Y){$=Y,s.HEAP8=z=new Int8Array(Y),s.HEAP16=new Int16Array(Y),s.HEAP32=new Int32Array(Y),s.HEAPU8=M=new Uint8Array(Y),s.HEAPU16=new Uint16Array(Y),s.HEAPU32=H=new Uint32Array(Y),s.HEAPF32=new Float32Array(Y),s.HEAPF64=new Float64Array(Y)}s.INITIAL_MEMORY;var q=[],G=[],B=[];function K(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)ee(s.preRun.shift());ga(q)}function X(){ga(G)}function J(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)xe(s.postRun.shift());ga(B)}function ee(Y){q.unshift(Y)}function ye(Y){G.unshift(Y)}function xe(Y){B.unshift(Y)}var le=0,Se=null;function Re(Y){le++,s.monitorRunDependencies&&s.monitorRunDependencies(le)}function Me(Y){if(le--,s.monitorRunDependencies&&s.monitorRunDependencies(le),le==0&&Se){var re=Se;Se=null,re()}}function Oe(Y){s.onAbort&&s.onAbort(Y),Y="Aborted("+Y+")",w(Y),T=!0,Y+=". Build with -sASSERTIONS for more info.";var re=new WebAssembly.RuntimeError(Y);throw o(re),re}var ot="data:application/octet-stream;base64,";function Xe(Y){return Y.startsWith(ot)}function Ye(Y){return Y.startsWith("file://")}var Fe;Fe="tfjs-backend-wasm.wasm",Xe(Fe)||(Fe=f(Fe));function at(Y){try{if(Y==Fe&&S)return new Uint8Array(S);if(y)return y(Y);throw"both async and sync fetching of the wasm failed"}catch(re){Oe(re)}}function dt(){if(!S&&(l||p)){if(typeof fetch=="function"&&!Ye(Fe))return fetch(Fe,{credentials:"same-origin"}).then(function(Y){if(!Y.ok)throw"failed to load wasm binary file at '"+Fe+"'";return Y.arrayBuffer()}).catch(function(){return at(Fe)});if(g)return new Promise(function(Y,re){g(Fe,function(Ne){Y(new Uint8Array(Ne))},re)})}return Promise.resolve().then(function(){return at(Fe)})}function Ma(){var Y={env:pp,wasi_snapshot_preview1:pp};function re(Ge,ze){var Et=Ge.exports;s.asm=Et,N=s.asm.memory,V(N.buffer),s.asm.__indirect_function_table,ye(s.asm.__wasm_call_ctors),Me()}Re();function Ne(Ge){re(Ge.instance)}function he(Ge){return dt().then(function(ze){return WebAssembly.instantiate(ze,Y)}).then(function(ze){return ze}).then(Ge,function(ze){w("failed to asynchronously prepare wasm: "+ze),Oe(ze)})}function pt(){return!S&&typeof WebAssembly.instantiateStreaming=="function"&&!Xe(Fe)&&!Ye(Fe)&&!c&&typeof fetch=="function"?fetch(Fe,{credentials:"same-origin"}).then(function(Ge){var ze=WebAssembly.instantiateStreaming(Ge,Y);return ze.then(Ne,function(Et){return w("wasm streaming compile failed: "+Et),w("falling back to ArrayBuffer instantiation"),he(Ne)})}):he(Ne)}if(s.instantiateWasm)try{var At=s.instantiateWasm(Y,re);return At}catch(Ge){w("Module.instantiateWasm callback failed with error: "+Ge),o(Ge)}return pt().catch(o),{}}function It(Y){this.name="ExitStatus",this.message="Program terminated with exit("+Y+")",this.status=Y}function ga(Y){for(;Y.length>0;)Y.shift()(s)}function Xt(){Oe("")}function ya(){return 4294901760}function rn(){return ya()}function Fa(Y,re,Ne){M.copyWithin(Y>>>0,re>>>0,re+Ne>>>0)}function xa(Y){try{return N.grow(Y-$.byteLength+65535>>>16),V(N.buffer),1}catch{}}function Kt(Y){var re=M.length;Y=Y>>>0;var Ne=ya();if(Y>Ne)return!1;let he=(Et,Xa)=>Et+(Xa-Et%Xa)%Xa;for(var pt=1;pt<=4;pt*=2){var At=re*(1+.2/pt);At=Math.min(At,Y+100663296);var Ge=Math.min(Ne,he(Math.max(Y,At),65536)),ze=xa(Ge);if(ze)return!0}return!1}function qa(Y){return 52}function Ar(Y,re,Ne,he,pt){return 70}var vu=[null,[],[]];function qn(Y,re){var Ne=vu[Y];re===0||re===10?((Y===1?b:w)(P(Ne,0)),Ne.length=0):Ne.push(re)}function wu(Y,re,Ne,he){for(var pt=0,At=0;At<Ne;At++){var Ge=H[re>>>2],ze=H[re+4>>>2];re+=8;for(var Et=0;Et<ze;Et++)qn(Y,M[Ge+Et>>>0]);pt+=ze}return H[he>>>2]=pt,0}function Fn(Y){var re=s["_"+Y];return re}function br(Y,re){z.set(Y,re>>>0)}function Yt(Y,re,Ne,he,pt){var At={string:na=>{var vr=0;if(na!=null&&na!==0){var xp=(na.length<<2)+1;vr=Xn(xp),F(na,vr,xp)}return vr},array:na=>{var vr=Xn(na.length);return br(na,vr),vr}};function Ge(na){return re==="string"?E(na):re==="boolean"?!!na:na}var ze=Fn(Y),Et=[],Xa=0;if(he)for(var Kn=0;Kn<he.length;Kn++){var gp=At[Ne[Kn]];gp?(Xa===0&&(Xa=cp()),Et[Kn]=gp(he[Kn])):Et[Kn]=he[Kn]}var ku=ze.apply(null,Et);function yp(na){return Xa!==0&&hp(Xa),Ge(na)}return ku=yp(ku),ku}function dp(Y,re,Ne,he){Ne=Ne||[];var pt=Ne.every(Ge=>Ge==="number"||Ge==="boolean"),At=re!=="string";return At&&pt&&!he?Fn(Y):function(){return Yt(Y,re,Ne,arguments)}}var pp={abort:Xt,emscripten_get_heap_max:rn,emscripten_memcpy_big:Fa,emscripten_resize_heap:Kt,fd_close:qa,fd_seek:Ar,fd_write:wu};Ma(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)};var cp=s.stackSave=function(){return(cp=s.stackSave=s.asm.stackSave).apply(null,arguments)},hp=s.stackRestore=function(){return(hp=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},Xn=s.stackAlloc=function(){return(Xn=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=dp;var Wo;Se=function Y(){Wo||fp(),Wo||(Se=Y)};function fp(Y){if(le>0||(K(),le>0))return;function re(){Wo||(Wo=!0,s.calledRun=!0,!T&&(X(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),J()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),re()},1)):re()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();fp();var ps;u&&(ps={uncaughtException:process.listeners("uncaughtException").filter(function(Y){return!u.uncaughtException.indexOf(Y)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Y){return!u.unhandledRejection.indexOf(Y)>-1})});var cs;if(typeof r<"u")cs=r;else if(typeof WasmBackendModuleThreadedSimd<"u")cs=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(ps){var mp=cs._dispose;cs._dispose=function(){mp(),ps.uncaughtException.forEach(function(Y){process.removeListener("uncaughtException",Y)}),ps.unhandledRejection.forEach(function(Y){process.removeListener("unhandledRejection",Y)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=a:typeof define=="function"&&define.amd?define([],function(){return a}):typeof e=="object"&&(e.WasmBackendModule=a)}),xd=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},wl=class{refCount(e){return Pa("refCount")}incRef(e){return Pa("incRef")}timerAvailable(){return!0}time(e){return Pa("time")}read(e){return Pa("read")}readSync(e){return Pa("readSync")}readToGPU(e,t){return Pa("readToGPU")}numDataIds(){return Pa("numDataIds")}disposeData(e,t){return Pa("disposeData")}write(e,t,a){return Pa("write")}move(e,t,a,n,r){return Pa("move")}createTensorFromGPUData(e,t,a){return Pa("createTensorFromGPUData")}memory(){return Pa("memory")}floatPrecision(){return Pa("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Pa("dispose")}};function Pa(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function qx(e){let t=e.length,a=0;for(;t>0;)a=Math.random()*t|0,t--,uc(e,t,a)}function yI(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let a=e.length,n=0;for(;a>0;)n=Math.random()*a|0,a--,uc(e,a,n),uc(t,a,n)}function Ku(e,t,a){return Math.max(e,Math.min(t,a))}function xI(e){return e%2===0?e:e+1}function uc(e,t,a){let n=e[t];e[t]=e[a],e[a]=n}function AI(e){let t=0;for(let a=0;a<e.length;a++)t+=e[a];return t}function bI(e,t){let a=Math.random();return t*a+(1-a)*e}function vI(e,t){let a=0;for(let n=0;n<e.length;n++){let r=Number(e[n])-Number(t[n]);a+=r*r}return a}function O(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function fa(e,t,a=""){O(dr(e,t),()=>a+` Shapes ${e} and ${t} must match`)}function Ys(e){O(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function lt(e){if(e.length===0)return 1;let t=e[0];for(let a=1;a<e.length;a++)t*=e[a];return t}function wI(e){return e.length===0}function Xx(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==null&&t[a]!==null&&e[a]!==t[a])return!1;return!0}function dr(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}function ol(e){return e%1===0}function kI(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function II(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function SI(e){let t=new Uint32Array(e);for(let a=0;a<e;++a)t[a]=a;return qx(t),t}function Gu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function CI(e,t=r=>0,a,n){return new Promise((r,s)=>{let i=0,o=()=>{if(e()){r();return}i++;let u=t(i);if(a!=null&&i>=a){s();return}n!=null?n(o,u):setTimeout(o,u)};o()})}function NI(e,t){let a=1,n=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)a*=e[s];else if(e[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==a)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(a===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%a!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${a}`);let r=e.slice();return r[n]=t/a,r}function Ad(e,t){let a=t.length;return e=e==null?t.map((n,r)=>r):[].concat(e),O(e.every(n=>n>=-a&&n<a),()=>`All values in axis param must be in range [-${a}, ${a}) but got axis ${e}`),O(e.every(n=>ol(n)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(n=>n<0?a+n:n)}function Kx(e,t){let a=[],n=[],r=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||r?null:Ad(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(a.push(e[o]),n.push(o)),s[i]<=o&&i++}e[o]!==1&&(a.push(e[o]),n.push(o))}return{newShape:a,keptDims:n}}function Yx(e,t){return R0(e,t)}function R0(e,t){let a=null;if(e==null||e==="float32")a=new Float32Array(t);else if(e==="int32")a=new Int32Array(t);else if(e==="bool")a=new Uint8Array(t);else if(e==="string")a=new Array(t);else throw new Error(`Unknown data type ${e}`);return a}function Zx(e,t){for(let a=0;a<e.length;a++){let n=e[a];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function Jx(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function TI(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function dc(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Qx(e){if(e==null)return 0;let t=0;return e.forEach(a=>t+=a.length),t}function Rr(e){return typeof e=="string"||e instanceof String}function eA(e){return typeof e=="boolean"}function tA(e){return typeof e=="number"}function bd(e){return Array.isArray(e)?bd(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":tA(e)?"float32":Rr(e)?"string":eA(e)?"bool":"float32"}function Wr(e){return!!(e&&e.constructor&&e.call&&e.apply)}function pc(e,t){for(let a=t;a<e;++a)if(e%a===0)return a;return e}function kl(e){let t=e.length;if(t<2)return[];let a=new Array(t-1);a[t-2]=e[t-1];for(let n=t-3;n>=0;--n)a[n]=a[n+1]*e[n+1];return a}function aA(e,t,a,n=!1){let r=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let i=0;i<s;i++)r[i]=a[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((u,d)=>u*d)*(n?2:1);for(let u=0;u<s;u++)r[u]=aA(e+u*o,i,a,n)}return r}function tl(e,t,a=!1){if(e.length===0)return t[0];let n=e.reduce((r,s)=>r*s)*(a?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${a?" for a complex tensor":""}.`);return aA(0,e,t,a)}function RI(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function E0(e,t){let a=Oc(e,t);for(let n=0;n<a.length;n++)a[n]=1;return a}function Oc(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function EI(e,t){let a=e.reduce((n,r)=>n*r,1);if(t==null||t==="float32")return tl(e,new Float32Array(a));if(t==="int32")return tl(e,new Int32Array(a));if(t==="bool")return tl(e,new Uint8Array(a));throw new Error(`Unknown data type ${t}`)}function ja(e){e.forEach(t=>{O(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function _I(e,t,a){if(t===0)return 0;if(t===1)return e[0];let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=a[r]*e[r];return n}function $I(e,t,a){if(t===0)return[];if(t===1)return[e];let n=new Array(t);for(let r=0;r<n.length-1;++r)n[r]=Math.floor(e/a[r]),e-=n[r]*a[r];return n[n.length-1]=e,n}function Dc(e){return e&&e.then&&typeof e.then=="function"}var J2="tfjsflags",nA=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=MI,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,a){if(this.flagRegistry[e]={evaluationFn:t,setHook:a},this.urlFlags[e]!=null){let n=this.urlFlags[e];U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${n}.`),this.set(e,n)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Dc(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);J2 in e&&e[J2].split(",").forEach(t=>{let[a,n]=t.split(":");this.urlFlags[a]=PI(a,n)})}};function MI(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(a,...n)=>(FI(t,n[0],n[1]),n.join("="))),t}function FI(e,t,a){e[decodeURIComponent(t)]=decodeURIComponent(a||"")}function PI(e,t){let a=t.toLowerCase();return a==="true"||a==="false"?a==="true":`${+a}`===a?+a:t}function U(){return _0}var _0=null;function OI(e){_0=e}var _h;function rA(){if(_h==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");_h=e}return _h}function DI(){let e=rA();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function $0(e,t){let a=DI();if(a.has(e))return a.get(e);{let n=t();return a.set(e,n),a.get(e)}}var zI="Abs",Zs="Acos",Js="Acosh",LI="Add",Qs="AddN",WI="All",BI="Any",Il="ArgMax",Sl="ArgMin",ei="Asin",ti="Asinh",ai="Atan",ni="Atanh",ri="Atan2",si="AvgPool",vd="AvgPoolGrad",Cl="AvgPool3D",wd="AvgPool3DGrad",ii="BatchMatMul",Nl="BatchToSpaceND",oi="Bincount",Tl="BitwiseAnd",VI="BroadcastTo",Rl="BroadcastArgs",li="Cast",ui="Ceil",Qr="ClipByValue",kd="Complex",Id="ComplexAbs",El="Concat",di="Conv2D",Sd="Conv2DBackpropFilter",pi="Conv2DBackpropInput",ci="Conv3D",_l="Conv3DBackpropFilterV2",hi="Conv3DBackpropInputV2",UI="Cos",fi="Cosh",mi="Cumprod",gi="Cumsum",yi="CropAndResize",$l="DenseBincount",xi="DepthToSpace",Ai="DepthwiseConv2dNative",Cd="DepthwiseConv2dNativeBackpropFilter",Nd="DepthwiseConv2dNativeBackpropInput",Ml="Diag",bi="Dilation2D",ll="Dilation2DBackpropInput",ul="Dilation2DBackpropFilter",Td="Draw",vi="RealDiv",Rd="Einsum",GI="Elu",Fl="EluGrad",HI="Erf",wi="Equal",jI="Exp",Pl="ExpandDims",ki="Expm1",qI="FFT",Ol="Fill",Ii="FlipLeftRight",Si="Floor",Ci="FloorDiv",Ni="FusedBatchNorm",Dl="GatherV2",Ti="GatherNd",Ri="Greater",Ei="GreaterEqual",_i="Identity",Ed="IFFT",_d="Imag",$i="IsFinite",Mi="IsInf",Fi="IsNan",Pi="LeakyRelu",Oi="Less",Di="LessEqual",zi="LinSpace",XI="Log",Li="Log1p",Wi="LogicalAnd",Bi="LogicalNot",Vi="LogicalOr",sA="LogicalXor",KI="LogSoftmax",YI="LowerBound",ZI="LRN",zl="LRNGrad",JI="MatrixBandPart",QI="Max",Ui="Maximum",Gi="MaxPool",$d="MaxPoolGrad",Ll="MaxPool3D",Md="MaxPool3DGrad",Wl="MaxPoolWithArgmax",Hi="Mean",eS="Min",ji="Minimum",qi="MirrorPad",tS="Mod",Xi="Multinomial",Ki="Multiply",aS="Neg",Yi="NotEqual",Zi="NonMaxSuppressionV3",Bl="NonMaxSuppressionV4",Ji="NonMaxSuppressionV5",Vl="OnesLike",Qi="OneHot",Ul="Pack",eo="PadV2",nS="Pool",rS="Pow",to="Prelu",ao="Prod",zc="RaggedGather",Lc="RaggedRange",Wc="RaggedTensorToTensor",Gl="Range",Fd="Real",no="Reciprocal",ro="Relu",Hl="Reshape",so="ResizeNearestNeighbor",jl="ResizeNearestNeighborGrad",io="ResizeBilinear",ql="ResizeBilinearGrad",oo="Relu6",lo="Reverse",uo="Round",po="Rsqrt",co="ScatterNd",ho="TensorScatterUpdate",fo="SearchSorted",Xl="Select",mo="Selu",Kl="Slice",sS="Sin",go="Sinh",yo="Sign",xo="Sigmoid",Ao="Softplus",bo="Sqrt",iS="Sum",Yl="SpaceToBatchND",Zl="SplitV",vo="Softmax",Pd="SparseFillEmptyRows",Jl="SparseReshape",Ql="SparseSegmentMean",eu="SparseSegmentSum",wo="SparseToDense",ko="SquaredDifference",Od="Square",Dd="StaticRegexReplace",Io="StridedSlice",tu="StringNGrams",zd="StringSplit",Ld="StringToHashBucketFast",oS="Sub",lS="Tan",So="Tanh",es="Tile",Co="TopK",No="Transform",rr="Transpose",Wd="Unique",au="Unpack",Bd="UnsortedSegmentSum",uS="UpperBound",nu="ZerosLike",ts="Step",Yu="FromPixels",To="RotateWithOffset",Br="_FusedMatMul",Vr="FusedConv2D",Ur="FusedDepthwiseConv2D";function Tr(...e){U().getBool("IS_TEST")||U().getBool("PROD")||console.warn(...e)}function dS(...e){U().getBool("IS_TEST")||U().getBool("PROD")||console.log(...e)}var dl=$0("kernelRegistry",()=>new Map),Zu=$0("gradRegistry",()=>new Map);function Ju(e,t){let a=M0(e,t);return dl.get(a)}function bf(e){return Zu.get(e)}function Ds(e){let t=dl.entries(),a=[];for(;;){let{done:n,value:r}=t.next();if(n)break;let[s,i]=r,[o]=s.split("_");o===e&&a.push(i)}return a}function Sn(e){let{kernelName:t,backendName:a}=e,n=M0(t,a);dl.has(n)&&Tr(`The kernel '${t}' for backend '${a}' is already registered`),dl.set(n,e)}function pS(e){let{kernelName:t}=e;Zu.has(t)&&U().getBool("DEBUG")&&Tr(`Overriding the gradient for '${t}'`),Zu.set(t,e)}function cS(e,t){let a=M0(e,t);if(!dl.has(a))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);dl.delete(a)}function hS(e){if(!Zu.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Zu.delete(e)}function fS(e,t){Ds(e).forEach(a=>{let n=Object.assign({},a,{backendName:t});Sn(n)})}function M0(e,t){return`${t}_${e}`}var v={};je(v,{arraysEqual:()=>dr,arraysEqualWithNull:()=>Xx,assert:()=>O,assertNonNegativeIntegerDimensions:()=>ja,assertNonNull:()=>Ys,assertShapesMatch:()=>fa,bytesFromStringArray:()=>Qx,bytesPerElement:()=>dc,checkConversionForErrors:()=>Zx,clamp:()=>Ku,computeStrides:()=>kl,convertBackendValuesAndArrayBuffer:()=>RI,createScalarValue:()=>bS,createShuffledIndices:()=>SI,decodeString:()=>cc,distSquared:()=>vI,encodeString:()=>Ud,fetch:()=>wS,fingerPrint64:()=>AS,flatten:()=>Gr,getArrayFromDType:()=>R0,getTypedArrayFromDType:()=>Yx,hasEncodingLoss:()=>TI,hexToLong:()=>Vd,indexToLoc:()=>$I,inferDtype:()=>bd,inferFromImplicitShape:()=>NI,isBoolean:()=>eA,isFunction:()=>Wr,isInt:()=>ol,isNumber:()=>tA,isPromise:()=>Dc,isScalarShape:()=>wI,isString:()=>Rr,isTypedArray:()=>Ht,isValidDtype:()=>Jx,locToIndex:()=>_I,makeOnesTypedArray:()=>E0,makeZerosNestedTypedArray:()=>EI,makeZerosTypedArray:()=>Oc,nearestDivisor:()=>pc,nearestLargerEven:()=>xI,now:()=>Qu,parseAxisParam:()=>Ad,randUniform:()=>bI,repeatedTry:()=>CI,rightPad:()=>Gu,shuffle:()=>qx,shuffleCombo:()=>yI,sizeFromShape:()=>lt,sizeToSquarishShape:()=>II,squeezeShape:()=>Kx,sum:()=>AI,swap:()=>uc,tanh:()=>kI,toNestedArray:()=>tl,toTypedArray:()=>Bc});function iA(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Q2=vl(eI()),bs=Q2.default||Q2;function Vd(e){return bs.fromString(e,!0,16)}var oA=Vd("c3a5c85c97cb3127"),ys=Vd("b492b66fbe98f273"),oa=Vd("9ae16a3b2f90404f");function vf(e){return e.xor(e.shru(47))}function lA(e,t,a){let n=e.slice(t,t+a);return bs.fromBytes(Array.from(n),!0,!0)}function ht(e,t){return lA(e,t,8)}function eg(e,t){return lA(e,t,4)}function Gt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Pr(e,t,a=Vd("9ddfea08eb382d69")){let n=e.xor(t).mul(a);n=n.xor(n.shru(47));let r=t.xor(n).mul(a);return r=r.xor(r.shru(47)),r=r.mul(a),r}function mS(e,t,a,n,r,s){r=r.add(e),s=Gt(s.add(r).add(n),21);let i=r;return r=r.add(t),r=r.add(a),s=s.add(Gt(r,44)),[r.add(n),s.add(i)]}function Sp(e,t,a,n){return mS(ht(e,t),ht(e,t+8),ht(e,t+16),ht(e,t+24),a,n)}function gS(e,t=e.length){if(t>=8){let a=oa.add(t*2),n=ht(e,0).add(oa),r=ht(e,t-8),s=Gt(r,37).mul(a).add(n),i=Gt(n,25).add(r).mul(a);return Pr(s,i,a)}if(t>=4){let a=oa.add(t*2),n=eg(e,0);return Pr(n.shl(3).add(t),eg(e,t-4),a)}if(t>0){let a=e[0],n=e[t>>1],r=e[t-1],s=a+(n<<8),i=t+(r<<2);return vf(oa.mul(s).xor(oA.mul(i))).mul(oa)}return oa}function yS(e,t=e.length){let a=oa.add(t*2),n=ht(e,0).mul(ys),r=ht(e,8),s=ht(e,t-8).mul(a),i=ht(e,t-16).mul(oa);return Pr(Gt(n.add(r),43).add(Gt(s,30)).add(i),n.add(Gt(r.add(oa),18)).add(s),a)}function xS(e,t=e.length){let a=oa.add(t*2),n=ht(e,0).mul(oa),r=ht(e,8),s=ht(e,t-8).mul(a),i=ht(e,t-16).mul(oa),o=Gt(n.add(r),43).add(Gt(s,30)).add(i),u=Pr(o,n.add(Gt(r.add(oa),18)).add(s),a),d=ht(e,16).mul(a),l=ht(e,24),p=o.add(ht(e,t-32)).mul(a),c=u.add(ht(e,t-24)).mul(a);return Pr(Gt(d.add(l),43).add(Gt(p,30)).add(c),d.add(Gt(l.add(n),18)).add(p),a)}function AS(e,t=e.length){let a=bs.fromNumber(81,!0);if(t<=32)return t<=16?gS(e,t):yS(e,t);if(t<=64)return xS(e,t);let n=a,r=a.mul(ys).add(113),s=vf(r.mul(oa).add(113)).mul(oa),i=[bs.UZERO,bs.UZERO],o=[bs.UZERO,bs.UZERO];n=n.mul(oa).add(ht(e,0));let u=0,d=(t-1>>6)*64,l=d+(t-1&63)-63;do n=Gt(n.add(r).add(i[0]).add(ht(e,u+8)),37).mul(ys),r=Gt(r.add(i[1]).add(ht(e,u+48)),42).mul(ys),n=n.xor(o[1]),r=r.add(i[0]).add(ht(e,u+40)),s=Gt(s.add(o[0]),33).mul(ys),i=Sp(e,u,i[1].mul(ys),n.add(o[0])),o=Sp(e,u+32,s.add(o[1]),r.add(ht(e,u+16))),[s,n]=[n,s],u+=64;while(u!==d);let p=ys.add(s.and(255).shl(1));return u=l,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),n=Gt(n.add(r).add(i[0]).add(ht(e,u+8)),37).mul(p),r=Gt(r.add(i[1]).add(ht(e,u+48)),42).mul(p),n=n.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(ht(e,u+40))),s=Gt(s.add(o[0]),33).mul(p),i=Sp(e,u,i[1].mul(p),n.add(o[0])),o=Sp(e,u+32,s.add(o[1]),r.add(ht(e,u+16))),[s,n]=[n,s],Pr(Pr(i[0],o[0],p).add(vf(r).mul(oA)).add(s),Pr(i[1],o[1],p).add(n),p)}function bS(e,t){return t==="string"?Ud(e):Bc([e],t)}function vS(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Bc(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Gr(e)),U().getBool("DEBUG")&&Zx(e,t),vS(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let a=new Uint8Array(e.length);for(let n=0;n<a.length;++n)Math.round(e[n])!==0&&(a[n]=1);return a}else throw new Error(`Unknown data type ${t}`)}function Qu(){return U().platform.now()}function wS(e,t){return U().platform.fetch(e,t)}function Ud(e,t="utf-8"){return t=t||"utf-8",U().platform.encode(e,t)}function cc(e,t="utf-8"){return t=t||"utf-8",U().platform.decode(e,t)}function Ht(e){return U().platform.isTypedArray!=null?U().platform.isTypedArray(e):iA(e)}function Gr(e,t=[],a=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||Dc(e)||e==null||Ht(e)&&a)t.push(e);else if(Array.isArray(e)||Ht(e))for(let n=0;n<e.length;++n)Gr(e[n],t,a);else{let n=-1;for(let r of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(r)&&(n=Math.max(n,Number(r)));for(let r=0;r<=n;r++)Gr(e[r],t,a)}return t}var kS=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new SS)}profileKernel(e,t,a){let n,r=()=>{n=a()},s,i=Qu();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(let o of n)o.dataSync();s=Promise.resolve({kernelMs:Qu()-i})}if(U().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<n.length;o++){let u=n[o];u.data().then(d=>{IS(d,u.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:a,timeMs:n,inputs:r,extraInfo:s}=e;a.forEach(i=>{Promise.all([i.data(),n,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function IS(e,t,a){if(t!=="float32")return!1;for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${a}'`),!0}return!1}var SS=class{logKernelProfile(e,t,a,n,r,s){let i=typeof n=="number"?Gu(`${n}ms`,9):n.error,o=Gu(e,25),u=t.rank,d=t.size,l=Gu(t.shape.toString(),14),p="";for(let c in r){let h=r[c];if(h!=null){let f=h.shape||t.shape,m=f.length;p+=`${c}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${u}D ${l}	%c${d}	%c${p}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function CS(e,t,a){let n={},r={};for(let u=0;u<t.length;u++)n[t[u].id]=!0;for(let u=0;u<e.length;u++){let d=e[u],l=d.inputs;for(let p in l){let c=l[p],h=!1;for(let f=0;f<t.length;f++)if(n[c.id]){d.outputs.forEach(m=>n[m.id]=!0),h=!0,r[d.id]=!0;break}if(h)break}}let s={};s[a.id]=!0;let i={};for(let u=e.length-1;u>=0;u--){let d=e[u],l=d.inputs;for(let p=0;p<d.outputs.length;p++)if(s[d.outputs[p].id]){for(let c in l)s[l[c].id]=!0,i[d.id]=!0;break}}let o=[];for(let u=0;u<e.length;u++){let d=e[u];if(r[d.id]&&i[d.id]){let l={};for(let c in d.inputs){let h=d.inputs[c];n[h.id]&&(l[c]=h)}let p=Object.assign({},d);p.inputs=l,p.outputs=d.outputs,o.push(p)}}return o}function NS(e,t,a,n){for(let r=t.length-1;r>=0;r--){let s=t[r],i=[];if(s.outputs.forEach(u=>{let d=e[u.id];d!=null?i.push(d):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let u in s.inputs){if(!(u in o))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(o)}.`);let d=a(()=>o[u]());if(d.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${d.dtype}'`);let l=s.inputs[u];if(!dr(d.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${d.shape}', which does not match the shape of the input '${l.shape}'`);if(e[l.id]==null)e[l.id]=d;else{let p=e[l.id];e[l.id]=n(p,d),p.dispose()}}}}var tg=20,Su=3,$h=7;function TS(e,t,a,n){let r=kl(t),s=RS(e,t,a,r),i=t.length,o=qp(e,t,a,r,s),u=["Tensor"];return n&&(u.push(`  dtype: ${a}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(d=>"    "+d).join(`
`)),u.join(`
`)}function RS(e,t,a,n){let r=lt(t),s=n[n.length-1],i=new Array(s).fill(0),o=t.length,u=a==="complex64"?Ru(e):e;if(o>1)for(let d=0;d<r/s;d++){let l=d*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],Tu(u[l+p],0,a).length)}return i}function Tu(e,t,a){let n;return Array.isArray(e)?n=`${parseFloat(e[0].toFixed($h))} + ${parseFloat(e[1].toFixed($h))}j`:Rr(e)?n=`'${e}'`:a==="bool"?n=uA(e):n=parseFloat(e.toFixed($h)).toString(),Gu(n,t)}function uA(e){return e===0?"false":"true"}function qp(e,t,a,n,r,s=!0){let i=a==="complex64"?2:1,o=t[0],u=t.length;if(u===0){if(a==="complex64"){let m=Ru(e);return[Tu(m[0],0,a)]}return a==="bool"?[uA(e[0])]:[e[0].toString()]}if(u===1){if(o>tg){let m=Su*i,g=Array.from(e.slice(0,m)),y=Array.from(e.slice((o-Su)*i,o*i));return a==="complex64"&&(g=Ru(g),y=Ru(y)),["["+g.map((x,A)=>Tu(x,r[A],a)).join(", ")+", ..., "+y.map((x,A)=>Tu(x,r[o-Su+A],a)).join(", ")+"]"]}return["["+(a==="complex64"?Ru(e):Array.from(e)).map((m,g)=>Tu(m,r[g],a)).join(", ")+"]"]}let d=t.slice(1),l=n.slice(1),p=n[0]*i,c=[];if(o>tg){for(let m=0;m<Su;m++){let g=m*p,y=g+p;c.push(...qp(e.slice(g,y),d,a,l,r,!1))}c.push("...");for(let m=o-Su;m<o;m++){let g=m*p,y=g+p;c.push(...qp(e.slice(g,y),d,a,l,r,m===o-1))}}else for(let m=0;m<o;m++){let g=m*p,y=g+p;c.push(...qp(e.slice(g,y),d,a,l,r,m===o-1))}let h=u===2?",":"";c[0]="["+(o>0?c[0]+h:"");for(let m=1;m<c.length-1;m++)c[m]=" "+c[m]+h;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":f),c}function Ru(e){let t=[];for(let a=0;a<e.length;a+=2)t.push([e[a],e[a+1]]);return t}var Mt=class{constructor(e,t,a){if(this.dtype=t,this.shape=e.slice(),this.size=lt(e),a!=null){let n=a.length;O(n===this.size,()=>`Length of values '${n}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=a||R0(t,this.size),this.strides=kl(e)}set(e,...t){t.length===0&&(t=[0]),O(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let a=this.locToIndex(t);this.values[a]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let a=e[e.length-1];for(let n=0;n<e.length-1;++n)a+=this.strides[n]*e[n];return this.values[a]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let a=0;a<e.length-1;++a)t+=this.strides[a]*e[a];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let a=0;a<t.length-1;++a)t[a]=Math.floor(e/this.strides[a]),e-=t[a]*this.strides[a];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return wn().makeTensor(this.values,this.shape,this.dtype)}},wn=null,Xo=null;function ES(e){wn=e}function _S(e){Xo=e}var xt=class{constructor(e,t,a,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=lt(e),this.strides=kl(e),this.dataId=a,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Xo.buffer(this.shape,this.dtype,e)}bufferSync(){return Xo.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return tl(this.shape,e,this.dtype==="complex64")}arraySync(){return tl(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=wn().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(a=>cc(a))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),wn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=wn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>cc(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await wn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),wn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Xo.print(this,e)}clone(){return this.throwIfDisposed(),Xo.clone(this)}toString(e=!1){let t=this.dataSync();return TS(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Xo.cast(this,e)}variable(e=!0,t,a){return this.throwIfDisposed(),wn().makeVariable(this,e,t,a)}};Object.defineProperty(xt,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function dA(){return $0("Tensor",()=>xt)}dA();var ed=class extends xt{constructor(e,t,a,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=a}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!dr(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);wn().disposeTensor(this),this.dataId=e.dataId,wn().incRef(this,null)}dispose(){wn().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(ed,Symbol.hasInstance,{value:e=>e instanceof xt&&e.assign!=null&&e.assign instanceof Function});var pA={};je(pA,{assertTypesMatch:()=>fA,getTensorsInContainer:()=>F0,isTensorInList:()=>MS,makeTypesMatch:()=>kt});var wf;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(wf||(wf={}));var kf;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(kf||(kf={}));var If;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(If||(If={}));var Sf;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Sf||(Sf={}));var Cf;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(Cf||(Cf={}));var $S={float32:Sf,int32:kf,bool:If,complex64:Cf};function ea(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return $S[e][t]}function Gd(e){return ea(e,"int32")}function cA(e){return e!=null&&typeof e=="object"&&"texture"in e&&e.texture instanceof WebGLTexture}function hA(e){return typeof GPUBuffer<"u"&&e!=null&&typeof e=="object"&&"buffer"in e&&e.buffer instanceof GPUBuffer}function kt(e,t){if(e.dtype===t.dtype)return[e,t];let a=ea(e.dtype,t.dtype);return[e.cast(a),t.cast(a)]}function fA(e,t){O(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function MS(e,t){return t.some(a=>a.id===e.id)}function F0(e){let t=[];return mA(e,t,new Set),t}function mA(e,t,a){if(e==null)return;if(e instanceof xt){t.push(e);return}if(!FS(e))return;let n=e;for(let r in n){let s=n[r];a.has(s)||(a.add(s),mA(s,t,a))}}function FS(e){return Array.isArray(e)||typeof e=="object"}function Mh(e){return e.kernelName!=null}var ag=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},P0=class Nf{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ag}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let t=this.getSortedBackends();for(let a=0;a<t.length;a++){let n=t[a];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:t,asyncInit:a}=this.initializeBackendsAndReturnBest();if(a)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){let{asyncInit:a}=this.initializeBackend(t);if(a)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,a,n=1){return t in this.registryFactory?(Tr(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:a,priority:n},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;let{success:a,asyncInit:n}=this.initializeBackend(t);if(!(n?await a:a))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new kS(this.backendInstance),!0}setupRegisteredKernels(){Ds(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Ds(t).forEach(a=>{a.disposeFunc!=null&&a.disposeFunc(this.registry[t])})}initializeBackend(t){let a=this.registryFactory[t];if(a==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{let n=a.factory();if(n&&!(n instanceof wl)&&typeof n.then=="function"){let r=++this.pendingBackendInitId,s=n.then(i=>r<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Tr(`Initialization of backend ${t} failed`),Tr(i.stack||i.message)),!1));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}else return this.registry[t]=n,{success:!0,asyncInit:!1}}catch(n){return Tr(`Initialization of backend ${t} failed`),Tr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,a)=>this.registryFactory[a].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){let t=this.getSortedBackends();for(let a=0;a<t.length;a++){let n=t[a],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,a){let n=this.state.tensorInfo.get(a),r=n.backend,s=this.readSync(a),i=r.refCount(a);r.disposeData(a,!0),n.backend=t,t.move(a,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,a){let n=null;if(a==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");a=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof a!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=t}let r;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>(r=a(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,a,n){t();try{let r=n();return a(),r}catch(r){throw a(),r}}nextTensorId(){return Nf.nextTensorId++}nextVariableId(){return Nf.nextVariableId++}clone(t){let a=W.runKernel(_i,{x:t}),n={x:t},r=i=>({x:()=>{let o="float32",u={x:i},d={dtype:o};return W.runKernel(li,u,d)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[a],r,s,{}),a}runKernel(t,a,n){if(this.backendName==null&&this.backend,Ju(t,this.backendName)==null)throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:a,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,a,n){let r=this.backend.numDataIds(),s=0;n.forEach(u=>{s+=u.dtype==="complex64"?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-a-s-i;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let a,n=[],r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let u,d=Mh(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Mh(t)){let{kernelName:f,inputs:m,attrs:g}=t;this.backendName==null&&this.backend;let y=Ju(f,this.backendName);O(y!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),o=()=>{let x=this.backend.numDataIds();u=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});let A=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,A);let b=A.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(r){let w=this.getTensorsForGradient(f,m,b);n=this.saveTensorsForBackwardMode(w)}return b}}else{let{forwardFunc:f}=t,m=g=>{r&&(n=g.map(y=>this.keep(this.clone(y))))};o=()=>{let g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,g,y),y}}let{inputs:l,attrs:p}=t,c=Mh(t)?null:t.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?a=o():(h=this.profiler.profileKernel(d,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),a=h.outputs)}),r&&this.addTapeNode(d,l,a,c,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:d,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:a.map(f=>f.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(u)?a:a[0]}saveTensorsForBackwardMode(t){return t.map(a=>this.keep(this.clone(a)))}getTensorsForGradient(t,a,n){let r=bf(t);if(r!=null){let s=r.inputsToSave||[],i=r.outputsToSave||[],o;r.saveAllInputs?(O(Array.isArray(a),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(a).map(d=>a[d])):o=s.map(d=>a[d]);let u=n.filter((d,l)=>i[l]);return o.concat(u)}return[]}makeTensor(t,a,n,r){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=t;n==="string"&&Rr(t[0])&&(s=t.map(u=>Ud(u)));let i=r.write(s,a,n),o=new xt(a,n,i,this.nextTensorId());if(this.trackTensor(o,r),n==="string"){let u=this.state.tensorInfo.get(i),d=Qx(s);this.state.numBytes+=d-u.bytes,u.bytes=d}return o}makeTensorFromDataId(t,a,n,r){n=n||"float32";let s={dataId:t,shape:a,dtype:n};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(t,a){let{dataId:n,shape:r,dtype:s}=t,i=new xt(r,s,n,this.nextTensorId());return this.trackTensor(i,a),i}makeVariable(t,a=!0,n,r){n=n||this.nextVariableId().toString(),r!=null&&r!==t.dtype&&(t=t.cast(r));let s=new ed(t,a,n,this.nextTensorId());if(this.state.registeredVariables[s.name]!=null)throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(t,a){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let n=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(n=t.size*dc(t.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:a||this.backend,dtype:t.dtype,shape:t.shape,bytes:n})),t instanceof ed||this.track(t)}incRef(t,a){this.trackTensor(t,a),this.backend.incRef(t.dataId)}removeDataId(t,a){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===a&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;let a=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=a.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){let n=t.size*dc(t.dtype);this.state.numBytes-=n}a.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,a.backend)}disposeVariables(){for(let t in this.state.registeredVariables){let a=this.state.registeredVariables[t];this.disposeVariable(a)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){let t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;let a=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-a,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,a,n,r,s,i){let o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:a,outputs:n,saved:s},u=bf(t);u!=null&&(r=u.gradFunc),r!=null&&(o.gradient=d=>(d=d.map((l,p)=>{if(l==null){let c=n[p],h=Oc(c.size,c.dtype);return this.makeTensor(h,c.shape,c.dtype)}return l}),r(d.length>1?d:d[0],s,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){let a={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(a.name=t),this.state.scopeStack.push(a),this.state.activeScope=a}endScope(t){let a=F0(t),n=new Set(a.map(s=>s.id));for(let s=0;s<this.state.activeScope.track.length;s++){let i=this.state.activeScope.track[s];!i.kept&&!n.has(i.id)&&i.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],a.forEach(s=>{!s.kept&&s.scopeId===r.id&&this.track(s)})}gradients(t,a,n,r=!1){if(O(a.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let s=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));O(s instanceof xt,()=>"The result y returned by f() must be a tensor.");let i=CS(this.state.activeTape,a,s);if(!r&&i.length===0&&a.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let o={};o[s.id]=n??PS(s.shape),NS(o,i,d=>this.tidy(d),OS);let u=a.map(d=>o[d.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(d=>{for(let l of d.saved)l.dispose()}),this.state.activeTape=null),{value:s,grads:u}})}customGrad(t){return O(Wr(t),()=>"The f passed in customGrad(f) must be a function."),(...a)=>{O(a.every(o=>o instanceof xt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};a.forEach((o,u)=>{r[u]=o});let s=(o,u)=>(n=t(...a,u),O(n.value instanceof xt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),O(Wr(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),i=(o,u)=>{let d=n.gradFunc(o,u),l=Array.isArray(d)?d:[d];O(l.length===a.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),O(l.every(c=>c instanceof xt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let p={};return l.forEach((c,h)=>{p[h]=()=>c}),p};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:r})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,a){return this.state.tensorInfo.get(t).backend.readToGPU(t,a)}async time(t){let a=Qu(),n=await this.backend.time(t);return n.wallMs=Qu()-a,n}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ag;for(let t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};P0.nextTensorId=0;P0.nextVariableId=0;function PS(e){let t=E0(lt(e),"float32");return W.makeTensor(t,e,"float32")}function gA(){let e=rA();if(e._tfengine==null){let t=new nA(e);e._tfengine=new P0(t)}return OI(e._tfengine.ENV),ES(()=>e._tfengine),e._tfengine}var W=gA();function OS(e,t){let a={a:e,b:t};return W.runKernel("Add",a)}var Hd={};je(Hd,{isBrowser:()=>yA,isMobile:()=>LS,mockIsMobile:()=>zS});function DS(){return typeof navigator<"u"&&navigator!=null}var Tf;function zS(e){Tf=e}function LS(e){if(Tf!==void 0)return Tf;if(e||DS()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let a=e;return a.userAgentData&&a.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function yA(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var _a=U();_a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});_a.registerFlag("IS_BROWSER",()=>yA());_a.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");_a.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));_a.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));_a.registerFlag("PROD",()=>!1);_a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>_a.getBool("DEBUG"));_a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);_a.registerFlag("IS_TEST",()=>!1);_a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>_a.getBool("DEBUG"));_a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);_a.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);_a.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Bn(e,t){let a=e;if(Ht(e))return t==="string"?[]:[e.length];if(cA(e)){let r=e.channels||"RGBA";return[e.height,e.width*r.length]}else if(hA(e))return[e.buffer.size/(t==null?4:dc(t))];if(!Array.isArray(e))return[];let n=[];for(;Array.isArray(a)||Ht(a)&&t!=="string";)n.push(a.length),a=a[0];return Array.isArray(e)&&U().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&xA(e,n,[]),n}function xA(e,t,a){if(a=a||[],!Array.isArray(e)&&!Ht(e)){O(t.length===0,()=>`Element arr[${a.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}O(t.length>0,()=>`Element arr[${a.join("][")}] should be a primitive, but is an array of ${e.length} elements`),O(e.length===t[0],()=>`Element arr[${a.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let n=t.slice(1);for(let r=0;r<e.length;++r)xA(e[r],n,a.concat(r))}function ng(e,t,a,n){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${a}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function R(e,t,a,n="numeric"){if(e instanceof dA())return ng(n,e.dtype,t,a),e;let r=bd(e);if(r!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(r=n),ng(n,r,t,a),e==null||!Ht(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${a}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Bn(e,r);!Ht(e)&&!Array.isArray(e)&&(e=[e]);let i=r!=="string"?Bc(e,r):Gr(e,[],!0);return W.makeTensor(i,s,r)}function td(e,t,a,n="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${a} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((r,s)=>R(r,`${t}[${s}]`,a,n))}var O0="__op";function L(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let a=t[0],n=e[a];a.endsWith("_")&&(a=a.substring(0,a.length-1)),a=a+O0;let r=(...s)=>{W.startScope(a);try{let i=n(...s);return Dc(i)&&console.error("Cannot return a Promise inside of tidy."),W.endScope(i),i}catch(i){throw W.endScope(null),i}};return Object.defineProperty(r,"name",{value:a,configurable:!0}),r}function WS(e,t){let a=R(e,"real","complex"),n=R(t,"imag","complex");fa(a.shape,n.shape,`real and imag shapes, ${a.shape} and ${n.shape}, must match in call to tf.complex().`);let r={real:a,imag:n};return W.runKernel(kd,r)}var or=L({complex_:WS});function as(e,t,a,n){if(n==null)n=bd(e);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(hA(e)||cA(e)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return W.backend.createTensorFromGPUData(e,t||a,n)}if(!Ht(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){ja(t);let r=lt(t),s=lt(a);O(r===s,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${s}`);for(let i=0;i<a.length;++i){let o=a[i],u=i===a.length-1?o!==lt(t.slice(i)):!0;O(a[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${a}) does not match the provided shape (${t}). `)}}return!Ht(e)&&!Array.isArray(e)&&(e=[e]),t=t||a,e=n!=="string"?Bc(e,n):Gr(e,[],!0),W.makeTensor(e,t,n)}function He(e,t,a){let n=Bn(e,a);return as(e,t,n,a)}var zs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},pr=class AA{static join(t){return new AA(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(n=>Ht(n)?n.buffer:n),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let a=0;for(let n=0;n<t.length;n++){let r=t[n];n!==t.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=a+r.byteLength;this.shards.push({buffer:r,start:a,end:s}),a=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,a=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,a=isNaN(Number(a))?0:a,t=Math.max(0,t),a=Math.min(this.byteLength,a),a<=t)return new ArrayBuffer(0);let n=this.findShardForByte(t);if(n===-1)throw new Error(`Could not find start shard for byte ${t}`);let r=a-t,s=new ArrayBuffer(r),i=new Uint8Array(s),o=0;for(let u=n;u<this.shards.length;u++){let d=this.shards[u],l=t+o-d.start,p=o,c=Math.min(a,d.end)-d.start,h=new Uint8Array(d.buffer,l,c-l);if(i.set(h,p),o+=h.length,a<d.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function a(r){return t<r.start?-1:t>=r.end?1:0}if(a(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let n=BS(this.shards,a);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function BS(e,t){let a=0,n=e.length;for(;a<=n;){let r=Math.floor((n-a)/2)+a,s=t(e[r]);if(s===0)return r;s<0?n=r:a=r+1}return-1}function bA(){U().set("PROD",!0)}function VS(){U().set("DEBUG",!0)}function US(){U().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function vA(e){U().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function GS(){W.disposeVariables()}function $t(){return W}function HS(){return W.memory()}function jS(e){return W.profile(e)}function Ue(e,t){return W.tidy(e,t)}function ae(e){F0(e).forEach(t=>t.dispose())}function In(e){return W.keep(e)}function qS(e){return W.time(e)}function hc(e){return W.setBackend(e)}function Vc(){return W.ready()}function la(){return W.backendName}function XS(e){W.removeBackend(e)}function wA(e){return W.findBackend(e)}function KS(e){return W.findBackendFactory(e)}function ru(e,t,a=1){return W.registerBackend(e,t,a)}function Er(){return W.backend}function YS(e,t){U().setPlatform(e,t)}var Hr=4;async function ZS(e,t){let a=[],n=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],u=Array.isArray(e)?e[i].tensor:e[o];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);let d={name:o,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let l=new Promise(async p=>{let c=await u.bytes(),h=c.reduce((g,y)=>g+y.length,0)+Hr*c.length,f=new Uint8Array(h),m=0;for(let g=0;g<c.length;g++){let y=c[g],x=new Uint8Array(new Uint32Array([y.length]).buffer);f.set(x,m),m+=Hr,f.set(y,m),m+=y.length}p(f)});n.push(l)}else n.push(u.data());t!=null&&(d.group=t),a.push(d)}let s=await Promise.all(n);return{data:e8(s),specs:a}}function kA(e,t){let a=new pr(e),n={},r=0;for(let s of t){let i=JS(s,(o,u)=>a.slice(r+o,r+u));n[s.name]=IA(s,a.slice(r,r+i)),r+=i}return n}function JS(e,t){let a=lt(e.shape),n;if("quantization"in e){let r=e.quantization;n=zs[r.dtype]}else if(e.dtype==="string"){let r=0;for(let s=0;s<a;s++)r+=Hr+new Uint32Array(t(r,r+Hr))[0];return r}else n=zs[e.dtype];return a*n}async function QS(e,t){let a=lt(e.shape),n;if("quantization"in e){let r=e.quantization;n=zs[r.dtype]}else if(e.dtype==="string"){let r=0;for(let s=0;s<a;s++)r+=Hr+new Uint32Array(await t(r,r+Hr))[0];return r}else n=zs[e.dtype];return a*n}function IA(e,t){let a=e.name,n=e.dtype,r=e.shape,s=lt(r),i,o=0;if("quantization"in e){let u=e.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${e.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(n!=="float32")throw new Error(`Weight ${e.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${n}.`)}else throw new Error(`Weight ${e.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=zs[u.dtype],l=u.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(n==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(l.length);for(let p=0;p<l.length;p++){let c=l[p];i[p]=c*u.scale+u.min}}else if(u.dtype==="float16")i=o8()(l);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(n==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(l.length);for(let p=0;p<l.length;p++){let c=l[p];i[p]=Math.round(c*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${a}': ${n}`);o+=s*d}else if(n==="string"){let u=lt(e.shape);i=[];for(let d=0;d<u;d++){let l=new Uint32Array(t.slice(o,o+Hr))[0];o+=Hr;let p=new Uint8Array(t.slice(o,o+l));i.push(p),o+=l}}else{let u=zs[n];if(n==="float32")i=new Float32Array(t);else if(n==="int32")i=new Int32Array(t);else if(n==="bool")i=new Uint8Array(t);else if(n==="complex64"){i=new Float32Array(t);let d=new Float32Array(i.length/2),l=new Float32Array(i.length/2);for(let f=0;f<d.length;f++)d[f]=i[f*2],l[f]=i[f*2+1];let p=He(d,r,"float32"),c=He(l,r,"float32"),h=or(p,c);return p.dispose(),c.dispose(),h}else throw new Error(`Unsupported dtype in weight '${a}': ${n}`);o+=s*u}return He(i,r,n)}async function rg(e,t,a){let n=new Uint8Array(t);for(;n.byteLength<a;){let{done:r,value:s}=await e.read();if(r&&s==null){let o=a-n.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}let i=new Uint8Array(n.length+s.byteLength);i.set(n,0),i.set(new Uint8Array(s),n.length),n=i}return n.buffer}async function SA(e,t){let a={},n=e.getReader(),r=new ArrayBuffer(0);for(let s of t){let i=await QS(s,async(d,l)=>(r=await rg(n,r,l),r.slice(d,l)));r=await rg(n,r,i);let o=r.slice(0,i);r=r.slice(i);let u=IA(s,o);if(a[s.name]=u,la()==="webgpu"){let d=Er();"uploadToGPU"in d&&lt(u.shape)>=U().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&d.uploadToGPU(u.dataId)}}return a}function e8(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,a=[];e.forEach(s=>{if(t+=s.byteLength,a.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),r=0;return a.forEach(s=>{n.set(new Uint8Array(s.buffer),r),r+=s.byteLength}),n.buffer}var D0=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function sg(e){return D0?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function t8(e){if(D0)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),a="";for(let n=0,r=t.length;n<r;n++)a+=String.fromCharCode(t[n]);return btoa(a)}function a8(e){if(D0){let n=Buffer.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(e),a=new Uint8Array(t.length);for(let n=0;n<t.length;++n)a.set([t.charCodeAt(n)],n);return a.buffer}function n8(e){return pr.join(e)}function ig(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function CA(e,t){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(a.signature=e.signature),e.userDefinedMetadata!=null&&(a.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(a.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(a.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(a.trainingConfig=e.trainingConfig),a}function NA(e,t,a){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!a)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=a}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),n}async function z0(e,t){let a,n;return e.weightsManifest!=null&&([a,n]=await t(e.weightsManifest)),NA(e,a,n)}function jd(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:sg(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:sg(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:new pr(e.weightData).byteLength}}function Rf(e){let t=[];for(let a of e)t.push(...a.weights);return t}function r8(){let e=a=>{let n=a<<13,r=0;for(;!(n&8388608);)r-=8388608,n<<=1;return n&=-8388609,r+=947912704,n|r},t=new Uint32Array(2048);t[0]=0;for(let a=1;a<1024;a++)t[a]=e(a);for(let a=1024;a<2048;a++)t[a]=939524096+(a-1024<<13);return t}function s8(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function i8(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function o8(){let e=r8(),t=s8(),a=i8();return n=>{let r=new ArrayBuffer(4*n.length),s=new Uint32Array(r);for(let i=0;i<n.length;i++){let o=n[i],u=e[a[o>>10]+(o&1023)]+t[o>>10];s[i]=u}return new Float32Array(r)}}var an=class An{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return An.instance==null&&(An.instance=new An),An.instance}static registerSaveRouter(t){An.getInstance().saveRouters.push(t)}static registerLoadRouter(t){An.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return An.getHandlers(t,"save")}static getLoadHandlers(t,a){return An.getHandlers(t,"load",a)}static getHandlers(t,a,n){let r=[];return(a==="load"?An.getInstance().loadRouters:An.getInstance().saveRouters).forEach(s=>{let i=s(t,n);i!==null&&r.push(i)}),r}},l8=e=>an.registerSaveRouter(e),u8=e=>an.registerLoadRouter(e),d8=e=>an.getSaveHandlers(e),p8=(e,t)=>an.getLoadHandlers(e,t),Ef="tensorflowjs",_f=1,Es="models_store",_r="model_info_store";function TA(){if(!U().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function $f(e){let t=e.result;t.createObjectStore(Es,{keyPath:"modelPath"}),t.createObjectStore(_r,{keyPath:"modelPath"})}var Ls=class{constructor(e){if(this.indexedDB=TA(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((a,n)=>{let r=this.indexedDB.open(Ef,_f);r.onupgradeneeded=()=>$f(r),r.onsuccess=()=>{let s=r.result;if(t==null){let i=s.transaction(Es,"readonly"),o=i.objectStore(Es).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));a(o.result.modelArtifacts)},o.onerror=u=>(s.close(),n(o.error)),i.oncomplete=()=>s.close()}else{t.weightData=pr.join(t.weightData);let i=jd(t),o=s.transaction(_r,"readwrite"),u=o.objectStore(_r),d;try{d=u.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(p){return n(p)}let l;d.onsuccess=()=>{l=s.transaction(Es,"readwrite");let p=l.objectStore(Es),c;try{c=p.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(h){return n(h)}c.onsuccess=()=>a({modelArtifactsInfo:i}),c.onerror=h=>{u=o.objectStore(_r);let f=u.delete(this.modelPath);f.onsuccess=()=>(s.close(),n(c.error)),f.onerror=m=>(s.close(),n(c.error))}},d.onerror=p=>(s.close(),n(d.error)),o.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}}},r.onerror=s=>n(r.error)})}};Ls.URL_SCHEME="indexeddb://";var RA=e=>U().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ls.URL_SCHEME)?c8(e.slice(Ls.URL_SCHEME.length)):null;an.registerSaveRouter(RA);an.registerLoadRouter(RA);function c8(e){return new Ls(e)}function h8(e){return e.startsWith(Ls.URL_SCHEME)?e.slice(Ls.URL_SCHEME.length):e}var f8=class{constructor(){this.indexedDB=TA()}async listModels(){return new Promise((e,t)=>{let a=this.indexedDB.open(Ef,_f);a.onupgradeneeded=()=>$f(a),a.onsuccess=()=>{let n=a.result,r=n.transaction(_r,"readonly"),s=r.objectStore(_r).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(n.close(),t(s.error)),r.oncomplete=()=>n.close()},a.onerror=n=>t(a.error)})}async removeModel(e){return e=h8(e),new Promise((t,a)=>{let n=this.indexedDB.open(Ef,_f);n.onupgradeneeded=()=>$f(n),n.onsuccess=()=>{let r=n.result,s=r.transaction(_r,"readwrite"),i=s.objectStore(_r),o=i.get(e),u;o.onsuccess=()=>{if(o.result==null)return r.close(),a(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let d=i.delete(e),l=()=>{u=r.transaction(Es,"readwrite");let p=u.objectStore(Es).delete(e);p.onsuccess=()=>t(o.result.modelArtifactsInfo),p.onerror=c=>a(o.error)};d.onsuccess=l,d.onerror=p=>(l(),r.close(),a(o.error))}},o.onerror=d=>(r.close(),a(o.error)),s.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},n.onerror=r=>a(n.error)})}},er="/",Ko="tensorflowjs_models",EA="info",m8="model_topology",g8="weight_specs",y8="weight_data",x8="model_metadata";function _A(e){return{info:[Ko,e,EA].join(er),topology:[Ko,e,m8].join(er),weightSpecs:[Ko,e,g8].join(er),weightData:[Ko,e,y8].join(er),modelMetadata:[Ko,e,x8].join(er)}}function $A(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function A8(e){let t=e.split(er);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(er)}function b8(e){return e.startsWith(Ws.URL_SCHEME)?e.slice(Ws.URL_SCHEME.length):e}var Ws=class{constructor(e){if(!U().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=_A(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),n=jd(e),r=pr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,t8(r));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:n}}catch{throw $A(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},a=JSON.parse(this.LS.getItem(this.keys.topology));if(a==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=a;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(n==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=a8(s),t}};Ws.URL_SCHEME="localstorage://";var MA=e=>U().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ws.URL_SCHEME)?v8(e.slice(Ws.URL_SCHEME.length)):null;an.registerSaveRouter(MA);an.registerLoadRouter(MA);function v8(e){return new Ws(e)}var w8=class{constructor(){O(U().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),O(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Ko+er,a=er+EA;for(let n=0;n<this.LS.length;++n){let r=this.LS.key(n);if(r.startsWith(t)&&r.endsWith(a)){let s=A8(r);e[s]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=b8(e);let t=_A(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let a=JSON.parse(this.LS.getItem(t.info));return $A(t),a}},al="://",jr=class Ir{constructor(){this.managers={}}static getInstance(){return Ir.instance==null&&(Ir.instance=new Ir),Ir.instance}static registerManager(t,a){O(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(al)&&(t=t.slice(0,t.indexOf(al))),O(t.length>0,()=>"scheme must not be an empty string.");let n=Ir.getInstance();O(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=a}static getManager(t){let a=Ir.getInstance().managers[t];if(a==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return a}static getSchemes(){return Object.keys(Ir.getInstance().managers)}};function Xp(e){if(e.indexOf(al)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${jr.getSchemes().join(",")}`);return{scheme:e.split(al)[0],path:e.split(al)[1]}}async function FA(e,t,a=!1){O(e!==t,()=>`Old path and new path are the same: '${e}'`);let n=an.getLoadHandlers(e);O(n.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),O(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${e}.`);let r=n[0],s=an.getSaveHandlers(t);O(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),O(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let i=s[0],o=Xp(e).scheme,u=Xp(e).path,d=o===Xp(e).scheme,l=await r.load();a&&d&&await jr.getManager(o).removeModel(u);let p=await i.save(l);return a&&!d&&await jr.getManager(o).removeModel(u),p.modelArtifactsInfo}async function k8(){let e=jr.getSchemes(),t={};for(let a of e){let n=await jr.getManager(a).listModels();for(let r in n){let s=a+al+r;t[s]=n[r]}}return t}async function I8(e){let t=Xp(e);return jr.getManager(t.scheme).removeModel(t.path)}async function S8(e,t){return FA(e,t,!1)}async function C8(e,t){return FA(e,t,!0)}var N8=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!U().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",a=>{if(a.source===window&&a.data.name===this.messageName){a.stopPropagation();let n=this.functionRefs[a.data.index];n(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return iA(e)}};if(U().get("IS_BROWSER")){U().setPlatform("browser",new N8);try{jr.registerManager(Ws.URL_SCHEME,new w8)}catch{}try{jr.registerManager(Ls.URL_SCHEME,new f8)}catch{}}var T8={importFetch:()=>tI()},Fh,R8=class{constructor(){this.util=aI(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return U().global.fetch!=null?U().global.fetch(e,t):(Fh==null&&(Fh=T8.importFetch()),Fh(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};U().get("IS_NODE")&&!U().get("IS_BROWSER")&&U().setPlatform("node",new R8);function $e(e,t="float32",a){return t=t||"float32",ja(e),new Mt(e,t,a)}function E8(e,t){let a=R(e,"x","cast");if(!Jx(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&a.dtype!=="string"||t!=="string"&&a.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:a},r={dtype:t};return W.runKernel(li,n,r)}var qe=L({cast_:E8});function _8(e){let t={x:R(e,"x","clone","string_or_numeric")};return W.runKernel(_i,t)}var Ta=L({clone_:_8});function L0(e,t=!1){console.log(e.toString(t))}gA();var $8={buffer:$e,cast:qe,clone:Ta,print:L0};_S($8);function M8(e,t){let a=R(e,"a","add"),n=R(t,"b","add");[a,n]=kt(a,n);let r={a,b:n};return W.runKernel("Add",r)}var Ie=L({add_:M8});function F8(e,t){let a=R(e,"a","floorDiv"),n=R(t,"b","floorDiv");[a,n]=kt(a,n);let r={a,b:n};return W.runKernel(Ci,r)}var Uc=L({floorDiv_:F8});function P8(e,t){let a=R(e,"a","div"),n=R(t,"b","div");if([a,n]=kt(a,n),a.dtype==="int32"&&n.dtype==="int32")return Uc(a,n);let r={a,b:n},s={};return W.runKernel(vi,r,s)}var Te=L({div_:P8});function O8(e,t){let a=R(e,"a","mul"),n=R(t,"b","mul");[a,n]=kt(a,n);let r={a,b:n};return W.runKernel(Ki,r)}var te=L({mul_:O8});function D8(e){let t=R(e,"x","abs");if(t.dtype==="complex64"){let a={x:t};return W.runKernel(Id,a)}else{let a={x:t};return W.runKernel("Abs",a)}}var za=L({abs_:D8});function z8(e){let t={x:R(e,"x","acos")};return W.runKernel(Zs,t)}var PA=L({acos_:z8});function L8(e){let t={x:R(e,"x","acosh")};return W.runKernel(Js,t)}var OA=L({acosh_:L8});function W8(e){O(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),O(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,s)=>R(r,`tensors${s}`,"addN")),a=t[0];t.forEach(r=>{if(r.dtype!==a.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!dr(r.shape,a.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return W.runKernel(Qs,n)}var W0=L({addN_:W8});function B8(e,t=null,a=!1){let n={x:R(e,"x","all","bool")},r={axis:t,keepDims:a};return W.runKernel("All",n,r)}var DA=L({all_:B8});function V8(e,t=null,a=!1){let n={x:R(e,"x","any","bool")},r={axis:t,keepDims:a};return W.runKernel("Any",n,r)}var zA=L({any_:V8});function U8(e,t=0){let a={x:R(e,"x","argMax")},n={axis:t};return W.runKernel(Il,a,n)}var su=L({argMax_:U8});function G8(e,t=0){let a={x:R(e,"x","argMin")},n={axis:t};return W.runKernel(Sl,a,n)}var LA=L({argMin_:G8});function H8(e){let t={x:R(e,"x","asin")};return W.runKernel(ei,t)}var WA=L({asin_:H8});function j8(e){let t={x:R(e,"x","asinh")};return W.runKernel(ti,t)}var BA=L({asinh_:j8});function q8(e){let t={x:R(e,"x","atan")};return W.runKernel(ai,t)}var VA=L({atan_:q8});function X8(e,t){let a=R(e,"a","atan2"),n=R(t,"b","atan2");[a,n]=kt(a,n);let r={a,b:n};return W.runKernel(ri,r)}var UA=L({atan2_:X8});function K8(e){let t={x:R(e,"x","atanh")};return W.runKernel(ni,t)}var GA=L({atanh_:K8});function Y8(e,t,a,n,r="NHWC",s){let i=e[3],o=[...t,i],u=qA(r);return qd(e,o,a,s,n,null,null,u)}function HA(e,t,a,n,r,s,i="channelsLast"){let[o,u]=ad(t),d;if(i==="channelsLast")d=[o,u,e[3],e[3]];else if(i==="channelsFirst")d=[o,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return qd(e,d,a,n,r,s,!1,i)}function Z8(e,t,a,n,r,s,i="NDHWC"){let[o,u,d]=Mf(t),l,p;if(i==="NDHWC")p="channelsLast",l=[o,u,d,e[4],e[4]];else if(i==="NCDHW")p="channelsFirst",l=[o,u,d,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return jA(e,l,a,n,r,!1,p,s)}function qd(e,t,a,n,r,s,i=!1,o="channelsLast"){let[u,d,l,p]=[-1,-1,-1,-1];if(o==="channelsLast")[u,d,l,p]=e;else if(o==="channelsFirst")[u,p,d,l]=e;else throw new Error(`Unknown dataFormat ${o}`);let[c,h,,f]=t,[m,g]=ad(a),[y,x]=ad(n),A=nl(c,y),b=nl(h,x),{padInfo:w,outHeight:S,outWidth:N}=eC(r,d,l,m,g,A,b,s,o),T=i?f*p:f,_;return o==="channelsFirst"?_=[u,T,S,N]:o==="channelsLast"&&(_=[u,S,N,T]),{batchSize:u,dataFormat:o,inHeight:d,inWidth:l,inChannels:p,outHeight:S,outWidth:N,outChannels:T,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:c,filterWidth:h,effectiveFilterHeight:A,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:x,inShape:e,outShape:_,filterShape:t}}function jA(e,t,a,n,r,s=!1,i="channelsLast",o){let[u,d,l,p,c]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,d,l,p,c]=e;else if(i==="channelsFirst")[u,c,d,l,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,f,m,,g]=t,[y,x,A]=Mf(a),[b,w,S]=Mf(n),N=nl(h,b),T=nl(f,w),_=nl(m,S),{padInfo:P,outDepth:E,outHeight:I,outWidth:F}=tC(r,d,l,p,y,x,A,N,T,_,o),$=s?g*c:g,z;return i==="channelsFirst"?z=[u,$,E,I,F]:i==="channelsLast"&&(z=[u,E,I,F,$]),{batchSize:u,dataFormat:i,inDepth:d,inHeight:l,inWidth:p,inChannels:c,outDepth:E,outHeight:I,outWidth:F,outChannels:$,padInfo:P,strideDepth:y,strideHeight:x,strideWidth:A,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:T,effectiveFilterWidth:_,dilationDepth:b,dilationHeight:w,dilationWidth:S,inShape:e,outShape:z,filterShape:t}}function J8(e,t,a,n,r){n==null&&(n=B0(e,t,a));let s=e[0],i=e[1],o=nd((s-t+2*n)/a+1,r),u=nd((i-t+2*n)/a+1,r);return[o,u]}function Q8(e,t,a,n,r,s){r==null&&(r=B0(e,t[0],n[0]));let i=[0,0,0,a];for(let o=0;o<3;o++)e[o]+2*r>=t[o]&&(i[o]=nd((e[o]-t[o]+2*r)/n[o]+1,s));return i}function B0(e,t,a,n=1){let r=nl(t,n);return Math.floor((e[0]*(a-1)-a+r)/2)}function ad(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function Mf(e){return typeof e=="number"?[e,e,e]:e}function nl(e,t){return t<=1?e:e+(e-1)*(t-1)}function eC(e,t,a,n,r,s,i,o,u){let d,l,p;if(typeof e=="number"){d={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let c=J8([t,a],s,n,e,o);l=c[0],p=c[1]}else if(e==="same"){l=Math.ceil(t/n),p=Math.ceil(a/r);let c=Math.max(0,(l-1)*n+s-t),h=Math.max(0,(p-1)*r+i-a),f=Math.floor(c/2),m=c-f,g=Math.floor(h/2),y=h-g;d={top:f,bottom:m,left:g,right:y,type:"SAME"}}else if(e==="valid")d={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/n),p=Math.ceil((a-i+1)/r);else if(typeof e=="object"){let c=u==="channelsLast"?e[1][0]:e[2][0],h=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];d={top:c,bottom:h,left:f,right:m,type:c===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=nd((t-s+c+h)/n+1,o),p=nd((a-i+f+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outHeight:l,outWidth:p}}function tC(e,t,a,n,r,s,i,o,u,d,l){let p,c,h,f;if(e==="valid"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let m=Q8([t,a,n,1],[o,u,d],1,[r,s,i],e,l);c=m[0],h=m[1],f=m[2]}else if(e==="same"){c=Math.ceil(t/r),h=Math.ceil(a/s),f=Math.ceil(n/i);let m=(c-1)*r+o-t,g=(h-1)*s+u-a,y=(f-1)*i+d-n,x=Math.floor(m/2),A=m-x,b=Math.floor(g/2),w=g-b,S=Math.floor(y/2),N=y-S;p={top:b,bottom:w,left:S,right:N,front:x,back:A,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:c,outHeight:h,outWidth:f}}function nd(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function rd(e){let[t,a,n]=ad(e);return t===1&&a===1&&n===1}function cr(e,t){return rd(e)||rd(t)}function Bs(e){return ad(e).every(t=>t>0)}function qA(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function mn(e,t,a){if(a!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);if(typeof t=="number")O(ol(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(r=>{O(ol(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${a} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function aC(e,t){let a={x:R(e,"x","reshape","string_or_numeric")},n={shape:t};return W.runKernel(Hl,a,n)}var Z=L({reshape_:aC});function nC(e,t,a,n,r){let s=R(e,"x","avgPool","float32"),i=1;O(cr(a,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`);let o=s,u=!1;s.rank===3&&(u=!0,o=Z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),mn("avgPool",n,r);let d={x:o},l={filterSize:t,strides:a,pad:n,dimRoundingMode:r},p=W.runKernel(si,d,l);return p=qe(p,s.dtype),u?Z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var V0=L({avgPool_:nC});function rC(e,t,a,n,r,s="NDHWC"){let i=R(e,"x","avgPool3d","float32"),o=i,u=!1;i.rank===4&&(u=!0,o=Z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),O(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),O(typeof a=="number"&&a>0||Array.isArray(a)&&a[0]>0&&a[1]>0&&a[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${a}'`),mn("avgPool3d",n,r);let d={x:o},l={filterSize:t,strides:a,pad:n,dimRoundingMode:r,dataFormat:s},p=W.runKernel(Cl,d,l);return p=qe(p,o.dtype),u?Z(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var XA=L({avgPool3d_:rC});function sC(e,t=0){O(e.length>=1,()=>"Pass at least one tensor to concat");let a=td(e,"tensors","concat","string_or_numeric");if(a[0].dtype==="complex64"&&a.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),a.length===1)return Ta(a[0]);let n=a,r={axis:t};return W.runKernel(El,n,r)}var ft=L({concat_:sC});function iC(e,t,a=!1,n=!1){let r=R(e,"a","matMul"),s=R(t,"b","matMul");[r,s]=kt(r,s);let i={a:r,b:s},o={transposeA:a,transposeB:n};return W.runKernel(ii,i,o)}var rt=L({matMul_:iC});function oC(e){let t={x:R(e,"x","sigmoid","float32")};return W.runKernel(xo,t)}var Cn=L({sigmoid_:oC});function lC(e,t,a){let n=R(e,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let r={x:n},s={begin:t,size:a};return W.runKernel(Kl,r,s)}var We=L({slice_:lC});function uC(e){let t={x:R(e,"x","tanh","float32")};return W.runKernel(So,t)}var fc=L({tanh_:uC});function dC(e,t,a,n,r,s){let i=R(e,"forgetBias","basicLSTMCell"),o=R(t,"lstmKernel","basicLSTMCell"),u=R(a,"lstmBias","basicLSTMCell"),d=R(n,"data","basicLSTMCell"),l=R(r,"c","basicLSTMCell"),p=R(s,"h","basicLSTMCell"),c=ft([d,p],1),h=rt(c,o),f=Ie(h,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],x=We(f,[0,0],y),A=We(f,[0,g],y),b=We(f,[0,g*2],y),w=We(f,[0,g*3],y),S=Ie(te(Cn(x),fc(A)),te(l,Cn(Ie(i,b)))),N=te(fc(S),Cn(w));return[S,N]}var KA=L({basicLSTMCell_:dC});function pC(e,t,a){let n=R(e,"x","batchToSpaceND"),r=t.reduce((o,u)=>o*u);O(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),O(a.length===t.length,()=>`crops.length is ${a.length} but should be equal to blockShape.length  ${t.length}`),O(n.shape[0]%r===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let s={x:n},i={blockShape:t,crops:a};return W.runKernel(Nl,s,i)}var U0=L({batchToSpaceND_:pC});function cC(e){let t;return e.rank===0||e.rank===1?t=Z(e,[1,1,1,e.size]):e.rank===2?t=Z(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=Z(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function hC(e,t,a,n,r,s){s==null&&(s=.001);let i=R(e,"x","batchNorm"),o=R(t,"mean","batchNorm"),u=R(a,"variance","batchNorm"),d;r!=null&&(d=R(r,"scale","batchNorm"));let l;n!=null&&(l=R(n,"offset","batchNorm")),O(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),O(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),O(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:cC(i),scale:d,offset:l,mean:o,variance:u},c={varianceEpsilon:s},h=W.runKernel(Ni,p,c);return Z(h,i.shape)}var Xd=L({batchNorm_:hC});function fC(e,t,a,n,r,s){let i=R(e,"x","batchNorm"),o=R(t,"mean","batchNorm"),u=R(a,"variance","batchNorm"),d;r!=null&&(d=R(r,"scale","batchNorm"));let l;return n!=null&&(l=R(n,"offset","batchNorm")),O(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),O(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),O(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&O(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${d.rank}.`),l!=null&&O(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Xd(i,o,u,l,d,s)}var YA=L({batchNorm2d_:fC});function mC(e,t,a,n,r,s){let i=R(e,"x","batchNorm"),o=R(t,"mean","batchNorm"),u=R(a,"variance","batchNorm"),d;r!=null&&(d=R(r,"scale","batchNorm"));let l;return n!=null&&(l=R(n,"offset","batchNorm")),O(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),O(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),O(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&O(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${d.rank}.`),l!=null&&O(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Xd(i,o,u,l,d,s)}var ZA=L({batchNorm3d_:mC});function gC(e,t,a,n,r,s){let i=R(e,"x","batchNorm"),o=R(t,"mean","batchNorm"),u=R(a,"variance","batchNorm"),d;r!=null&&(d=R(r,"scale","batchNorm"));let l;return n!=null&&(l=R(n,"offset","batchNorm")),O(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),O(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),O(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&O(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${d.rank}.`),l!=null&&O(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Xd(i,o,u,l,d,s)}var JA=L({batchNorm4d_:gC});function yC(e,t,a){let n=R(e,"x","bincount"),r=R(t,"weights","bincount");O(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),O(a>=0,()=>`size must be non-negative, but got ${a}.`),O(r.size===n.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${r.shape}.`);let s={x:n,weights:r},i={size:a};return W.runKernel(oi,s,i)}var G0=L({bincount_:yC});function xC(e,t){let a=R(e,"x","bitwiseAnd"),n=R(t,"y","bitwiseAnd");if(!dr(a.shape,n.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${a.shape}, y: ${n.shape}`);if(a.dtype!=="int32"||n.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${a.dtype} and type of y: ${n.dtype}`);let r={a,b:n};return W.runKernel(Tl,r)}var QA=L({bitwiseAnd_:xC});function AC(e,t){let a=R(e,"s0","broadcastArgs","int32"),n=R(t,"s1","broadcastArgs","int32");if(a.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${a.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let r={s0:a,s1:n};return W.runKernel(Rl,r)}var eb=L({broadcastArgs_:AC});function bC(e,t){let a=R(e,"broadcastTo","x"),n=a.shape;if(ja(t),t.length<a.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${a.rank}.`);if(t.length>a.rank){let u=a.shape.slice();for(;u.length<t.length;)u.unshift(1);a=Z(a,u)}let r=a.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])s[u]=1;else if(a.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((u,d)=>u>1?d:-1).filter(u=>u>=0).length===0)return Ta(a);let i={x:a},o={reps:s};return W.runKernel(es,i,o)}var rl=L({broadcastTo_:bC});function vC(e){let t={x:R(e,"x","ceil","float32")};return W.runKernel(ui,t)}var tb=L({ceil_:vC});function lr(e,t,a){ja(e),a=a||bd(t);let n={shape:e,value:t,dtype:a};return W.runKernel(Ol,{},n)}function wC(e,t,a){let n=R(e,"x","clipByValue");if(O(t<=a,()=>`Error in clip: min (${t}) must be less than or equal to max (${a}).`),t===a)return lr(n.shape,t,n.dtype);let r={x:n},s={clipValueMin:t,clipValueMax:a};return W.runKernel(Qr,r,s)}var ab=L({clipByValue_:wC});function kC(e){return ft(e,0)}var nb=L({concat1d_:kC});function IC(e,t){return ft(e,t)}var Gc=L({concat2d_:IC});function SC(e,t){return ft(e,t)}var rb=L({concat3d_:SC});function CC(e,t){return ft(e,t)}var sb=L({concat4d_:CC});function NC(e,t,a,n,r="NHWC",s=[1,1],i){let o=R(e,"x","conv2d","float32"),u=R(t,"filter","conv2d","float32"),d=o,l=!1;o.rank===3&&(l=!0,d=Z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(d.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${d.rank}.`),O(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),mn("conv2d",n,i);let p=r==="NHWC"?d.shape[3]:d.shape[1];O(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),O(cr(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),O(Bs(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),O(Bs(a),()=>"Error in conv2D: Strides should be larger than 0.");let c={x:d,filter:u},h={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i},f=W.runKernel(di,c,h);return l?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Kd=L({conv2d_:NC});function TC(e,t,a,n,r="NWC",s=1,i){let o=R(e,"x","conv1d"),u=R(t,"filter","conv1d"),d=o,l=!1;o.rank===2&&(l=!0,d=Z(o,[1,o.shape[0],o.shape[1]])),O(d.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${d.rank}.`),O(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),mn("conv1d",n,i),O(d.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${d.shape[2]}) must match input depth for filter ${u.shape[1]}.`),O(cr(a,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${a} and dilation '${s}'`),O(Bs(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),O(Bs(a),()=>"Error in conv1D: Stride should be larger than 0."),O(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=Z(u,[1,u.shape[0],u.shape[1],u.shape[2]]),c=Z(d,[d.shape[0],1,d.shape[1],d.shape[2]]),h=Kd(c,p,[1,a],n,"NHWC",[1,s],i);return l?Z(h,[h.shape[2],h.shape[3]]):Z(h,[h.shape[0],h.shape[2],h.shape[3]])}var ib=L({conv1d_:TC});function RC(e,t,a,n,r,s="NHWC",i){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,d=!1;t.rank===3&&(d=!0,u=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),O(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),O(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),O(a.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${a.rank}`);let l=s==="NHWC"?o[3]:o[1],p=s==="NHWC"?u.shape[3]:u.shape[1];O(l===a.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${a.shape[2]}.`),O(p===a.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${a.shape[3]}.`),mn("conv2dDerInput",r,i);let c={dy:u,filter:a},h={strides:n,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},f=W.runKernel(pi,c,h);return d?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var ob=L({conv2DBackpropInput_:RC});function EC(e,t,a,n,r,s){let i=R(e,"x","conv2dTranspose"),o=R(t,"filter","conv2dTranspose");return ob(a,i,o,n,r,"NHWC",s)}var lb=L({conv2dTranspose_:EC});function _C(e,t,a,n,r="NDHWC",s=[1,1,1]){let i=R(e,"x","conv3d"),o=R(t,"filter","conv3d"),u=i,d=!1;i.rank===4&&(d=!0,u=Z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),O(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),O(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),O(cr(a,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),O(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),O(Bs(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),O(Bs(a),()=>"Error in conv3D: Strides should be larger than 0.");let l={x:u,filter:o},p={strides:a,pad:n,dataFormat:r,dilations:s},c=W.runKernel(ci,l,p);return d?Z(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var ub=L({conv3d_:_C});function $C(e,t,a,n,r){O(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=Z(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let u=s[4],d=i.shape[4];O(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),O(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),O(a.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${a.rank}`),O(u===a.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${a.shape[3]}.`),O(d===a.shape[4],()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${a.shape[4]}.`);let l={dy:i,filter:a},p={pad:r,strides:n,inputShape:s},c=W.runKernel(hi,l,p);return o?Z(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var MC=L({conv3DBackpropInput_:$C});function FC(e,t,a,n,r){let s=R(e,"x","conv3dTranspose"),i=R(t,"filter","conv3dTranspose");return MC(a,s,i,n,r)}var db=L({conv3dTranspose_:FC});function PC(e){let t={x:R(e,"x","cos","float32")};return W.runKernel("Cos",t)}var pb=L({cos_:PC});function OC(e){let t={x:R(e,"x","cosh","float32")};return W.runKernel(fi,t)}var cb=L({cosh_:OC});function DC(e,t=0,a=!1,n=!1){let r={x:R(e,"x","cumprod")},s={axis:t,exclusive:a,reverse:n};return W.runKernel(mi,r,s)}var hb=L({cumprod_:DC});function zC(e,t=0,a=!1,n=!1){let r={x:R(e,"x","cumsum")},s={axis:t,exclusive:a,reverse:n};return W.runKernel(gi,r,s)}var fb=L({cumsum_:zC});function LC(e,t,a,n=!1){let r=R(e,"x","denseBincount"),s=R(t,"weights","denseBincount");O(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),O(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),O(a>=0,()=>`size must be non-negative, but got ${a}.`),O(s.size===r.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`);let i={x:r,weights:s},o={size:a,binaryOutput:n};return W.runKernel($l,i,o)}var mb=L({denseBincount_:LC});function WC(e,t,a="NHWC"){let n=R(e,"x","depthToSpace","float32"),r=a==="NHWC"?n.shape[1]:n.shape[2],s=a==="NHWC"?n.shape[2]:n.shape[3],i=a==="NHWC"?n.shape[3]:n.shape[1];O(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),O(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${n.shape}`),O(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),O(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${n.shape}`);let o={x:n},u={blockSize:t,dataFormat:a};return W.runKernel(xi,o,u)}var gb=L({depthToSpace_:WC});function BC(e,t,a,n,r="NHWC",s=[1,1],i){let o=R(e,"x","depthwiseConv2d","float32"),u=R(t,"filter","depthwiseConv2d","float32"),d=o,l=!1;o.rank===3&&(l=!0,d=Z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(d.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),O(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let p=r==="NHWC"?d.shape[3]:d.shape[1];O(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),mn("depthwiseConv2d",n,i);let c={x:d,filter:u},h={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i},f=W.runKernel(Ai,c,h);return l?Z(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Hc=L({depthwiseConv2d_:BC});function VC(e){let t={x:R(e,"x","diag")};return W.runKernel(Ml,t)}var yb=L({diag_:VC});function UC(e,t,a,n,r=[1,1],s="NHWC"){let i=R(e,"x","dilation2d"),o=R(t,"filter","dilation2d");O(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),O(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),O(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,d=!1;i.rank===3&&(u=Z(i,[1,i.shape[0],i.shape[1],i.shape[2]]),d=!0),O(u.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`);let l={x:u,filter:o},p={strides:a,pad:n,dilations:r},c=W.runKernel(bi,l,p);return d?Z(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var xb=L({dilation2d_:UC}),Ro={};je(Ro,{assertAndGetBroadcastShape:()=>Ft,getBroadcastDims:()=>Ab,getReductionAxes:()=>H0});function Ab(e,t){let a=e.length,n=[];for(let r=0;r<a;r++){let s=a-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&i===1&&n.unshift(s)}return n}function H0(e,t){let a=[];for(let n=0;n<t.length;n++){let r=e[e.length-n-1],s=t.length-n-1,i=t[s];(r==null||r===1&&i>1)&&a.unshift(s)}return a}function Ft(e,t){let a=Math.max(e.length,t.length),n=new Array(a);for(let r=0;r<a;r++){let s=e[e.length-r-1];s==null&&(s=1);let i=t[t.length-r-1];if(i==null&&(i=1),s===1)n[a-r-1]=i;else if(i===1)n[a-r-1]=s;else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n[a-r-1]=s}return n}function GC(e,t){let a=R(e,"a","equal","string_or_numeric"),n=R(t,"b","equal","string_or_numeric");[a,n]=kt(a,n),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(wi,r)}var j0=L({equal_:GC});function HC(e,t,a){let n=R(t,"a","where"),r=R(a,"b","where"),s=R(e,"condition","where","bool"),i=Ft(Ft(s.shape,n.shape),r.shape),o=rl(s,i),u=rl(n,i),d=rl(r,i),l={condition:o,t:u,e:d};return W.runKernel(Xl,l)}var sr=L({where_:HC});function jC(e){let t={x:R(e,"x","zerosLike")};return W.runKernel(nu,t)}var Va=L({zerosLike_:jC});function qC(e,t){let a=R(e,"a","div"),n=R(t,"b","div");[a,n]=kt(a,n);let r=Te(a,n),s=Va(r),i=j0(n,s);return sr(i,s,r)}var bb=L({divNoNan_:qC});function XC(e,t){let a=R(e,"t1","dot"),n=R(t,"t2","dot");O((a.rank===1||a.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${a.rank} and ${n.rank}.`);let r=a.rank===1?a.size:a.shape[1],s=n.rank===1?n.size:n.shape[0];if(O(r===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`),a.rank===1&&n.rank===1){let i=Z(a,[1,-1]),o=Z(n,[-1,1]),u=rt(i,o);return Z(u,[])}else if(a.rank===1&&n.rank===2){let i=Z(a,[1,-1]),o=Z(n,[n.shape[0],n.shape[1]]),u=rt(i,o);return Z(u,[u.size])}else if(a.rank===2&&n.rank===1){let i=Z(n,[-1,1]),o=rt(a,i);return Z(o,[o.size])}else{let i=Z(n,[n.shape[0],n.shape[1]]);return rt(a,i)}}var vb=L({dot_:XC});function KC(e,...t){let a=t.map((r,s)=>R(r,`tensors${s}`,"einsum")),n={equation:e};return W.runKernel(Rd,a,n)}var vs=L({einsum_:KC});function YC(e){let t={x:R(e,"x","elu","float32")};return W.runKernel("Elu",t)}var q0=L({elu_:YC});function ZC(e,t){let a=R(e,"x","ensureShape","string_or_numeric");if(!Xx(a.shape,t))throw new Error(`EnsureShape: Shape of tensor ${a.shape} is not compatible with expected shape ${t}`);return e}var wb=L({ensureShape_:ZC});function JC(e){let t=R(e,"x","erf");O(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=qe(t,"float32"));let a={x:t};return W.runKernel("Erf",a)}var kb=L({erf_:JC});function X0(e,t){for(let a=0;a<e.length;++a)if(e[e.length-a-1]!==t-1-a)return!1;return!0}function Ib(e,t,a){let n=e.length+t.length,r=[],s=0,i=0;for(let o=0;o<n;o++)a.indexOf(o)===-1?r.push(e[s++]):r.push(t[i++]);return r}function QC(e,t){let a=[],n=e.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&a.push(e[s]);let r=t.map(s=>e[s]);return[a,r]}function Yd(e,t){let a=t.map(n=>1);return Ib(e,a,t)}function e9(e,t,a){O(X0(t,a),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${a} input.`)}function t9(e,t){if(X0(e,t))return null;let a=[];for(let n=0;n<t;++n)e.indexOf(n)===-1&&a.push(n);return e.forEach(n=>a.push(n)),a}function a9(e){return e.map((t,a)=>[a,t]).sort((t,a)=>t[1]-a[1]).map(t=>t[0])}function n9(e,t){let a=[];for(let n=t-e;n<t;++n)a.push(n);return a}function r9(e,t=null,a=!1){let n={x:R(e,"x","max")},r={reductionIndices:t,keepDims:a};return W.runKernel("Max",n,r)}var tn=L({max_:r9});function s9(e,t=null,a=!1){let n={x:R(e,"x","min")},r={axis:t,keepDims:a};return W.runKernel("Min",n,r)}var Fs=L({min_:s9});function i9(e,t){let a=R(e,"base","pow"),n=R(t,"exp","pow");[a,n]=kt(a,n);let r={a,b:n};return W.runKernel("Pow",r)}var pl=L({pow_:i9});function Be(e,t){if((Ht(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Ht(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return as(e,[],[],t)}function o9(e){let t={x:R(e,"x","sqrt","float32")};return W.runKernel(bo,t)}var Vn=L({sqrt_:o9});function l9(e){let t=R(e,"x","square"),a={};return W.runKernel("Square",{x:t},a)}var fn=L({square_:l9});function u9(e,t=null,a=!1){let n=R(e,"x","sum");n.dtype==="bool"&&(n=qe(n,"int32"));let r={x:n},s={axis:t,keepDims:a};return W.runKernel("Sum",r,s)}var st=L({sum_:u9});function d9(e,t="euclidean",a=null,n=!1){e=R(e,"x","norm");let r=Sb(e,t,a),s=r.shape;if(n){let i=Ad(a,e.shape);s=Yd(r.shape,i)}return Z(r,s)}function Sb(e,t,a=null){if(e.rank===0)return za(e);if(e.rank!==1&&a===null)return Sb(Z(e,[-1]),t,a);if(e.rank===1||typeof a=="number"||Array.isArray(a)&&a.length===1){if(t===1)return st(za(e),a);if(t===1/0)return tn(za(e),a);if(t===-1/0)return Fs(za(e),a);if(t==="euclidean"||t===2)return Vn(st(pl(za(e),Be(2,"int32")),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(a)&&a.length===2){if(t===1)return tn(st(za(e),a[0]),a[1]-1);if(t===1/0)return tn(st(za(e),a[1]),a[0]);if(t===-1/0)return Fs(st(za(e),a[1]),a[0]);if(t==="fro"||t==="euclidean")return Vn(st(fn(e),a));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${a}`)}var Zd=L({norm_:d9});function p9(e,t=null,a=!1){return Zd(e,"euclidean",t,a)}var Cb=L({euclideanNorm_:p9});function c9(e){let t={x:R(e,"x","exp")};return W.runKernel("Exp",t)}var qr=L({exp_:c9});function h9(e,t=0){let a=R(e,"x","expandDims","string_or_numeric");O(t<=a.rank,()=>"Axis must be <= rank of the tensor");let n={input:a},r={dim:t};return W.runKernel(Pl,n,r)}var ua=L({expandDims_:h9});function f9(e){let t={x:R(e,"x","expm1")};return W.runKernel(ki,t)}var Nb=L({expm1_:f9});function m9(e,t){let a=R(e,"x","tile","string_or_numeric");O(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of reps ${t}.`);let n={x:a},r={reps:t};return W.runKernel(es,n,r)}var Ps=L({tile_:m9});function g9(e,t,a,n="float32"){t==null&&(t=e);let r=$e([e,t],n),s=e<=t?e:t;for(let o=0;o<s;++o)r.set(1,o,o);let i=Z(r.toTensor(),[e,t]);if(a==null)return i;if(a.length===1)return Ps(ua(i,0),[a[0],1,1]);if(a.length===2)return Ps(ua(ua(i,0),0),[a[0],a[1],1,1]);if(a.length===3)return Ps(ua(ua(ua(i,0),0),0),[a[0],a[1],a[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${a.length}D.`)}var K0=L({eye_:g9});function y9(e){let t={x:R(e,"x","floor","float32")};return W.runKernel(Si,t)}var Y0=L({floor_:y9});function x9(e,t,a=0,n=0){let r=R(e,"x","gather"),s=R(t,"indices","gather","int32"),i={x:r,indices:s},o={axis:a,batchDims:n};return W.runKernel(Dl,i,o)}var Z0=L({gather_:x9});function A9(e,t){let a=R(e,"a","greater","string_or_numeric"),n=R(t,"b","greater","string_or_numeric");[a,n]=kt(a,n),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Ri,r)}var Jd=L({greater_:A9});function b9(e,t){let a=R(e,"a","greaterEqual","string_or_numeric"),n=R(t,"b","greaterEqual","string_or_numeric");[a,n]=kt(a,n),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Ei,r)}var J0=L({greaterEqual_:b9});function v9(e){let t={input:R(e,"input","imag")};return W.runKernel(_d,t)}var Qd=L({imag_:v9});function w9(e){let t={x:R(e,"x","isFinite")};return W.runKernel($i,t)}var Tb=L({isFinite_:w9});function k9(e){let t={x:R(e,"x","isInf")};return W.runKernel(Mi,t)}var Rb=L({isInf_:k9});function I9(e){let t={x:R(e,"x","isNaN")};return W.runKernel(Fi,t)}var Eb=L({isNaN_:I9});function S9(e,t=.2){let a={x:R(e,"x","leakyRelu")},n={alpha:t};return W.runKernel(Pi,a,n)}var Q0=L({leakyRelu_:S9});function C9(e,t){let a=R(e,"a","less","string_or_numeric"),n=R(t,"b","less","string_or_numeric");[a,n]=kt(a,n),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Oi,r)}var mc=L({less_:C9});function N9(e,t){let a=R(e,"a","lessEqual","string_or_numeric"),n=R(t,"b","lessEqual","string_or_numeric");[a,n]=kt(a,n),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Di,r)}var jc=L({lessEqual_:N9});function _b(e,t,a){if(a<=0)throw new Error("The number of values should be positive.");let n={start:e,stop:t,num:a};return W.runKernel(zi,{},n)}function T9(e,t=5,a=1,n=1,r=.5){let s=R(e,"x","localResponseNormalization");O(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),O(ol(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=Z(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},d={depthRadius:t,bias:a,alpha:n,beta:r},l=W.runKernel("LRN",u,d);return o?Z(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var $b=L({localResponseNormalization_:T9});function R9(e){let t={x:R(e,"x","log","float32")};return W.runKernel("Log",t)}var cl=L({log_:R9});function E9(e){let t={x:R(e,"x","log1p")};return W.runKernel(Li,t)}var em=L({log1p_:E9});function _9(e){return O(Wr(e),()=>"The f passed in grad(f) must be a function"),(t,a)=>{let n=R(t,"x","tf.grad","string_or_numeric"),r=a!=null?R(a,"dy","tf.grad"):null;return W.tidy(()=>{let{value:s,grads:i}=W.gradients(()=>e(n),[n],r);return r!=null&&fa(s.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),qc(i),i[0]})}}function $9(e){return O(Wr(e),()=>"The f passed in grads(f) must be a function"),(t,a)=>{O(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let n=td(t,"args","tf.grads","string_or_numeric"),r=a!=null?R(a,"dy","tf.grads"):null;return W.tidy(()=>{let{value:s,grads:i}=W.gradients(()=>e(...n),n,r);return r!=null&&fa(s.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),qc(i),i})}}function M9(e){return O(Wr(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,a)=>{O(t instanceof xt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),O(a==null||a instanceof xt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:n,value:r}=W.gradients(()=>e(t),[t],a);return qc(n),{grad:n[0],value:r}}}function F9(e){return O(Wr(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,a)=>{O(Array.isArray(t)&&t.every(r=>r instanceof xt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),O(a==null||a instanceof xt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let n=W.gradients(()=>e(...t),t,a);return a!=null&&fa(n.value.shape,a.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),qc(n.grads),n}}function Mb(e,t){O(Wr(e),()=>"The f passed in variableGrads(f) must be a function"),O(t==null||Array.isArray(t)&&t.every(d=>d instanceof ed),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let a=t!=null;if(!a){t=[];for(let d in W.registeredVariables)t.push(W.registeredVariables[d])}let n=a?t.filter(d=>!d.trainable):null,r=t.length;t=t.filter(d=>d.trainable),O(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let s=!0,{value:i,grads:o}=W.gradients(e,t,null,s);O(o.some(d=>d!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),O(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((d,l)=>{o[l]!=null&&(u[d.name]=o[l])}),n!=null&&n.forEach(d=>u[d.name]=null),{value:i,grads:u}}function Un(e){return W.customGrad(e)}function qc(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function P9(e){let t={x:R(e,"x","neg")};return W.runKernel("Neg",t)}var Nn=L({neg_:P9});function O9(e){let t={x:R(e,"x","softplus")};return W.runKernel(Ao,t)}var tm=L({softplus_:O9});function D9(e){let t=R(e,"x","logSigmoid");return Un(a=>({value:Nn(tm(Nn(a))),gradFunc:n=>te(n,Cn(Nn(a)))}))(t)}var Fb=L({logSigmoid_:D9});function z9(e,t){let a=R(e,"a","sub"),n=R(t,"b","sub");[a,n]=kt(a,n);let r={a,b:n};return W.runKernel("Sub",r)}var ke=L({sub_:z9});function L9(e,t=-1){let a=R(e,"logits","logSoftmax");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and axis was ${t}`);return Un((n,r)=>{let s=tn(n,t,!0),i=ke(n,s),o=ke(qe(i,"float32"),cl(st(qr(i),t,!0)));return r([o]),{value:o,gradFunc:(u,d)=>{let[l]=d,p=!0,c=qr(l);return ke(u,te(st(u,t,p),c))}}})(a)}var Pb=L({logSoftmax_:L9});function W9(e,t=null,a=!1){let n=R(e,"x","logSumExp"),r=Ad(t,n.shape),s=tn(n,r,!0),i=ke(n,s),o=qr(i),u=st(o,r),d=cl(u),l=Ie(Z(s,d.shape),d);if(a){let p=Yd(l.shape,r);return Z(l,p)}return l}var am=L({logSumExp_:W9});function B9(e,t){let a=R(e,"a","logicalAnd","bool"),n=R(t,"b","logicalAnd","bool");Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Wi,r)}var sd=L({logicalAnd_:B9});function V9(e){let t={x:R(e,"x","logicalNot","bool")};return W.runKernel(Bi,t)}var nm=L({logicalNot_:V9});function U9(e,t){let a=R(e,"a","logicalOr","bool"),n=R(t,"b","logicalOr","bool");Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Vi,r)}var rm=L({logicalOr_:U9});function G9(e,t){let a=R(e,"a","logicalXor","bool"),n=R(t,"b","logicalXor","bool");return Ft(a.shape,n.shape),sd(rm(e,t),nm(sd(e,t)))}var Ob=L({logicalXor_:G9}),Cp=2147483648;function H9(e,t,a="left"){let n=R(e,"sortedSequence","searchSorted"),r=R(t,"values","searchSorted"),s=n.shape[n.shape.length-1],i=r.shape[r.shape.length-1],o=Z(n,[-1,s]),u=Z(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(lt(u.shape)>=Cp)throw new Error(`values tensor size must less than ${Cp}`);if(o.shape[1]>=Cp)throw new Error(`trailing dim_size must less than ${Cp} for int32 output type, was ${o.shape[1]}`);let d={sortedSequence:o,values:u},l={side:a};return W.runKernel(fo,d,l)}var Xc=L({searchSorted_:H9});function Db(e,t){return Xc(e,t,"left")}function j9(e,t,a,n,r){let s=R(e,"x","maxPool"),i=1,o=s,u=!1;s.rank===3&&(u=!0,o=Z(s,[1,s.shape[0],s.shape[1],s.shape[2]])),O(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),O(cr(a,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${i}'`),mn("maxPool",n,r);let d={x:o},l={filterSize:t,strides:a,pad:n,dimRoundingMode:r},p=W.runKernel(Gi,d,l);return u?Z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var sm=L({maxPool_:j9});function q9(e,t=[1,1,1],a,n,r,s="NDHWC"){let i=R(e,"x","maxPool3d"),o=i,u=!1;i.rank===4&&(u=!0,o=Z(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),O(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),O(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),mn("maxPool3d",n,r);let d={x:o},l={filterSize:t,strides:a,pad:n,dimRoundingMode:r,dataFormat:s},p=W.runKernel(Ll,d,l);return u?Z(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var zb=L({maxPool3d_:q9});function X9(e,t,a,n,r=!1){let s={x:R(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:a,pad:n,includeBatchInIndex:r},o=W.runKernel(Wl,s,i);return{result:o[0],indexes:o[1]}}var Lb=L({maxPoolWithArgmax_:X9});function K9(e,t){let a=R(e,"a","maximum"),n=R(t,"b","maximum");[a,n]=kt(a,n),a.dtype==="bool"&&(a=qe(a,"int32"),n=qe(n,"int32")),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Ui,r)}var im=L({maximum_:K9});function Y9(e,t=null,a=!1){let n={x:R(e,"x","mean")},r={axis:t,keepDims:a};return W.runKernel(Hi,n,r)}var id=L({mean_:Y9});function Tn(e,t="float32"){if(ja(e),t==="complex64"){let n=Tn(e,"float32"),r=Tn(e,"float32");return or(n,r)}let a=Oc(lt(e),t);return W.makeTensor(a,e,t)}function $r(e,t="float32"){if(ja(e),t==="complex64"){let n=$r(e,"float32"),r=Tn(e,"float32");return or(n,r)}let a=E0(lt(e),t);return W.makeTensor(a,e,t)}function Wb(e,t,{indexing:a="xy"}={}){if(a!=="xy"&&a!=="ij")throw new TypeError(`${a} is not a valid third argument to meshgrid`);if(e===void 0)return[];let n=R(e,"x","meshgrid",e instanceof xt?e.dtype:"float32");if(t===void 0)return[n];let r=R(t,"y","meshgrid",t instanceof xt?t.dtype:"float32"),s=lt(n.shape),i=lt(r.shape);return a==="xy"?(n=Z(n,[1,-1]),r=Z(r,[-1,1]),[rt($r([i,1],n.dtype),n),rt(r,$r([1,s],r.dtype))]):(n=Z(n,[-1,1]),r=Z(r,[1,-1]),[rt(n,$r([1,i],n.dtype)),rt($r([s,1],r.dtype),r)])}function Z9(e,t){let a=R(e,"a","minimum"),n=R(t,"b","minimum");[a,n]=kt(a,n),a.dtype==="bool"&&(a=qe(a,"int32"),n=qe(n,"int32")),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(ji,r)}var od=L({minimum_:Z9});function J9(e,t,a){O(a==="reflect"||a==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${a}.`);let n=R(e,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");O(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let r=a==="reflect"?1:0;for(let o=0;o<n.rank;o++)O(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),O(t[o][0]>=0&&t[o][0]<=n.shape[o]-r&&t[o][1]>=0&&t[o][1]<=n.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${n.shape[o]-r} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:a},i={x:n};return W.runKernel(qi,i,s)}var Bb=L({mirrorPad_:J9});function Q9(e,t){let a=R(e,"a","mod"),n=R(t,"b","mod");[a,n]=kt(a,n);let r={a,b:n};return W.runKernel("Mod",r)}var Kc=L({mod_:Q9});function eN(e,t=null,a=!1){e=R(e,"x","moments");let n=Ad(t,e.shape),r=id(e,n,a),s=r.shape;a||(s=Yd(r.shape,n));let i=fn(ke(qe(e,"float32"),Z(r,s))),o=id(i,n,a);return{mean:r,variance:o}}var Vb=L({moments_:eN});function tN(e,t,a,n){let r=R(t,"data","multiRNNCell"),s=td(a,"c","multiRNNCell"),i=td(n,"h","multiRNNCell"),o=r,u=[];for(let p=0;p<e.length;p++){let c=e[p](o,s[p],i[p]);u.push(c[0]),u.push(c[1]),o=c[1]}let d=[],l=[];for(let p=0;p<u.length;p+=2)d.push(u[p]),l.push(u[p+1]);return[d,l]}var Ub=L({multiRNNCell_:tN});function aN(e,t,a,n=!1){let r=R(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);a=a||Math.random();let o={logits:i===1?Z(r,[1,-1]):r},u={numSamples:t,seed:a,normalized:n},d=W.runKernel(Xi,o,u);return i===1?Z(d,[d.size]):d}var Gb=L({multinomial_:aN});function nN(e,t){let a=R(e,"a","notEqual","string_or_numeric"),n=R(t,"b","notEqual","string_or_numeric");[a,n]=kt(a,n),Ft(a.shape,n.shape);let r={a,b:n};return W.runKernel(Yi,r)}var om=L({notEqual_:nN});function rN(e,t,a=1,n=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:R(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:a,offValue:n};return W.runKernel(Qi,s,i)}var gc=L({oneHot_:rN});function sN(e){let t={x:R(e,"x","onesLike")};return W.runKernel(Vl,t)}var Hb=L({onesLike_:sN});function iN(e,t){let a=R(e,"v1","outerProduct"),n=R(t,"v2","outerProduct");O(a.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${a.rank} and ${n.rank}.`);let r=Z(a,[-1,1]),s=Z(n,[1,-1]);return rt(r,s)}var jb=L({outerProduct_:iN});function oN(e,t,a=0){let n=R(e,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:a},s={x:n};return W.runKernel(eo,s,r)}var hr=L({pad_:oN});function lN(e,t,a=0){return O(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),hr(e,[t],a)}var qb=L({pad1d_:lN});function uN(e,t,a=0){return O(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hr(e,t,a)}var Xb=L({pad2d_:uN});function dN(e,t,a=0){return O(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hr(e,t,a)}var Kb=L({pad3d_:dN});function pN(e,t,a=0){return O(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),hr(e,t,a)}var Yb=L({pad4d_:pN});function cN(e,t,a){let n=R(e,"x","spaceToBatchND");O(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),O(a.length===t.length,()=>`paddings.shape[0] ${a.length} must be equal to [blockShape] ${t.length}`),O(n.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+a[u-1][0]+a[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${a.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:n},s={blockShape:t,paddings:a};return W.runKernel(Yl,r,s)}var lm=L({spaceToBatchND_:cN});function hN(e,t,a,n,r,s,i){r==null&&(r=[1,1]),s==null&&(s=1),n===0&&(n="valid");let o=R(e,"x","maxPool"),u=o,d=!1;o.rank===3&&(d=!0,u=Z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),O(cr(s,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`);let l=HA(u.shape,t,s,r,n),p=[l.dilationHeight,l.dilationWidth],c;n==="same"?c=mN([l.filterHeight,l.filterWidth],p):c=[[0,0],[0,0]];let h=p[0]===1&&p[1]===1,[f,m]=fN([l.inHeight,l.inWidth],p,c),g=h?n:"valid",y=h?u:lm(u,p,f),x=(a==="avg"?()=>V0(y,t,s,g,i):()=>sm(y,t,s,g,i))(),A=h?x:U0(x,p,m);return d?Z(A,[A.shape[1],A.shape[2],A.shape[3]]):A}function fN(e,t,a){let n=a.map(l=>l[0]),r=a.map(l=>l[1]),s=e.concat(n,r),i=t.map((l,p)=>(l-s[p]%l)%l),o=r.map((l,p)=>l+i[p]),u=t.map((l,p)=>[n[p],o[p]]),d=t.map((l,p)=>[0,i[p]]);return[u,d]}function mN(e,t){let a=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),n=a.map(s=>Math.floor(s/2)),r=a.map((s,i)=>s-n[i]);return a.map((s,i)=>[n[i],r[i]])}var Zb=L({pool_:hN});function gN(e,t){let a=R(e,"x","prelu"),n=R(t,"alpha","prelu"),r={x:a,alpha:n};return W.runKernel(to,r)}var um=L({prelu_:gN});function yN(e,t=null,a=!1){let n=R(e,"x","prod");n.dtype==="bool"&&(n=qe(n,"int32"));let r={x:n},s={axis:t,keepDims:a};return W.runKernel(ao,r,s)}var Jb=L({prod_:yN});function xN(e,t,a,n){let r=e.map((l,p)=>R(l,`tensors${p}`,"raggedGather","int32")),s=R(t,"paramsDenseValues","raggedGather"),i=R(a,"indices","raggedGather","int32"),o={paramsNestedSplits:r,paramsDenseValues:s,indices:i},u={outputRaggedRank:n},d=W.runKernel(zc,o,u);return{outputNestedSplits:d.slice(0,d.length-1),outputDenseValues:d[d.length-1]}}var Qb=L({raggedGather_:xN});function AN(e,t,a){let n=R(e,"starts","raggedRange"),r=R(t,"limits","raggedRange",n.dtype),s=R(a,"deltas","raggedRange",n.dtype),i={starts:n,limits:r,deltas:s},o=W.runKernel(Lc,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var e3=L({raggedRange_:AN});function bN(e,t,a,n,r){let s=R(e,"shape","raggedTensorToTensor","int32"),i=R(t,"values","raggedTensorToTensor"),o=R(a,"defaultValue","raggedTensorToTensor",i.dtype),u=n.map((p,c)=>R(p,`tensors${c}`,"raggedTensorToTensor","int32")),d={shape:s,values:i,defaultValue:o,rowPartitionTensors:u},l={rowPartitionTypes:r};return W.runKernel(Wc,d,l)}var t3=L({raggedTensorToTensor_:bN});function vN(e,t,a){ja(e);let n=lt(e),r=null;if(a==null||a==="float32")r=new Float32Array(n);else if(a==="int32")r=new Int32Array(n);else if(a==="bool")r=new Uint8Array(n);else throw new Error(`Unknown data type ${a}`);for(let s=0;s<n;s++)r[s]=t();return W.makeTensor(r,e,a)}var a3=L({rand_:vN}),dm=vl(Gx()),n3={};je(n3,{TEST_EPSILON_FLOAT16:()=>r3,createVideoElement:()=>RN,encodeStrings:()=>s3,expectArrayBuffersEqual:()=>TN,expectArraysClose:()=>kN,expectArraysEqual:()=>SN,expectNumbersClose:()=>CN,expectPromiseToFail:()=>IN,expectValuesInRange:()=>NN,play:()=>EN,testEpsilon:()=>pm});var wN=.001,r3=.1;function kN(e,t,a){return a==null&&(a=pm()),Ff(e,t,(n,r)=>cm(n,r,a))}function pm(){return W.backend.floatPrecision()===32?wN:r3}function Ff(e,t,a){let n=!0;if((Ht(e)||Ht(t))&&(n=!1),Ht(e)&&Ht(t)&&(n=!0),n){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Bn(e),o=Bn(t);if(!dr(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=Ht(e)?e:Gr(e),s=Ht(t)?t:Gr(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.
Actual:   ${r}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=r[i],u=s[i];if(!a(o,u))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${u}.
Actual:   ${r}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function IN(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function SN(e,t){let a=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Rr(e)||Rr(e[0])||Rr(t)||Rr(t[0])?Ff(e,a,(n,r)=>n==r):Ff(e,t,(n,r)=>cm(n,r,0))}function CN(e,t,a){if(a==null&&(a=pm()),!cm(e,t,a))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function cm(e,t,a){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>a)}function NN(e,t,a){for(let n=0;n<e.length;n++)if(e[n]<t||e[n]>a)throw new Error(`Value out of range:${e[n]} low: ${t}, high: ${a}`)}function TN(e,t){let a=new Float32Array(e),n=new Float32Array(t);if(a.length!==n.length)throw new Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${a.length}`);for(let r=0;r<n.length;r++)if(a[r]!==n[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${n[r]} but got ${a[r]} instead`)}function s3(e){for(let t=0;t<e.length;t++){let a=e[t];Array.isArray(a)?s3(a):e[t]=Ud(a)}return e}function RN(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(a=>{t.addEventListener("loadeddata",n=>a(t)),t.load()})}async function EN(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var hm=class{constructor(e,t,a,n,r){this.mean=e,this.stdDev=t,this.dtype=a,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=r||Math.random();this.random=dm.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let n=this.nextVal;return this.nextVal=NaN,n}let e,t,a=!1;for(;!a;){let n,r,s;do n=2*this.random()-1,r=2*this.random()-1,s=n*n+r*r;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*n*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(a=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},_N=class{constructor(e,t,a,n){this.alpha=e,this.beta=1/t,this.dtype=a;let r=n||Math.random();this.randu=dm.alea(r.toString()),this.randn=new hm(0,1,a,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,a,n,r,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0);if(s*=s*s,e=n*n,t=1-.331*e*e,a=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<a)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},$N=class{constructor(e=0,t=1,a,n){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=a,n==null&&(n=Math.random()),typeof n=="number"&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=dm.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function MN(e,t,a=1,n="float32",r){if(ja(e),a==null&&(a=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new _N(t,a,n,r),i=$e(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var i3=L({randomGamma_:MN});function FN(e,t=0,a=1,n,r){if(ja(e),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new hm(t,a,n,!1,r),i=$e(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var fm=L({randomNormal_:FN});function PN(e,t,a){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return fm(e,0,1,t,a)}var o3=L({randomStandardNormal_:PN});function ON(e,t=0,a=1,n="float32",r){ja(e);let s=$e(e,n),i=new $N(t,a,null,r);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var Yc=L({randomUniform_:ON});function DN(e,t,a,n){return Yc(e,t,a,"int32",n)}var l3=L({randomUniformInt_:DN});function hl(e,t,a=1,n="float32"){if(a===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:a,dtype:n};return W.runKernel(Gl,{},r)}function zN(e){let t={input:R(e,"input","real")};return W.runKernel(Fd,t)}var fl=L({real_:zN});function LN(e){let t={x:R(e,"x","reciprocal")};return W.runKernel(no,t)}var u3=L({reciprocal_:LN});function WN(e){let t={x:R(e,"x","relu")};return W.runKernel(ro,t)}var ep=L({relu_:WN});function BN(e){let t={x:R(e,"x","relu6")};return W.runKernel(oo,t)}var mm=L({relu6_:BN});function VN(e,t){let a={x:R(e,"x","reverse")},n={dims:t};return W.runKernel(lo,a,n)}var Xr=L({reverse_:VN});function UN(e){let t=R(e,"x","reverse");return O(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Xr(t,0)}var d3=L({reverse1d_:UN});function GN(e,t){let a=R(e,"x","reverse");return O(a.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${a.rank}.`),Xr(a,t)}var p3=L({reverse2d_:GN});function HN(e,t){let a=R(e,"x","reverse");return O(a.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${a.rank}.`),Xr(a,t)}var c3=L({reverse3d_:HN});function jN(e,t){let a=R(e,"x","reverse");return O(a.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${a.rank}.`),Xr(a,t)}var h3=L({reverse4d_:jN});function qN(e){let t={x:R(e,"x","round")};return W.runKernel(uo,t)}var gm=L({round_:qN});function XN(e){let t={x:R(e,"x","rsqrt","float32")};return W.runKernel(po,t)}var f3=L({rsqrt_:XN});function KN(e){let t={x:R(e,"x","selu")};return W.runKernel(mo,t)}var m3=L({selu_:KN});function YN(e,t,a,n,r,s=[1,1],i="NHWC"){let o=R(e,"x","separableConv2d"),u=R(t,"depthwiseFilter","separableConv2d"),d=R(a,"pointwiseFilter","separableConv2d"),l=o,p=!1;if(o.rank===3&&(p=!0,l=Z(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");O(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),O(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),O(d.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),O(d.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${d.shape[0]}.`),O(d.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${d.shape[1]}.`);let c=u.shape[2],h=u.shape[3];O(d.shape[2]===c*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${c*h}, but got ${d.shape[2]}.`);let f=Hc(l,u,n,r,i,s),m=Kd(f,d,1,"valid",i);return p?Z(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var g3=L({separableConv2d_:YN});async function ZN(e,t){let a=R(e,"x","setdiff1d"),n=R(t,"y","setdiff1d");O(a.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${a.dtype}) and y (${n.dtype}).`),O(a.rank===1,()=>`x should be 1D tensor, but got x (${a.shape}).`),O(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let r=await a.data(),s=await n.data(),i=new Set(s),o=0;for(let l=0;l<r.length;l++)i.has(r[l])||o++;let u=new Mt([o],a.dtype),d=new Mt([o],"int32");for(let l=0,p=0;l<r.length;l++)i.has(r[l])||(u.values[p]=r[l],d.values[p]=l,p++);return[u.toTensor(),d.toTensor()]}var y3=ZN;function JN(e){let t={x:R(e,"x","sign")};return W.runKernel(yo,t)}var x3=L({sign_:JN});function QN(e){let t={x:R(e,"x","sin","float32")};return W.runKernel("Sin",t)}var A3=L({sin_:QN});function eT(e){let t={x:R(e,"x","sinh")};return W.runKernel(go,t)}var b3=L({sinh_:eT});function tT(e,t,a){let n=R(e,"x","slice1d");return O(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),We(n,[t],[a])}var v3=L({slice1d_:tT});function aT(e,t,a){let n=R(e,"x","slice2d");return O(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),We(n,t,a)}var w3=L({slice2d_:aT});function nT(e,t,a){let n=R(e,"x","slice3d");return O(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),We(n,t,a)}var yc=L({slice3d_:nT});function rT(e,t,a){let n=R(e,"x","slice4d");return O(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),We(n,t,a)}var ym=L({slice4d_:rT});function sT(e,t=-1){let a=R(e,"logits","softmax","float32");if(t===-1&&(t=a.rank-1),t!==a.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a.rank} and dim was ${t}`);let n={logits:a},r={dim:t};return W.runKernel(vo,n,r)}var xm=L({softmax_:sT});function iT(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return W.runKernel("FFT",t)}var Zc=L({fft_:iT});function oT(e){O(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return W.runKernel(Ed,t)}var ld=L({ifft_:oT});function lT(e){let t=e.shape[e.shape.length-1],a=e.size/t,n;if(t<=2){let r=Z(e,[a,t]);n=ld(r)}else{let r=[a,2*(t-1)],s=Z(fl(e),[a,t]),i=Z(Qd(e),[a,t]),o=Xr(We(s,[0,1],[a,t-2]),1),u=te(Xr(We(i,[0,1],[a,t-2]),1),Be(-1)),d=ft([s,o],1),l=ft([i,u],1),p=Z(or(d,l),[r[0],r[1]]);n=ld(p)}if(n=fl(n),e.rank===3&&e.shape[0]!==0){let r=n,s=e.shape[0];n=Z(n,[s,n.shape[0]/s,n.shape[1]]),r.dispose()}return n}var Am=L({irfft_:lT});function uT(e,t,a=0){let n={x:R(e,"x","split")},r={numOrSizeSplits:t,axis:a};return W.runKernel(Zl,n,r)}var Rn=L({split_:uT});function dT(e,t){O(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let a=e.shape[e.shape.length-1],n=e.size/a,r;if(t!=null&&t<a){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=We(e,f,m),a=t}else if(t!=null&&t>a){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-a,r=ft([e,Tn(f)],e.shape.length-1),a=t}else r=e;let s=Va(r),i=Z(or(r,s),[n,a]),o=Zc(i),u=Math.floor(a/2)+1,d=fl(o),l=Qd(o),p=Rn(d,[u,a-u],d.shape.length-1),c=Rn(l,[u,a-u],l.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=u,Z(or(p[0],c[0]),h)}var Jc=L({rfft_:dT});function pT(e,t){let a=R(e,"a","squaredDifference"),n=R(t,"b","squaredDifference");[a,n]=kt(a,n),Ft(a.shape,n.shape);let r={a,b:n},s={};return W.runKernel(ko,r,s)}var bm=L({squaredDifference_:pT});function cT(e,t){let a=R(e,"x","squeeze","string_or_numeric");return Z(a,Kx(a.shape,t).newShape)}var Ze=L({squeeze_:cT});function hT(e,t=0){let a=td(e,"tensors","stack","string_or_numeric");O(a.length>=1,()=>"Pass at least one tensor to tf.stack"),a.length>0&&O(t<=a[0].rank,()=>"Axis must be <= rank of the tensor");let n=a,r={axis:t};return W.runKernel(Ul,n,r)}var Ua=L({stack_:hT});function fT(e,t=0){let a={x:R(e,"x","step")},n={alpha:t};return W.runKernel(ts,a,n)}var vm=L({step_:fT});function mT(e,t,a,n,r=0,s=0,i=0,o=0,u=0){let d={x:R(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:a,strides:n,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return W.runKernel(Io,d,l)}var k3=L({stridedSlice_:mT});function gT(e){let t={x:R(e,"x","tan","float32")};return W.runKernel("Tan",t)}var I3=L({tan_:gT});function Qt(e,t){Ys(e);let a=Bn(e,t);if(a.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return as(e,null,a,t)}function Or(e,t,a){if(Ys(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=Bn(e,a);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return as(e,t,n,a)}function wm(e,t,a){if(Ys(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=Bn(e,a);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return as(e,t,n,a)}function S3(e,t,a){if(Ys(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=Bn(e,a);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return as(e,t,n,a)}function C3(e,t,a){if(Ys(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=Bn(e,a);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return as(e,t,n,a)}function N3(e,t,a){if(Ys(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=Bn(e,a);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,as(e,t,n,a)}var Qc={};je(Qc,{calculateShapes:()=>T3,validateInput:()=>eh,validateUpdateShape:()=>km});function km(e,t,a){let n=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${a.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${r}.`;if(a.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<n+(a.rank-r))throw new Error(s+` Output shape length < ${n+(a.rank-r)}`);if(a.rank!==r+e.length-n)throw new Error(s+` update.rank != ${r+e.length-n}`);for(let i=0;i<r;++i)if(a.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${a.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<a.rank-r;++i)if(a.shape[i+r]!==e[i+n])throw new Error(s+` updates.shape[${i+r}] (${a.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function eh(e,t,a){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(a.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${a}`);if(a.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}km(a,t,e)}function T3(e,t,a){let n=t.shape.length,r=n>1?t.shape[n-1]:1,s=a.length,i=1;for(let p=r;p<s;++p)i*=a[p];let o=r<1?1:r,u=lt(t.shape)/o,d=[...kl(a.slice(0,r)),1],l=lt(a);return{sliceRank:r,numUpdates:u,sliceSize:i,strides:d,outputSize:l}}function yT(e,t,a){let n=R(e,"tensor","tensorScatterupdate"),r=R(t,"indices","tensorScatterupdate","int32"),s=R(a,"updates","tensorScatterupdate");if(eh(s,r,n.shape),n.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${s.dtype}.`);let i={tensor:n,indices:r,updates:s},o={};return W.runKernel(ho,i,o)}var R3=L({tensorScatterUpdate_:yT});function xT(e,t=1,a=!0){let n=R(e,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let s={x:n},i={k:t,sorted:a},[o,u]=W.runKernel(Co,s,i);return{values:o,indices:u}}var E3=L({topk_:xT});function AT(e,t=0,a=1,n,r){if(ja(e),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new hm(t,a,n,!0,r),i=$e(e,n);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var _3=L({truncatedNormal_:AT});function bT(e,t=0){let a=R(e,"x","unique","string_or_numeric");O(a.rank>0,()=>"The input tensor must be at least 1D");let n={x:a},r={axis:t},[s,i]=W.runKernel(Wd,n,r);return{values:s,indices:i}}var $3=L({unique_:bT});function vT(e,t,a){let n=R(e,"x","unsortedSegmentSum"),r=R(t,"segmentIds","unsortedSegmentSum","int32");O(ol(a),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:r},i={numSegments:a};return W.runKernel(Bd,s,i)}var M3=L({unsortedSegmentSum_:vT});function wT(e,t=0){let a=R(e,"x","unstack","string_or_numeric");O(t>=-a.shape.length&&t<a.shape.length,()=>`Axis = ${t} is not in [-${a.shape.length}, ${a.shape.length})`);let n={value:a},r={axis:t};return W.runKernel(au,n,r)}var gn=L({unstack_:wT});function F3(e,t){return Xc(e,t,"right")}function P3(e,t=!0,a,n){return W.makeVariable(e,t,a,n)}function O3(e,t){let a=[];for(let s=0;s<t.length;s++)t[s]&&a.push(s);let n=$e(e,"int32"),r=$e([a.length,e.length],"int32");for(let s=0;s<a.length;s++){let i=n.indexToLoc(a[s]),o=s*e.length;r.values.set(i,o)}return r.toTensor()}async function kT(e){let t=R(e,"condition","whereAsync","bool"),a=await t.data(),n=O3(t.shape,a);return e!==t&&t.dispose(),n}var Im=kT;async function IT(e,t,a){let n=R(e,"tensor","boolMask"),r=R(t,"mask","boolMask","bool"),s=a??0,i=r.rank,o=n.shape;O(i>0,()=>"mask cannot be scalar"),fa(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=s;m<s+i;m++)u*=o[m];let d=o.slice(0,s).concat([u],o.slice(s+i)),l=Z(n,d),p=Z(r,[-1]),c=await Im(p),h=Ze(c,[1]),f=Z0(l,h,s);return e!==n&&n.dispose(),t!==r&&r.dispose(),h.dispose(),l.dispose(),p.dispose(),c.dispose(),f}var D3=IT;function ST(e,t,a){let n=R(e,"x","transpose");if(t==null&&(t=n.shape.map((i,o)=>o).reverse()),O(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(i=>{O(i>=0&&i<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let r={x:n},s={perm:t};return n.dtype==="complex64"?Ue(()=>{let i=fl(n),o=Qd(n);return i=W.runKernel(rr,{x:i},s),o=W.runKernel(rr,{x:o},s),a&&(o=Nn(o)),or(i,o)}):W.runKernel(rr,r,s)}var ml=L({transpose_:ST});function CT(e,t,a,n,r=!0){let s=R(e,"v","movingAverage"),i=R(t,"x","movingAverage"),o=R(a,"decay","movingAverage");fA(s,i),O(dr(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=Be(1),d=ke(u,o),l=te(ke(i,s),d);if(r){O(n!=null,()=>"When using zeroDebias: true, step is required.");let p=R(n,"step","movingAverage");l=Te(l,ke(u,pl(o,p)))}return Ie(s,l)}var z3=L({movingAverage_:CT});function NT(e,t,a){ja(a);let n=R(e,"indices","scatterND","int32"),r=R(t,"updates","scatterND");eh(r,n,a);let s={indices:n,updates:r},i={shape:a};return W.runKernel(co,s,i)}var L3=L({scatterND_:NT});function TT(e,t,a,n){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(a.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${a.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function RT(e,t,a,n=0){ja(a);let r=R(e,"sparseIndices","sparseToDense","int32"),s=R(t,"sparseValues","sparseToDense","string_or_numeric"),i=R(n,"defaultValue","sparseToDense",s.dtype);TT(r,s,a,i);let o={sparseIndices:r,sparseValues:s,defaultValue:i},u={outputShape:a};return W.runKernel(wo,o,u)}var W3=L({sparseToDense_:RT});function ET(e,t){let a=R(t,"indices","gatherND","int32"),n={params:R(e,"x","gatherND","string_or_numeric"),indices:a};return W.runKernel(Ti,n)}var B3=L({gatherND_:ET});function _T(e,t){if(t==null)return e.shape.slice();if(dr(e.shape,t))return t;if(e.shape.length===t.length){let a=[];for(let n=0;n<e.shape.length;n++)t[n]==null&&e.shape[n]!=null?a.push(e.shape[n]):a.push(t[n]);return a}return t}function $T(e,t,a,n){let r=R(e,"x","dropout");if(O(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),O(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof xt?r.clone():r;let s=_T(r,a),i=1-t,o=Te(Y0(Ie(Yc(s,0,1,"float32",n),i)),i);return te(r,o)}var V3=L({dropout_:$T});function Sm(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function th(e,t,a){let n=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+n-1);r[s]=t-a*Math.cos(i)}return Qt(r,"float32")}async function MT(e,t,a=1){let n=R(e,"predictions","inTopK"),r=R(t,"targets","inTopK");O(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),O(n.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${r.rank}`),fa(n.shape.slice(0,n.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];O(a>0&&a<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${a}`);let i=await n.data(),o=await r.data(),[u,d]=[i.length/s,s],l=Yx("bool",u);for(let p=0;p<u;p++){let c=p*d,h=i.subarray(c,c+d),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),l[p]=0;for(let m=0;m<a;m++)if(f[m].index===o[p]){l[p]=1;break}}return e!==n&&n.dispose(),t!==r&&r.dispose(),He(l,r.shape,"bool")}var U3=MT,Cm={};je(Cm,{conv2d:()=>DT,depthwiseConv2d:()=>UT,matMul:()=>HT});function FT(e,t,a,n,r,s="NHWC",i){let o=e;e.rank===3&&(o=Z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]])),O(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),O(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),O(a.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${a}.`);let d=s==="NHWC"?o.shape[3]:o.shape[1],l=s==="NHWC"?u.shape[3]:u.shape[1];O(d===a[2],()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${a[2]}.`),O(l===a[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${a[3]}).`),mn("conv2dDerFilter",r,i);let p={x:o,dy:u},c={strides:n,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:a};return W.runKernel(Sd,p,c)}var PT=L({conv2DBackpropFilter_:FT});function ah(e,t,a){if(a==null||a==="linear")return e;if(a==="relu")return te(e,vm(t));throw new Error(`Cannot compute gradient for fused activation ${a}.`)}function nh(e,t){let a=t,n=H0(e.shape,t.shape);return n.length>0&&(a=st(a,n)),Z(a,e.shape)}function rh(e,t,a,n){if(t==="linear")return e;if(t==="relu")return ep(e);if(t==="elu")return q0(e);if(t==="relu6")return mm(e);if(t==="prelu")return um(e,a);if(t==="leakyrelu")return Q0(e,n);if(t==="sigmoid")return Cn(e);throw new Error(`Unknown fused activation ${t}.`)}var sh=(e,t)=>!(e>0)||t==="linear";function OT({x:e,filter:t,strides:a,pad:n,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:l}){if(u=u||"linear",sh(W.state.gradientDepth,u)===!1){O(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=Kd(e,t,a,n,r,s,i);return o!=null&&(S=Ie(S,o)),rh(S,u,d,l)}let p=R(e,"x","conv2d","float32"),c=R(t,"filter","conv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=Z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),O(c.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),mn("fused conv2d",n,i);let m=r==="NHWC"?h.shape[3]:h.shape[1];O(c.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${c.shape[2]}.`),O(cr(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let g=qd(h.shape,c.shape,a,s,n,i),y;o!=null&&(y=R(o,"bias","fused conv2d"),[y]=kt(y,p),r==="NHWC"?Ft(g.outShape,y.shape):(O(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),O(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(d!=null){let S=d.shape;if(O(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)O(S[0]===1||S[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${g.outChannels}).`);else if(S.length===3)try{Ft(S,g.outShape)}catch{let T=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(T)}x=R(d,"prelu weights","fused conv2d")}let A=(S,N)=>{O(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[T,_,P,E]=N,I=ah(S,P,u);O(rd(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let F=ob(_.shape,I,T,a,n),$=PT(_,I,T.shape,a,n),z=[F,$];if(E!=null){let M=nh(E,I);z.push(M)}return z},b={x:h,filter:c,bias:y,preluActivationWeights:x},w={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?Un((S,N,T)=>{let _=W.runKernel(Vr,b,w);return T([N,S,_]),f&&(_=Z(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:A}})(h,c):Un((S,N,T,_)=>{let P=W.runKernel(Vr,b,w);return _([N,S,P,T]),f&&(P=Z(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:A}})(h,c,y)}var DT=L({fusedConv2d_:OT});function zT(e,t,a,n,r,s=[1,1],i){let o=e;e.rank===3&&(o=Z(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d={x:o,dy:u},l={strides:n,pad:r,dimRoundingMode:i,dilations:s,filterShape:a};return W.runKernel(Cd,d,l)}var LT=L({depthwiseConv2dNativeBackpropFilter_:zT});function WT(e,t,a,n,r,s=[1,1],i){let o=t,u=!1;t.rank===3&&(u=!0,o=Z(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d={dy:o,filter:a},l={strides:n,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},p=W.runKernel(Nd,d,l);return u?Z(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var BT=L({depthwiseConv2dNativeBackpropInput_:WT});function VT({x:e,filter:t,strides:a,pad:n,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:l}){if(sh(W.state.gradientDepth,u)===!1){let w=Hc(e,t,a,n,r,s,i);return o!=null&&(w=Ie(w,o)),rh(w,u,d,l)}let p=R(e,"x","depthwiseConv2d","float32"),c=R(t,"filter","depthwiseConv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=Z(p,[1,p.shape[0],p.shape[1],p.shape[2]])),O(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),O(c.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),O(h.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),s==null&&(s=[1,1]),O(cr(a,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),mn("fused depthwiseConv2d",n,i);let m=qd(h.shape,c.shape,a,s,n,i,!0),g;o!=null&&(g=R(o,"bias","fused conv2d"),[g]=kt(g,p),Ft(m.outShape,g.shape));let y;d!=null&&(y=R(d,"prelu weights","fused depthwiseConv2d"));let x=(w,S)=>{O(rd(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[N,T,_,P]=S,E=ah(w,_,u),I=BT(T.shape,E,N,a,n,s,i),F=LT(T,E,N.shape,a,n,s,i);if(P!=null){let $=nh(g,E);return[I,F,$]}return[I,F]},A={x:h,filter:c,bias:g,preluActivationWeights:y},b={strides:a,pad:n,dataFormat:r,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?Un((w,S,N)=>{let T=W.runKernel(Ur,A,b);return N([S,w,T]),f&&(T=Z(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:x}})(h,c):Un((w,S,N,T)=>{let _=W.runKernel(Ur,A,b);return T([S,w,_,N]),f&&(_=Z(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:x}})(h,c,g)}var UT=L({fusedDepthwiseConv2d_:VT});function GT({a:e,b:t,transposeA:a=!1,transposeB:n=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(sh(W.state.gradientDepth,s)===!1){let P=rt(e,t,a,n);return r!=null&&(P=Ie(P,r)),rh(P,s,i,o)}let u=R(e,"a","fused matMul"),d=R(t,"b","fused matMul");[u,d]=kt(u,d);let l=a?u.shape[u.rank-2]:u.shape[u.rank-1],p=n?d.shape[d.rank-1]:d.shape[d.rank-2],c=a?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?d.shape[d.rank-2]:d.shape[d.rank-1],f=u.shape.slice(0,-2),m=d.shape.slice(0,-2),g=lt(f),y=lt(m);O(l===p,()=>`Error in fused matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${a} and transposeB=${n} must match.`);let x=Ft(u.shape.slice(0,-2),d.shape.slice(0,-2)).concat([c,h]),A=a?Z(u,[g,l,c]):Z(u,[g,c,l]),b=n?Z(d,[y,h,p]):Z(d,[y,p,h]),w;r!=null&&(w=R(r,"bias","fused matMul"),[w]=kt(w,u),Ft(x,w.shape));let S;i!=null&&(S=R(i,"prelu weights","fused matMul"));let N=(P,E)=>{let[I,F,$,z]=E,M=ah(Z(P,$.shape),$,s),H,V;if(!a&&!n?(H=rt(M,F,!1,!0),V=rt(I,M,!0,!1)):!a&&n?(H=rt(M,F,!1,!1),V=rt(M,I,!0,!1)):a&&!n?(H=rt(F,M,!1,!0),V=rt(I,M,!1,!1)):(H=rt(F,M,!0,!0),V=rt(M,I,!0,!0)),r!=null){let q=nh(z,M);return[H,V,q]}else return[H,V]},T={a:A,b,bias:w,preluActivationWeights:S},_={transposeA:a,transposeB:n,activation:s,leakyreluAlpha:o};return r==null?Un((P,E,I)=>{let F=W.runKernel(Br,T,_);return I([P,E,F]),{value:Z(F,x),gradFunc:N}})(A,b):Un((P,E,I,F)=>{let $=W.runKernel(Br,T,_);return F([P,E,$,I]),{value:Z($,x),gradFunc:N}})(A,b,w)}var HT=L({fusedMatMul_:GT});function jT(e){return th(e,.54,.46)}var qT=L({hammingWindow_:jT});function XT(e){return th(e,.5,.5)}var G3=L({hannWindow_:XT});function KT(e,t,a,n=!1,r=0){let s=0,i=[];for(;s+t<=e.size;)i.push(We(e,s,t)),s+=a;if(n)for(;s<e.size;){let o=s+t-e.size,u=ft([We(e,s,t-o),lr([o],r)]);i.push(u),s+=a}return i.length===0?Or([],[0,t]):Z(ft(i),[i.length,t])}var H3=L({frame_:KT});function YT(e,t,a,n,r=G3){n==null&&(n=Sm(t));let s=H3(e,t,a),i=te(s,r(t));return Jc(i,n)}var ZT=L({stft_:YT});function JT(e,t,a,n,r="bilinear",s=0){let i=R(e,"image","cropAndResize"),o=R(t,"boxes","cropAndResize","float32"),u=R(a,"boxInd","cropAndResize","int32"),d=o.shape[0];O(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${o.shape}.`),O(u.rank===1&&u.shape[0]===d,()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${o.shape}.`),O(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),O(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),O(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let l={image:i,boxes:o,boxInd:u},p={method:r,extrapolationValue:s,cropSize:n};return W.runKernel(yi,l,p)}var QT=L({cropAndResize_:JT});function eR(e){let t=R(e,"image","flipLeftRight","float32");O(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let a={image:t};return W.runKernel(Ii,a,{})}var tR=L({flipLeftRight_:eR});function aR(e){let t=R(e,"image","grayscaleToRGB"),a=t.rank-1,n=t.shape[a];O(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),O(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let r=new Array(t.rank);return r.fill(1,0,a),r[a]=3,Ps(t,r)}var nR=L({grayscaleToRGB_:aR});function rR(e){let t=R(e,"image","RGBToGrayscale"),a=t.rank-1,n=t.shape[a];O(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),O(n===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${n}.`);let r=t.dtype,s=qe(t,"float32"),i=Qt([.2989,.587,.114]),o;switch(t.rank){case 2:o=vs("ij,j->i",s,i);break;case 3:o=vs("ijk,k->ij",s,i);break;case 4:o=vs("ijkl,l->ijk",s,i);break;case 5:o=vs("ijklm,m->ijkl",s,i);break;case 6:o=vs("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return o=ua(o,-1),qe(o,r)}var sR=L({rgbToGrayscale_:rR});function iR(e,t,a=0,n=.5){let r=R(e,"image","rotateWithOffset","float32");O(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let s={image:r},i={radians:t,fillValue:a,center:n};return W.runKernel(To,s,i)}var oR=L({rotateWithOffset_:iR});function iu(e,t,a,n,r,s){n==null&&(n=.5),r==null&&(r=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return a=Math.min(a,i),O(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),O(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),O(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),O(t.rank===1,()=>"scores must be a 1D tensor"),O(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),O(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:a,iouThreshold:n,scoreThreshold:r,softNmsSigma:s}}function lR(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY){let s=R(e,"boxes","nonMaxSuppression","float32"),i=R(t,"scores","nonMaxSuppression","float32"),o=iu(s,i,a,n,r);a=o.maxOutputSize,n=o.iouThreshold,r=o.scoreThreshold;let u={maxOutputSize:a,iouThreshold:n,scoreThreshold:r};return W.runKernel(Zi,{boxes:s,scores:i},u)}var uR=L({nonMaxSuppression_:lR});function dR(e,t,a){let n=pR(e,t,a),r=n<0?-(n+1):n;e.splice(r,0,t)}function pR(e,t,a){return hR(e,t,a||cR)}function cR(e,t){return e>t?1:e<t?-1:0}function hR(e,t,a){let n=0,r=e.length,s=0,i=!1;for(;n<r;){s=n+(r-n>>>1);let o=a(t,e[s]);o>0?n=s+1:(r=s,i=!o)}return i?n:-n-1}function j3(e,t,a,n,r){return Nm(e,t,a,n,r,0)}function q3(e,t,a,n,r,s){return Nm(e,t,a,n,r,0,!1,s,!0)}function X3(e,t,a,n,r,s){return Nm(e,t,a,n,r,s,!0)}function Nm(e,t,a,n,r,s,i=!1,o=!1,u=!1){let d=[];for(let g=0;g<t.length;g++)t[g]>r&&d.push({score:t[g],boxIndex:g,suppressBeginIndex:0});d.sort(og);let l=s>0?-.5/s:0,p=[],c=[];for(;p.length<a&&d.length>0;){let g=d.pop(),{score:y,boxIndex:x,suppressBeginIndex:A}=g;if(y<r)break;let b=!1;for(let w=p.length-1;w>=A;--w){let S=fR(e,x,p[w]);if(S>=n){b=!0;break}if(g.score=g.score*mR(n,l,S),g.score<=r)break}g.suppressBeginIndex=p.length,b||(g.score===y?(p.push(x),c.push(g.score)):g.score>r&&dR(d,g,og))}let h=p.length,f=a-h;o&&f>0&&(p.push(...new Array(f).fill(0)),c.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=c),u&&(m.validOutputs=h),m}function fR(e,t,a){let n=e.subarray(t*4,t*4+4),r=e.subarray(a*4,a*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),o=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),d=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),h=(o-s)*(u-i),f=(p-d)*(c-l);if(h<=0||f<=0)return 0;let m=Math.max(s,d),g=Math.max(i,l),y=Math.min(o,p),x=Math.min(u,c),A=Math.max(y-m,0)*Math.max(x-g,0);return A/(h+f-A)}function mR(e,t,a){let n=Math.exp(t*a*a);return a<=e?n:0}function og(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function gR(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY){let s=R(e,"boxes","nonMaxSuppressionAsync"),i=R(t,"scores","nonMaxSuppressionAsync"),o=iu(s,i,a,n,r);a=o.maxOutputSize,n=o.iouThreshold,r=o.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),d=u[0],l=u[1],{selectedIndices:p}=j3(d,l,a,n,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),Qt(p,"int32")}var yR=gR;function xR(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=R(e,"boxes","nonMaxSuppression"),o=R(t,"scores","nonMaxSuppression"),u=iu(i,o,a,n,r,s);a=u.maxOutputSize,n=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;let d={boxes:i,scores:o},l={maxOutputSize:a,iouThreshold:n,scoreThreshold:r,softNmsSigma:s},p=W.runKernel(Ji,d,l);return{selectedIndices:p[0],selectedScores:p[1]}}var AR=L({nonMaxSuppressionWithScore_:xR});async function bR(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=R(e,"boxes","nonMaxSuppressionAsync"),o=R(t,"scores","nonMaxSuppressionAsync"),u=iu(i,o,a,n,r,s);a=u.maxOutputSize,n=u.iouThreshold,r=u.scoreThreshold,s=u.softNmsSigma;let d=await Promise.all([i.data(),o.data()]),l=d[0],p=d[1],{selectedIndices:c,selectedScores:h}=X3(l,p,a,n,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qt(c,"int32"),selectedScores:Qt(h)}}var vR=bR;function wR(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=R(e,"boxes","nonMaxSuppression"),o=R(t,"scores","nonMaxSuppression"),u=iu(i,o,a,n,r,null),d=u.maxOutputSize,l=u.iouThreshold,p=u.scoreThreshold,c={boxes:i,scores:o},h={maxOutputSize:d,iouThreshold:l,scoreThreshold:p,padToMaxOutputSize:s},f=W.runKernel(Bl,c,h);return{selectedIndices:f[0],validOutputs:f[1]}}var kR=L({nonMaxSuppressionPadded_:wR});async function IR(e,t,a,n=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=R(e,"boxes","nonMaxSuppressionAsync"),o=R(t,"scores","nonMaxSuppressionAsync"),u=iu(i,o,a,n,r,null),d=u.maxOutputSize,l=u.iouThreshold,p=u.scoreThreshold,[c,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=q3(c,h,d,l,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qt(f,"int32"),validOutputs:Be(m,"int32")}}var SR=IR;function CR(e,t,a=!1,n=!1){let r=R(e,"images","resizeBilinear");O(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),O(n===!1||a===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=Z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let o={images:s},u={alignCorners:a,halfPixelCenters:n,size:t},d=W.runKernel(io,o,u);return i?Z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var NR=L({resizeBilinear_:CR});function TR(e,t,a=!1,n=!1){let r=R(e,"images","resizeNearestNeighbor");O(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),O(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),O(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),O(n===!1||a===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=r,i=!1;r.rank===3&&(i=!0,s=Z(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let o={images:s},u={alignCorners:a,halfPixelCenters:n,size:t},d=W.runKernel(so,o,u);return i?Z(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var RR=L({resizeNearestNeighbor_:TR});function ER(e,t="binary",a=!1,n=.5){let r=R(e,"image","threshold"),s=.2989,i=.587,o=.114,u=r.shape[0]*r.shape[1],d=te(Qt([n]),255),l,p,c,h;if(O(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),O(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),O(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),O(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[l,p,c]=Rn(r,[1,1,1],-1);let m=te(l,s),g=te(p,i),y=te(c,o);h=Ie(Ie(m,g),y)}else h=e;if(t==="otsu"){let m=G0(qe(gm(h),"int32"),He([]),256);d=_R(m,u)}let f=a?jc(h,d):Jd(h,d);return qe(te(f,255),"int32")}function _R(e,t){let a=Qt([-1]),n=Qt([0]),r=Qt([0]),s,i,o,u,d,l;for(let p=0;p<e.size-1;p++){s=We(e,0,p+1),i=We(e,p+1),d=Te(st(s),t),l=Te(st(i),t);let c=st(te(s,hl(0,s.size)));o=Te(c,st(s));let h=lr(i.shape,s.size),f=Ie(hl(0,i.size),h),m=te(i,f);u=Te(st(m),st(i));let g=ke(o,u),y=ke(o,u),x=te(d,l);r=te(te(x,g),y);let A=Jd(r,n);n=sr(A,r,n),a=sr(A,Qt([p]),a)}return a}var $R=L({threshold_:ER});function MR(e,t,a="nearest",n="constant",r=0,s){let i=R(e,"image","transform","float32"),o=R(t,"transforms","transform","float32");O(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),O(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),O(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:o},d={interpolation:a,fillMode:n,fillValue:r,outputShape:s};return W.runKernel(No,u,d)}var FR=L({transform_:MR});function PR(e,t,a){let n=R(e,"a","bandPart");O(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let r=n.shape,[s,i]=n.shape.slice(-2),o,u;typeof t=="number"?(O(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),O(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=R(t<0?s:t,"numLower","bandPart")):(O(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=sr(mc(t,0),s,od(t,s))),typeof a=="number"?(O(a%1===0,()=>`bandPart(): numUpper must be an integer, got ${a}.`),O(a<=i,()=>`bandPart(): numUpper (${a}) must not be greater than the number of columns (${i}).`),u=R(a<0?i:a,"numUpper","bandPart")):(O(a.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=sr(mc(a,0),i,od(a,i)));let d=Z(hl(0,s,1,"int32"),[-1,1]),l=hl(0,i,1,"int32"),p=ke(d,l),c=sd(jc(p,o),J0(p,Nn(u))),h=Tn([s,i],n.dtype);return Z(Ua(gn(Z(n,[-1,s,i])).map(f=>sr(c,f,h))),r)}var OR=L({bandPart_:PR});function DR(e){let t;if(Array.isArray(e)){t=!1,O(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let s=1;s<e.length;++s)O(e[s].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${r})`)}else t=!0,e=Rn(e,e.shape[0],0).map(r=>Ze(r,[0]));O(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let a=[],n=e;for(let r=0;r<e.length;++r)a.push(W.tidy(()=>{let s=n[r];if(r>0)for(let i=0;i<r;++i){let o=te(st(te(a[i],s)),a[i]);s=ke(s,o)}return Te(s,Zd(s,"euclidean"))}));return t?Ua(a,0):a}var zR=L({gramSchmidt_:DR});function LR(e,t=!1){if(O(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return lg(e,t);{let a=e.shape.slice(0,e.shape.length-2).reduce((u,d)=>u*d),n=gn(Z(e,[a,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];n.forEach(u=>{let[d,l]=lg(u,t);r.push(d),s.push(l)});let i=Z(Ua(r,0),e.shape),o=Z(Ua(s,0),e.shape);return[i,o]}}function lg(e,t=!1){return W.tidy(()=>{O(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let a=e.shape[0],n=e.shape[1],r=K0(a),s=Ta(e),i=Or([[1]],[1,1]),o=Ta(i),u=a>=n?n:a;for(let d=0;d<u;++d){let l=s,p=o,c=r;[o,s,r]=W.tidy(()=>{let h=We(s,[d,d],[a-d,1]),f=Zd(h),m=We(s,[d,d],[1,1]),g=sr(Jd(m,0),Or([[-1]]),Or([[1]])),y=ke(m,te(g,f)),x=Te(h,y);x.shape[0]===1?o=Ta(i):o=ft([i,We(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);let A=Nn(Te(rt(g,y),f)),b=We(s,[d,0],[a-d,n]),w=te(A,o),S=ml(o);if(d===0)s=ke(b,rt(w,rt(S,b)));else{let _=ke(b,rt(w,rt(S,b)));s=ft([We(s,[0,0],[d,n]),_],0)}let N=ml(w),T=We(r,[0,d],[a,r.shape[1]-d]);if(d===0)r=ke(T,rt(rt(T,o),N));else{let _=ke(T,rt(rt(T,o),N));r=ft([We(r,[0,0],[a,d]),_],1)}return[o,s,r]}),ae([l,p,c])}return!t&&a>n&&(r=We(r,[0,0],[a,n]),s=We(s,[0,0],[n,n])),[r,s]})}var WR=L({qr_:LR}),pa;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(pa||(pa={}));function BR(e,t,a=pa.SUM_BY_NONZERO_WEIGHTS){let n=R(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=R(t,"weights","computeWeightedLoss"));let s=r==null?n:te(n,r);if(a===pa.NONE)return s;if(a===pa.SUM)return st(s);if(a===pa.MEAN){if(r==null)return id(s);{let i=n.size/r.size,o=Te(st(s),st(r));return i>1?Te(o,Be(i)):o}}if(a===pa.SUM_BY_NONZERO_WEIGHTS){if(r==null)return Te(st(s),Be(n.size));{let i=te(r,$r(n.shape)),o=qe(st(om(i,Be(0))),"float32");return Te(st(s),o)}}throw Error(`Unknown reduction: ${a}`)}var fr=L({computeWeightedLoss_:BR});function VR(e,t,a,n=pa.SUM_BY_NONZERO_WEIGHTS){let r=R(e,"labels","absoluteDifference"),s=R(t,"predictions","absoluteDifference"),i=null;a!=null&&(i=R(a,"weights","absoluteDifference")),fa(r.shape,s.shape,"Error in absoluteDifference: ");let o=za(ke(r,s));return fr(o,i,n)}var UR=L({absoluteDifference_:VR});function GR(e,t,a,n,r=pa.SUM_BY_NONZERO_WEIGHTS){let s=R(e,"labels","cosineDistance"),i=R(t,"predictions","cosineDistance"),o=null;n!=null&&(o=R(n,"weights","cosineDistance")),fa(s.shape,i.shape,"Error in cosineDistance: ");let u=Be(1),d=ke(u,st(te(s,i),a,!0));return fr(d,o,r)}var HR=L({cosineDistance_:GR});function jR(e,t,a,n=pa.SUM_BY_NONZERO_WEIGHTS){let r=R(e,"labels","hingeLoss"),s=R(t,"predictions","hingeLoss"),i=null;a!=null&&(i=R(a,"weights","hingeLoss")),fa(r.shape,s.shape,"Error in hingeLoss: ");let o=Be(1);r=ke(te(Be(2),r),o);let u=ep(ke(o,te(r,s)));return fr(u,i,n)}var qR=L({hingeLoss_:jR});function XR(e,t,a,n=1,r=pa.SUM_BY_NONZERO_WEIGHTS){let s=R(e,"labels","huberLoss"),i=R(t,"predictions","huberLoss"),o=null;a!=null&&(o=R(a,"weights","huberLoss")),fa(s.shape,i.shape,"Error in huberLoss: ");let u=Be(n),d=za(ke(i,s)),l=od(d,u),p=ke(d,l),c=Ie(te(Be(.5),fn(l)),te(u,p));return fr(c,o,r)}var KR=L({huberLoss_:XR});function YR(e,t,a,n=1e-7,r=pa.SUM_BY_NONZERO_WEIGHTS){let s=R(e,"labels","logLoss"),i=R(t,"predictions","logLoss"),o=null;a!=null&&(o=R(a,"weights","logLoss")),fa(s.shape,i.shape,"Error in logLoss: ");let u=Be(1),d=Be(n),l=Nn(te(s,cl(Ie(i,d)))),p=te(ke(u,s),cl(Ie(ke(u,i),d))),c=ke(l,p);return fr(c,o,r)}var ZR=L({logLoss_:YR});function JR(e,t,a,n=pa.SUM_BY_NONZERO_WEIGHTS){let r=R(e,"labels","meanSquaredError"),s=R(t,"predictions","meanSquaredError"),i=null;a!=null&&(i=R(a,"weights","meanSquaredError")),fa(r.shape,s.shape,"Error in meanSquaredError: ");let o=bm(r,s);return fr(o,i,n)}var QR=L({meanSquaredError_:JR});function eE(e,t){let a=R(e,"labels","sigmoidCrossEntropyWithLogits"),n=R(t,"logits","sigmoidCrossEntropyWithLogits");fa(a.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=ep(n),s=te(n,a),i=em(qr(Nn(za(n))));return Ie(ke(r,s),i)}function tE(e,t,a,n=0,r=pa.SUM_BY_NONZERO_WEIGHTS){let s=R(e,"multiClassLabels","sigmoidCrossEntropy"),i=R(t,"logits","sigmoidCrossEntropy"),o=null;if(a!=null&&(o=R(a,"weights","sigmoidCrossEntropy")),fa(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let d=Be(n),l=Be(1),p=Be(.5);s=Ie(te(s,ke(l,d)),te(p,d))}let u=eE(s,i);return fr(u,o,r)}var aE=L({sigmoidCrossEntropy_:tE});function nE(e,t,a=-1){if(a===-1&&(a=t.rank-1),a!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${a}`);return Un((n,r,s)=>{let i=am(r,[a],!0),o=ke(qe(r,"float32"),i);s([n,o]);let u=Nn(te(o,n));return{value:st(u,[a]),gradFunc:(d,l)=>{let[p,c]=l,h=Yd(d.shape,[a]);return[te(Z(d,h),ke(qe(p,"float32"),qr(c))),te(Z(d,h),ke(qr(c),qe(p,"float32")))]}}})(e,t)}function rE(e,t,a,n=0,r=pa.SUM_BY_NONZERO_WEIGHTS){let s=R(e,"onehotLabels","softmaxCrossEntropy"),i=R(t,"logits","softmaxCrossEntropy"),o=null;if(a!=null&&(o=R(a,"weights","softmaxCrossEntropy")),fa(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let d=Be(n),l=Be(1),p=Be(s.shape[1]);s=Ie(te(s,ke(l,d)),Te(d,p))}let u=nE(s,i);return fr(u,o,r)}var sE=L({softmaxCrossEntropy_:rE});function iE(e,t,a,n){let r=R(e,"indices","sparseFillEmptyRows","int32"),s=R(t,"values","sparseFillEmptyRows"),i=R(a,"denseShape","sparseFillEmptyRows","int32"),o=R(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u={indices:r,values:s,denseShape:i,defaultValue:o},d=W.runKernel(Pd,u);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}var oE=L({sparseFillEmptyRows_:iE});function lE(e,t,a){let n=R(e,"inputIndices","sparseReshape","int32"),r=R(t,"inputShape","sparseReshape","int32"),s=R(a,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:r,newShape:s},o=W.runKernel(Jl,i);return{outputIndices:o[0],outputShape:o[1]}}var uE=L({sparseReshape_:lE});function dE(e,t,a){let n=R(e,"data","sparseSegmentMean"),r=R(t,"indices","sparseSegmentMean","int32"),s=R(a,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:r,segmentIds:s};return W.runKernel(Ql,i)}var pE=L({sparseSegmentMean_:dE});function cE(e,t,a){let n=R(e,"data","sparseSegmentSum"),r=R(t,"indices","sparseSegmentSum","int32"),s=R(a,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:r,segmentIds:s};return W.runKernel(eu,i)}var hE=L({sparseSegmentSum_:cE});function fE(e,t,a,n,r,s,i,o){let u=R(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let d=R(t,"dataSplits","stringNGrams");if(d.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:a,nGramWidths:n,leftPad:r,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:u,dataSplits:d},c=W.runKernel(tu,p,l);return{nGrams:c[0],nGramsSplits:c[1]}}var mE=L({stringNGrams_:fE});function gE(e,t,a=!0){let n=R(e,"input","stringSplit","string"),r=R(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let s={skipEmpty:a},i={input:n,delimiter:r},o=W.runKernel(zd,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var yE=L({stringSplit_:gE});function xE(e,t){let a=R(e,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:a};return W.runKernel(Ld,r,n)}var AE=L({stringToHashBucketFast_:xE});function bE(e,t,a,n=!0){let r=R(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:a,replaceGlobal:n};return W.runKernel(Dd,{x:r},s)}var vE=L({staticRegexReplace_:bE}),K3={fft:Zc,ifft:ld,rfft:Jc,irfft:Am},Y3={hammingWindow:qT,hannWindow:G3,frame:H3,stft:ZT},Pe={flipLeftRight:tR,grayscaleToRGB:nR,resizeNearestNeighbor:RR,resizeBilinear:NR,rgbToGrayscale:sR,rotateWithOffset:oR,cropAndResize:QT,nonMaxSuppression:uR,nonMaxSuppressionAsync:yR,nonMaxSuppressionWithScore:AR,nonMaxSuppressionWithScoreAsync:vR,nonMaxSuppressionPadded:kR,nonMaxSuppressionPaddedAsync:SR,threshold:$R,transform:FR},Z3={bandPart:OR,gramSchmidt:zR,qr:WR},J3={absoluteDifference:UR,computeWeightedLoss:fr,cosineDistance:HR,hingeLoss:qR,huberLoss:KR,logLoss:ZR,meanSquaredError:QR,sigmoidCrossEntropy:aE,softmaxCrossEntropy:sE},Q3={sparseFillEmptyRows:oE,sparseReshape:uE,sparseSegmentMean:pE,sparseSegmentSum:hE},e1={stringNGrams:mE,stringSplit:yE,stringToHashBucketFast:AE,staticRegexReplace:vE},t1={};je(t1,{Serializable:()=>a1,SerializationMap:()=>n1,getRegisteredName:()=>kE,registerClass:()=>r1});var wE=new Map,Pf=new Map,a1=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},n1=class Yo{constructor(){this.classNameMap={}}static getMap(){return Yo.instance==null&&(Yo.instance=new Yo),Yo.instance}static register(t){Yo.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function r1(e,t,a){O(e.className!=null,()=>"Class being registered does not have the static className property defined."),O(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),O(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof a>"u"&&(a=e.className);let n=a,r=t+">"+n;return n1.register(e),wE.set(r,e),Pf.set(e,r),e}function kE(e){return Pf.has(e)?Pf.get(e):e.className}var ns=class extends a1{minimize(e,t=!1,a){let{value:n,grads:r}=this.computeGradients(e,a);if(a!=null){let s=a.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(s)}else this.applyGradients(r);return ae(r),t?n:(n.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Mb(e,t)}dispose(){this.iterations_!=null&&ae(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Be(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ns,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var Tm=class extends ns{static get className(){return"Adadelta"}constructor(e,t,a=null){super(),this.learningRate=e,this.rho=t,this.epsilon=a,this.accumulatedGrads=[],this.accumulatedUpdates=[],a==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=W.registeredVariables[t],r=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accum_grad`,variable:Ue(()=>Va(n).variable(r))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${t}/accum_var`,variable:Ue(()=>Va(n).variable(r))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[a].variable,o=this.accumulatedUpdates[a].variable;Ue(()=>{let u=Ie(te(i,this.rho),te(fn(s),1-this.rho)),d=te(Te(Vn(Ie(o,this.epsilon)),Vn(Ie(i,this.epsilon))),s),l=Ie(te(o,this.rho),te(fn(d),1-this.rho));i.assign(u),o.assign(l);let p=Ie(te(d,-this.learningRate),n);n.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(ae(this.accumulatedGrads.map(e=>e.variable)),ae(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,a=!1;this.accumulatedGrads=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.accumulatedUpdates=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Rm=class extends ns{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=W.registeredVariables[t];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${t}/accumulator`,variable:Ue(()=>lr(n.shape,this.initialAccumulatorValue).variable(!1))});let r=Array.isArray(e)?e[a].tensor:e[t];if(r==null)return;let s=this.accumulatedGrads[a].variable;Ue(()=>{let i=Ie(s,fn(r));s.assign(i);let o=Ie(te(Te(r,Vn(Ie(i,W.backend.epsilon()))),-this.learningRate),n);n.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&ae(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},Em=class extends ns{static get className(){return"Adam"}constructor(e,t,a,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ue(()=>{this.accBeta1=Be(t).variable(),this.accBeta2=Be(a).variable()}),n==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);Ue(()=>{let a=ke(1,this.accBeta1),n=ke(1,this.accBeta2);t.forEach((r,s)=>{let i=W.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:Ue(()=>Va(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${r}/v`,variable:Ue(()=>Va(i).variable(o))});let u=Array.isArray(e)?e[s].tensor:e[r];if(u==null)return;let d=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,p=Ie(te(d,this.beta1),te(u,1-this.beta1)),c=Ie(te(l,this.beta2),te(fn(u),1-this.beta2)),h=Te(p,a),f=Te(c,n);d.assign(p),l.assign(c);let m=Ie(te(Te(h,Ie(Vn(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(te(this.accBeta1,this.beta1)),this.accBeta2.assign(te(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&ae(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Ue(()=>{this.accBeta1.assign(pl(this.beta1,this.iterations_+1)),this.accBeta2.assign(pl(this.beta2,this.iterations_+1))});let t=e.length/2,a=!1;this.accumulatedFirstMoment=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(a)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},_m=class extends ns{static get className(){return"Adamax"}constructor(e,t,a,n=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=n,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ue(()=>{this.iteration=Be(0).variable(),this.accBeta1=Be(t).variable()}),n==null&&(this.epsilon=W.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(a=>a.name):Object.keys(e);Ue(()=>{let a=ke(1,this.accBeta1),n=Te(-this.learningRate,Ie(te(this.iteration,this.decay),1));t.forEach((r,s)=>{let i=W.registeredVariables[r],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${r}/m`,variable:Va(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${r}/v`,variable:Va(i).variable(o)});let u=Array.isArray(e)?e[s].tensor:e[r];if(u==null)return;let d=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,p=Ie(te(d,this.beta1),te(u,1-this.beta1)),c=te(l,this.beta2),h=za(u),f=im(c,h);d.assign(p),l.assign(f);let m=Ie(te(Te(n,a),Te(p,Ie(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(Ie(this.iteration,1)),this.accBeta1.assign(te(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&ae(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&ae(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},ih=class extends ns{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=Array.isArray(e)?e[a].tensor:e[t];if(n==null)return;let r=W.registeredVariables[t];Ue(()=>{let s=Ie(te(this.c,n),r);r.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=In(Be(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},$m=class extends ih{static get className(){return"Momentum"}constructor(e,t,a=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=a,this.accumulations=[],this.m=Be(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=W.registeredVariables[t];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${t}/momentum`,variable:Ue(()=>Va(n).variable(!1))});let r=this.accumulations[a].variable,s=Array.isArray(e)?e[a].tensor:e[t];s!=null&&Ue(()=>{let i,o=Ie(te(this.m,r),s);this.useNesterov?i=Ie(te(this.c,Ie(s,te(o,this.m))),n):i=Ie(te(this.c,o),n),r.assign(o),n.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&ae(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(a=>({originalName:a.name,variable:a.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Mm=class extends ns{static get className(){return"RMSProp"}constructor(e,t=.9,a=0,n=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=a,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,n==null&&(this.epsilon=W.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,a)=>{let n=W.registeredVariables[t],r=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${t}/rms`,variable:Ue(()=>Va(n).variable(r))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${t}/momentum`,variable:Ue(()=>Va(n).variable(r))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${t}/mg`,variable:Ue(()=>Va(n).variable(r))});let s=Array.isArray(e)?e[a].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[a].variable,o=this.accumulatedMoments[a].variable;Ue(()=>{let u=Ie(te(i,this.decay),te(fn(s),1-this.decay));if(this.centered){let d=this.accumulatedMeanGrads[a].variable,l=Ie(te(d,this.decay),te(s,1-this.decay)),p=Te(te(s,this.learningRate),Vn(ke(u,Ie(fn(l),this.epsilon)))),c=Ie(te(o,this.momentum),p);i.assign(u),d.assign(l),o.assign(c);let h=ke(n,c);n.assign(h)}else{let d=Ie(te(i,this.decay),te(fn(s),1-this.decay)),l=Ie(te(o,this.momentum),Te(te(s,this.learningRate),Vn(Ie(d,this.epsilon))));i.assign(d),o.assign(l);let p=ke(n,l);n.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&ae(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&ae(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&ae(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,a=!1;this.accumulatedMeanSquares=e.slice(0,t).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.accumulatedMoments=e.slice(t,t*2).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(n=>({originalName:n.name,variable:n.tensor.variable(a)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},IE=[Tm,Rm,Em,_m,$m,Mm,ih];function SE(){for(let e of IE)r1(e)}var ar={};je(ar,{CompositeArrayBuffer:()=>pr,browserFiles:()=>$E,browserHTTPRequest:()=>zE,concatenateArrayBuffers:()=>n8,copyModel:()=>S8,decodeWeights:()=>kA,decodeWeightsStream:()=>SA,encodeWeights:()=>ZS,fromMemory:()=>WE,fromMemorySync:()=>u1,getLoadHandlers:()=>p8,getModelArtifactsForJSON:()=>z0,getModelArtifactsForJSONSync:()=>NA,getModelArtifactsInfoForJSON:()=>jd,getSaveHandlers:()=>d8,getWeightSpecs:()=>Rf,http:()=>Pm,isHTTPScheme:()=>Df,listModels:()=>k8,loadWeights:()=>FE,moveModel:()=>C8,registerLoadRouter:()=>u8,registerSaveRouter:()=>l8,removeModel:()=>I8,weightsLoaderFactory:()=>i1,withSaveHandler:()=>BE,withSaveHandlerSync:()=>VE});var CE="model",NE=".json",TE=".weights.bin";function ug(e){return new Promise(t=>setTimeout(t)).then(e)}var xc=class Of{constructor(t){if(!U().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Of.URL_SCHEME)&&(t=t.slice(Of.URL_SCHEME.length)),(t==null||t.length===0)&&(t=CE),this.modelJsonFileName=t+NE,this.weightDataFileName=t+TE}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let a=pr.join(t.weightData),n=window.URL.createObjectURL(new Blob([a],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let r=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s=CA(t,r),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await ug(()=>o.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=n,await ug(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:jd(t)}}}};xc.URL_SCHEME="downloads://";var RE=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let a=new FileReader;a.onload=n=>{let r=JSON.parse(n.target.result),s=r.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=z0(r,o=>this.loadWeights(o));e(i)},a.onerror=n=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(this.jsonFile)})}loadWeights(e){let t=[],a=[];for(let s of e)t.push(...s.weights),a.push(...s.paths);let n=this.checkManifestAndWeightFiles(e),r=a.map(s=>this.loadWeightsFile(s,n[s]));return Promise.all(r).then(s=>[t,s])}loadWeightsFile(e,t){return new Promise((a,n)=>{let r=new FileReader;r.onload=s=>{let i=s.target.result;a(i)},r.onerror=s=>n(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],a=this.weightsFiles.map(r=>ig(r.name)),n={};for(let r of e)r.paths.forEach(s=>{let i=ig(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),a.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);n[s]=this.weightsFiles[a.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}},EE=e=>U().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xc.URL_SCHEME)?_E(e.slice(xc.URL_SCHEME.length)):null;an.registerSaveRouter(EE);function _E(e="model"){return new xc(e)}function $E(e){return new RE(e)}function dg(e,t,a,n){i(e),a=a??0,n=n??1,o(a,n);let r=0,s=u=>(u.then(d=>{let l=a+ ++r/e.length*(n-a);return t(l),d}),u);function i(u){O(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function o(u,d){O(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),O(d>=0&&d<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${d}`),O(d>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${d}`)}return Promise.all(e.map(s))}async function s1(e,t){t==null&&(t={});let a=t.fetchFunc==null?U().platform.fetch:t.fetchFunc,n=e.map(s=>a(s,t.requestInit,{isBinary:!0})),r=(t.onProgress==null?await Promise.all(n):await dg(n,t.onProgress,0,.5)).map(s=>s.arrayBuffer());return t.onProgress==null?await Promise.all(r):await dg(r,t.onProgress,.5,1)}function ME(e,t){var a;let n=t.fetchFunc==null?U().platform.fetch:t.fetchFunc,r=0,s;return(a=t.onProgress)===null||a===void 0||a.call(t,0),new ReadableStream({pull:async i=>{for(var o;r<e.length;){s||(s=(await n(e[r],t.requestInit,{isBinary:!0})).body.getReader());let{done:u,value:d}=await s.read();if(u){r++,s=void 0,(o=t.onProgress)===null||o===void 0||o.call(t,r/e.length);continue}i.enqueue(d);return}i.close()}})}async function FE(e,t="",a,n){return i1(r=>s1(r,{requestInit:n}))(e,t,a)}function i1(e){return async(t,a="",n)=>{let r=t.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],o=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,x=zs[y]*lt(g.shape),A=()=>{r[f]=!0,s[f]==null&&(s[f]=[]),s[f].push({manifestEntry:g,groupOffset:m,sizeBytes:x})};n!=null?n.forEach((b,w)=>{b===g.name&&(A(),i[w]=!0)}):A(),o.push(g.name),m+=x})}),!i.every(h=>h)){let h=n.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),d=[];u.forEach(h=>{t[h].paths.forEach(f=>{let m=a+(a.endsWith("/")?"":"/")+f;d.push(m)})});let l=await e(d),p={},c=0;return u.forEach(h=>{let f=t[h].paths.length,m=new pr(l.slice(c,c+f));s[h].forEach(g=>{let y=m.slice(g.groupOffset,g.groupOffset+g.sizeBytes),x=kA(y,[g.manifestEntry]);for(let A in x)p[A]=x[A]}),c+=f}),p}}var PE="application/octet-stream",OE="application/json",Fm=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(O(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=U().platform.fetch,O(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&O(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let a=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=CA(e,a);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:OE}),"model.json"),e.weightData!=null){let s=pr.join(e.weightData);t.body.append("model.weights.bin",new Blob([s],{type:PE}),"model.weights.bin")}let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:jd(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let a=t.modelTopology,n=t.weightsManifest;if(a==null&&n==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();let e=await this.loadModelJSON();return z0(e,t=>this.loadWeights(t))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),a=Rf(e.weightsManifest),n=()=>ME(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:a,getWeightStream:n})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[a,n]=DE(t),r=this.weightPathPrefix||a,s=[],i=[];for(let o of e)for(let u of o.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(u)):s.push(r+u+n);return this.weightUrlConverter&&s.push(...await Promise.all(i)),s}async loadWeights(e){let t=await this.getWeightUrls(e),a=Rf(e),n=await s1(t,this.loadOptions);return[a,n]}};Fm.URL_SCHEME_REGEX=/^https?:\/\//;function DE(e){let t=e.lastIndexOf("/"),a=e.lastIndexOf("?"),n=e.substring(0,t),r=a>t?e.substring(a):"";return[n+"/",r]}function Df(e){return e.match(Fm.URL_SCHEME_REGEX)!=null}var o1=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let a=!0;if(Array.isArray(e)?a=e.every(n=>Df(n)):a=Df(e),a)return Pm(e,t)}return null};an.registerSaveRouter(o1);an.registerLoadRouter(o1);function Pm(e,t){return new Fm(e,t)}function zE(e,t){return Pm(e,t)}var Ph=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},l1=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},LE=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function WE(e,t,a,n){let r=arguments;return new LE(u1(...r))}function u1(e,t,a,n){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Ph(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ph({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ph({modelTopology:e,weightSpecs:t,weightData:a,trainingConfig:n}))}function BE(e){return new l1(e)}function VE(e){return new l1(e)}var d1={};je(d1,{confusionMatrix:()=>GE});function UE(e,t,a){let n=R(e,"labels","confusionMatrix"),r=R(t,"predictions","confusionMatrix");O(a==null||a>0&&Number.isInteger(a),()=>`If provided, numClasses must be a positive integer, but got ${a}`),O(n.rank===1,()=>`Expected the rank of labels to be 1, but got ${n.rank}`),O(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),O(n.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${n.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),O(a>0&&Number.isInteger(a),()=>`numClasses is required to be a positive integer, but got ${a}`);let s=gc(qe(n,"int32"),a),i=gc(qe(r,"int32"),a),o=ml(s),u=rt(o,i);return qe(u,"int32")}var GE=L({confusionMatrix_:UE}),Zn={};je(Zn,{draw:()=>JE,fromPixels:()=>QE,fromPixelsAsync:()=>KE,toPixels:()=>ZE});var hs,pg=!1;function p1(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let a=!1,n=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)a=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(Ju(Yu,W.backendName)!=null){let c={pixels:e},h={numChannels:t};return W.runKernel(Yu,c,h)}let[u,d]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],l;if(i)l=e.getContext("2d").getImageData(0,0,u,d).data;else if(n||a)l=e.data;else if(s||r||o){if(hs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")hs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else hs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});hs.canvas.width=u,hs.canvas.height=d,hs.drawImage(e,0,0,u,d),l=hs.getImageData(0,0,u,d).data}let p;if(t===4)p=new Int32Array(l);else{let c=u*d;p=new Int32Array(c*t);for(let h=0;h<c;h++)for(let f=0;f<t;++f)p[h*t+f]=l[h*4+f]}return wm(p,[d,u,t],"int32")}function HE(e){return e!=null&&e.data instanceof Uint8Array}function jE(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function qE(e){return e!=null&&e.width!==0&&e.height!==0}function XE(e){return jE()&&!(e instanceof ImageBitmap)&&qE(e)&&!HE(e)}async function KE(e,t=3){let a=null;if(U().getBool("WRAP_TO_IMAGEBITMAP")&&XE(e)){let n;try{n=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{n=null}n!=null&&n.width===e.width&&n.height===e.height?a=n:a=e}else a=e;return p1(a,t)}function c1(e){if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=e.rank===2?1:e.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function YE(e){let t=(e==null?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function ZE(e,t){let a=R(e,"img","toPixels");if(!(e instanceof xt)){let d=a;a=qe(d,"int32"),d.dispose()}c1(a);let[n,r]=a.shape.slice(0,2),s=a.rank===2?1:a.shape[2],i=await a.data(),o=a.dtype==="float32"?255:1,u=new Uint8ClampedArray(r*n*4);for(let d=0;d<n*r;++d){let l=[0,0,0,255];for(let c=0;c<s;c++){let h=i[d*s+c];if(a.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(a.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);s===1?(l[0]=h*o,l[1]=h*o,l[2]=h*o):l[c]=h*o}let p=d*4;u[p+0]=Math.round(l[0]),u[p+1]=Math.round(l[1]),u[p+2]=Math.round(l[2]),u[p+3]=Math.round(l[3])}if(t!=null){pg||Ju(Td,W.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),pg=!0),t.width=r,t.height=n;let d=t.getContext("2d"),l=new ImageData(u,r,n);d.putImageData(l,0,0)}return a!==e&&a.dispose(),u}function JE(e,t,a){let n=R(e,"img","draw");if(!(e instanceof xt)){let i=n;n=qe(i,"int32"),i.dispose()}c1(n),YE(a==null?void 0:a.imageOptions);let r={image:n},s={canvas:t,options:a};W.runKernel(Td,r,s)}var QE=L({fromPixels_:p1}),Om={};je(Om,{prepareAndValidate:()=>h1});function h1(e,t){let a=e.shape.length,n=t.shape.length;if(a<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${a}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>a)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${a}`);if(lt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,s=r[r.length-1],i=1;for(let p=0;p<r.length-1;++p)i*=r[p];let o=e.shape,u=r.slice();u.pop();let d=1;for(let p=s;p<a;++p)d*=o[p],u.push(o[p]);let l=[...kl(e.shape).map(p=>p/d),1].slice(0,s);return[u,i,d,l]}var wt={};je(wt,{assertParamsValid:()=>t_,computeFlatOffset:()=>i_,computeOutShape:()=>n_,getNormalizedAxes:()=>r_,isSliceContinous:()=>s_,maskToAxes:()=>a_,parseSliceParams:()=>o_,sliceInfo:()=>l_,startForAxis:()=>b1,startIndicesWithElidedDims:()=>y1,stopForAxis:()=>v1,stopIndicesWithElidedDims:()=>x1,stridesForAxis:()=>A1,stridesWithElidedDims:()=>f1});var zf=-2,e_=-1;function t_(e,t,a){let n=e.shape.length;O(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),O(n===a.length,()=>`Error in slice${n}D: Length of size ${a} must match the rank of the array (${n}).`);for(let r=0;r<n;++r)O(t[r]+a[r]<=e.shape[r],()=>`Error in slice${n}D: begin[${r}] + size[${r}] (${t[r]+a[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function a_(e){let t=[],a=0;for(;e>0;)e&1&&t.push(a),e/=2,a++;return t}function n_(e,t,a){let n=[];for(let r=0;r<e.length;r++)n[r]=Math.ceil((t[r]-e[r])/a[r]);return n}function f1(e,t,a,n){let r=[...e];for(let s=r.length;s<n.length;s++)r.push(1);for(let s=0;s<a;s++)s===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function m1(e,t,a){return a<=e?a:a-(t-1)}function g1(e,t){let a=[];for(let n=0;n<e;n++)a.push(t+n);return a}function r_(e,t,a,n,r,s,i,o,u){let d=e.length,l=new Array(d),p=new Array(d),c=new Array(d);if(t.length&&a>0){let h=t[0],f=a+1;l=y1(i,h,f,n,e),p=x1(o,h,f,r,e),c=f1(s,h,f,e)}else for(let h=0;h<d;h++)l[h]=b1(i,n,s,e,h,u),p[h]=v1(o,r,s,e,h,u),c[h]=A1(s,h,u);return{begin:l,end:p,strides:c}}function y1(e,t,a,n,r){let s=[...r],i=g1(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let u=m1(t,a,o),d=n[u];e&1<<u&&(d=0),s[o]=d}return s}function x1(e,t,a,n,r){let s=[...r],i=g1(a,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let u=m1(t,a,o),d=n[u];e&1<<u&&(d=Number.MAX_SAFE_INTEGER),s[o]=d}for(let o=0;o<s.length;o++){let u=r[o];s[o]<0&&(s[o]+=u),s[o]=Ku(0,s[o],r[o])}return s}function A1(e,t,a){let n=e[t];return(a&1<<t||n==null)&&(n=1),n}function b1(e,t,a,n,r,s){let i=t[r],o=a[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=n[r];return i<0&&(i+=u),i=Ku(0,i,u-1),i}function v1(e,t,a,n,r,s){let i=t[r],o=a[r]||1;(e&1<<r||s&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=n[r];return i<0&&(i+=u),o>0?i=Ku(0,i,u):i=Ku(-1,i,u-1),i}function s_(e,t,a){let n=a.length;for(let r=0;r<a.length;r++)if(a[r]>1){n=r;break}for(let r=n+1;r<a.length;r++)if(t[r]>0||a[r]!==e[r])return!1;return!0}function i_(e,t){let a=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)a+=e[n]*t[n];return a}function o_(e,t,a){let n,r=e.shape.length;typeof t=="number"?n=[t,...new Array(r-1).fill(0)]:t.length<r?n=t.concat(new Array(r-t.length).fill(0)):n=t.slice(),n.forEach(i=>{O(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return a==null?s=new Array(r).fill(-1):typeof a=="number"?s=[a,...new Array(r-1).fill(-1)]:a.length<r?s=a.concat(new Array(r-a.length).fill(-1)):s=a,s=s.map((i,o)=>i>=0?i:(O(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-n[o])),[n,s]}function l_(e,t,a,n,r,s,i,o,u){let d;if(n==null?(d=new Array(t.length),d.fill(1)):d=n,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,p={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:a.slice(),strides:d.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let x=0;x<p.dims;x++)l&&1<<x&o&&p.numAddAxisAfterEllipsis++,1<<x&i&&(l=!0);l||(p.ellipsisMask|=1<<p.dims,p.dims++);let c={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};u_(p,c);let h=!0,f=!0,m=!0,g=[],y=[];for(let x=0;x<e.length;++x){if(c.strides[x]===0)throw Error(`strides[${x}] must be non-zero`);let A=!!(c.shrinkAxisMask&1<<x),b=e[x];if(b===-1){g.push(A?1:-1);continue}let w=[c.beginMask&1<<x,c.endMask&1<<x],S=[c.strides[x]>0?0:-1,c.strides[x]>0?b:b-1];if(A&&c.strides[x]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&c.strides[x]===1;let N=!!(c.beginMask&1<<x&&c.endMask&1<<x);if(c.beginValid&&c.endValid){if(A){let E=c.begin[x]<0?b+c.begin[x]:c.begin[x];if(c.begin[x]=E,c.end[x]=c.begin[x]+1,E<0||E>=b)throw Error(`slice index ${c.begin[x]} of dimension ${x} out of bounds.`)}else c.begin[x]=cg(c.begin[x],0,c.strides[x],b,w,S),c.end[x]=cg(c.end[x],1,c.strides[x],b,w,S);let P=c.strides[x]===1&&c.begin[x]===0&&c.end[x]===b;h=h&&P,f=f&&(x===0&&c.strides[x]===1||P)}else h=h&&c.strides[x]===1&&N,f=f&&(x===0&&c.strides[x]===1||N);let T,_=!1;if(c.beginValid&&c.endValid?(T=c.end[x]-c.begin[x],_=!0):A?(T=1,_=!0):N&&b>=0&&(c.strides[x]<0?T=-b:T=b,_=!0),_){let P;T===0||T<0!=c.strides[x]<0?P=0:P=Math.trunc(T/c.strides[x])+(T%c.strides[x]!==0?1:0),g.push(P)}else g.push(-1)}for(let x=0;x<c.finalShapeGatherIndices.length;++x){let A=c.finalShapeGatherIndices[x];A>=0?y.push(g[A]):A===zf&&y.push(1)}return{finalShapeSparse:y.filter((x,A)=>c.finalShapeGatherIndices[A]!==zf),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:c.begin,end:c.end,strides:c.strides}}function u_(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let a=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<e.dims;n++)if(1<<n&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-n)+1+e.numAddAxisAfterEllipsis,t.dims);for(;a<r;a++)t.begin[a]=0,t.end[a]=0,t.strides[a]=1,t.beginMask|=1<<a,t.endMask|=1<<a,t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[a]=n}else if(1<<n&e.newAxisMask)t.finalShapeGatherIndices.push(zf),t.finalShapeGatherIndicesSparse.push(-1);else{if(a===t.begin.length)throw Error(`Index out of range using input dim ${a}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[a]=e.begin[n]),e.end!=null&&(t.end[a]=e.end[n]),t.strides[a]=e.strides[n],e.beginMask&1<<n&&(t.beginMask|=1<<a),e.endMask&1<<n&&(t.endMask|=1<<a),e.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(e_),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<a):(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[a]=n,a++}}function cg(e,t,a,n,r,s){if(r[t])return a>0?s[t]:s[t+1&1];{let i=e<0?n+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var d_="4.22.0",w1=class{static sgd(e){return new ih(e)}static momentum(e,t,a=!1){return new $m(e,t,a)}static rmsprop(e,t=.9,a=0,n=null,r=!1){return new Mm(e,t,a,n,r)}static adam(e=.001,t=.9,a=.999,n=null){return new Em(e,t,a,n)}static adadelta(e=.001,t=.95,a=null){return new Tm(e,t,a)}static adamax(e=.002,t=.9,a=.999,n=null,r=0){return new _m(e,t,a,n,r)}static adagrad(e,t=.1){return new Rm(e,t)}},p_=w1,c_=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e();function k1(){return new Promise(e=>c_(()=>e()))}var C={};je(C,{ERF_A1:()=>R_,ERF_A2:()=>E_,ERF_A3:()=>__,ERF_A4:()=>$_,ERF_A5:()=>M_,ERF_P:()=>T_,PARALLELIZE_THRESHOLD:()=>Dm,RowPartitionType:()=>zn,SELU_SCALE:()=>N_,SELU_SCALEALPHA:()=>C_,applyActivation:()=>rh,assertAndGetBroadcastShape:()=>Ft,assertAxesAreInnerMostDims:()=>e9,assertParamsConsistent:()=>h_,assignToTypedArray:()=>L_,axesAreInnerMostDims:()=>X0,calculateShapes:()=>T3,checkEinsumDimSizes:()=>H_,checkPadOnDimRoundingMode:()=>mn,combineLocations:()=>Ib,combineRaggedTensorToTensorShapes:()=>m_,complexWithEvenIndex:()=>O_,complexWithOddIndex:()=>D_,computeConv2DInfo:()=>qd,computeConv3DInfo:()=>jA,computeDefaultPad:()=>B0,computeDilation2DInfo:()=>Y8,computeOptimalWindowSize:()=>A_,computeOutAndReduceShapes:()=>QC,computeOutShape:()=>f_,computePool2DInfo:()=>HA,computePool3DInfo:()=>Z8,convertConv2DDataFormat:()=>qA,decodeEinsumEquation:()=>U_,eitherStridesOrDilationsAreOne:()=>cr,expandShapeToKeepDim:()=>Yd,exponent:()=>B_,exponents:()=>W_,fromStringArrayToUint8:()=>c$,fromUint8ToStringArray:()=>p$,getAxesPermutation:()=>t9,getBroadcastDims:()=>Ab,getComplexWithIndex:()=>z_,getEinsumComputePath:()=>j_,getEinsumPermutation:()=>G_,getFusedBiasGradient:()=>nh,getFusedDyActivation:()=>ah,getImageCenter:()=>b_,getInnerMostAxes:()=>n9,getPermuted:()=>w_,getRaggedRank:()=>y_,getReductionAxes:()=>H0,getReshaped:()=>v_,getReshapedPermuted:()=>k_,getRowPartitionTypesHelper:()=>g_,getSliceBeginCoords:()=>I_,getSliceSize:()=>S_,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Y_,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Z_,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>J_,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>t$,getSparseReshapeInputOutputMismatchErrorMessage:()=>n$,getSparseReshapeInputOutputMultipleErrorMessage:()=>a$,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Q_,getSparseReshapeNegativeOutputDimErrorMessage:()=>e$,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>o$,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>r$,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>s$,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>i$,getUndoAxesPermutation:()=>a9,isIdentityPermutation:()=>q_,log:()=>dS,mergeRealAndImagArrays:()=>F_,prepareAndValidate:()=>h1,prepareSplitSize:()=>K_,segment_util:()=>I1,shouldFuse:()=>sh,slice_util:()=>wt,splitRealAndImagArrays:()=>P_,stridesOrDilationsArePositive:()=>Bs,tupleValuesAreOne:()=>rd,upcastType:()=>ea,validateDefaultValueShape:()=>x_,validateInput:()=>eh,validateUpdateShape:()=>km,warn:()=>Tr});function h_(e,t){let a=e[0].length;e.forEach((r,s)=>{O(r.length===a,()=>`Error in concat${a}D: rank of tensors[${s}] must be the same as the rank of the rest (${a})`)}),O(t>=0&&t<a,()=>`Error in concat${a}D: axis must be between 0 and ${a-1}.`);let n=e[0];e.forEach((r,s)=>{for(let i=0;i<a;i++)O(i===t||r[i]===n[i],()=>`Error in concat${a}D: Shape of tensors[${s}] (${r}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function f_(e,t){let a=e[0].slice();for(let n=1;n<e.length;n++)a[t]+=e[n][t];return a}var zn;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(zn||(zn={}));function m_(e,t,a){let n=new Array;if(a==null&&t==null)return n;if(t==null)for(;n.length<e+a.length;)n.push(-1);else n=t.slice();if(a==null)return n;if(e+a.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+a.length}, but shape.rank = ${n.length}`);for(let r=1;r<a.length;++r){let s=a[r],i=n[n.length-a.length+r],o=n[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${s} but shape[${r+e}] = ${o}`)}else n[i]=s}return n}function g_(e){let t={FIRST_DIM_SIZE:zn.FIRST_DIM_SIZE,VALUE_ROWIDS:zn.VALUE_ROWIDS,ROW_LENGTHS:zn.ROW_LENGTHS,ROW_SPLITS:zn.ROW_SPLITS,ROW_LIMITS:zn.ROW_LIMITS,ROW_STARTS:zn.ROW_STARTS},a=[];for(let n of e)if(n in t)a.push(t[n]);else break;return a}function y_(e){return e.length===0?0:e[0]===zn.FIRST_DIM_SIZE?e.length-1:e.length}function x_(e,t){if(e==null||t==null)return;let a=e.length,n=t.length;if(a>=n)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${a} must be less than ragged tensor input flatValues.rank = ${n})`);for(let r=0;r<Math.min(a,n-1);++r){let s=e[r],i=t[r+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${s} but ragged tensor input.flatValues.shape[${r-e.length}] = ${i}`)}}var Dm=30;function A_(e){return e<=Dm?e:pc(e,Math.floor(Math.sqrt(e)))}function b_(e,t,a){let n=a*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[n,r]}function v_(e,t,a,n=!0){let r=[];if(n)r=r.concat(t.slice(0)),r.push(e[0]/a),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(s+1))}return r}function w_(e,t,a=!0){let n=[];if(a){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{let r=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):r.push(i);n.push(...r),n.push(0),n.push(...s)}return n}function k_(e,t,a,n=!0){let r=[];n?r.push(e[0]/a):r.push(e[0]*a);for(let s=1;s<e.length;++s)s<=t.length?n?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function I_(e,t){let a=[0];for(let n=0;n<t;++n)a.push(e[n][0]);return a}function S_(e,t,a){let n=e.slice(0,1);for(let r=0;r<a;++r)n.push(e[r+1]-t[r][0]-t[r][1]);return n}var C_=1.7580993408473768,N_=1.0507009873554805,T_=.3275911,R_=.254829592,E_=-.284496736,__=1.421413741,$_=-1.453152027,M_=1.061405429;function F_(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let a=new Float32Array(e.length*2);for(let n=0;n<a.length;n+=2)a[n]=e[n/2],a[n+1]=t[n/2];return a}function P_(e){let t=new Float32Array(e.length/2),a=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],a[n/2]=e[n+1];return{real:t,imag:a}}function O_(e){let t=Math.ceil(e.length/4),a=new Float32Array(t),n=new Float32Array(t);for(let r=0;r<e.length;r+=4)a[Math.floor(r/4)]=e[r],n[Math.floor(r/4)]=e[r+1];return{real:a,imag:n}}function D_(e){let t=Math.floor(e.length/4),a=new Float32Array(t),n=new Float32Array(t);for(let r=2;r<e.length;r+=4)a[Math.floor(r/4)]=e[r],n[Math.floor(r/4)]=e[r+1];return{real:a,imag:n}}function z_(e,t){let a=e[t*2],n=e[t*2+1];return{real:a,imag:n}}function L_(e,t,a,n){e[n*2]=t,e[n*2+1]=a}function W_(e,t){let a=new Float32Array(e/2),n=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let s=(t?2:-2)*Math.PI*(r/e);a[r]=Math.cos(s),n[r]=Math.sin(s)}return{real:a,imag:n}}function B_(e,t,a){let n=(a?2:-2)*Math.PI*(e/t),r=Math.cos(n),s=Math.sin(n);return{real:r,imag:s}}var Oh="->",V_=/->/g,hg=",",fg="...";function U_(e,t){e=e.replace(/\s/g,"");let a=(e.length-e.replace(V_,"").length)/Oh.length;if(a<1)throw new Error("Equations without an arrow are not supported.");if(a>1)throw new Error(`Equation must contain exactly one arrow ("${Oh}").`);let[n,r]=e.split(Oh);O(n.indexOf(fg)===-1,()=>`The ellipsis notation ("${fg}") is not supported yet.`);let s=n.split(hg),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let c=0;c<r.length;++c){let h=r[c];if(!s.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);o.indexOf(h)===-1&&o.push(h)}for(let c=0;c<n.length;++c){let h=n[c];o.indexOf(h)===-1&&h!==hg&&o.push(h)}let u=new Array(s.length);for(let c=0;c<i;++c){if(new Set(s[c].split("")).size!==s[c].length)throw new Error(`Found duplicate axes in input component ${s[c]}. Support for duplicate axes in input is not implemented yet.`);u[c]=[];for(let h=0;h<s[c].length;++h)u[c].push(o.indexOf(s[c][h]))}let d=o.length,l=r.length,p=[];for(let c=l;c<d;++c)p.push(c);return{allDims:o,summedDims:p,idDims:u}}function G_(e,t){let a=new Array(e);a.fill(-1);for(let r=0;r<t.length;++r)a[t[r]]=r;let n=[];for(let r=0;r<e;++r)a[r]===-1&&n.push(r);return a=a.filter(r=>r!==-1),{permutationIndices:a,expandDims:n}}function H_(e,t,a){let n=new Array(e);for(let r=0;r<a.length;++r){let s=a[r].shape;for(let i=0;i<t[r].length;++i)n[t[r][i]]===void 0?n[t[r][i]]=s[i]:O(n[t[r][i]]===s[i],()=>`Expected dimension ${n[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function j_(e,t){let a=e,n=[],r=0;e.length===0&&a.push(-1),r=e.length+1;for(let i=0;i<r;++i)n.push([]);let s=[];for(let i=0;i<a.length;++i){let o=a[i],u=X_(t,o);for(let d of u)s.indexOf(d)===-1&&(n[i].push(d),s.push(d))}return{path:a,steps:n}}function q_(e){return e.every((t,a)=>t===a)}function X_(e,t){let a=[];for(let n=0;n<e.length;++n)(e[n].length===0||e[n].indexOf(t)!==-1||t===-1)&&a.push(n);return a}function K_(e,t,a=0){let n=[];if(typeof t=="number")O(e.shape[a]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(e.shape[a]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);O(r<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,u)=>u>0?o+u:o);t[s]=e.shape[a]-i}O(e.shape[a]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function Y_(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function Z_(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function J_(e,t,a){return`indices(${e}, 0) is invalid: ${t} >= ${a}`}function Q_(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function e$(e,t){return`size ${e} must be non-negative, not ${t}`}function t$(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function a$(e,t){let a=lt(e),n=lt(t);return`Input to reshape is a SparseTensor with ${a}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function n$(e,t){let a=lt(e),n=lt(t);return`Input to reshape is a tensor with ${a} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}function r$(){return"segment ids must be >= 0"}function s$(){return"segment ids are not increasing"}function i$(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function o$(e,t,a){return`Bad: indices[${e}] == ${t} out of range [0, ${a})`}var I1={};je(I1,{collectGatherOpShapeInfo:()=>d$,computeOutShape:()=>u$,segOpComputeOptimalWindowSize:()=>l$});function l$(e,t){let a=!1,n;for(e<=Dm?(n=e,a=!0):n=pc(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=pc(e,n+1);return n}function u$(e,t,a){let n=[],r=e.length;for(let s=0;s<r;s++)s!==t?n.push(e[s]):n.push(a);return n}function d$(e,t,a,n){let r=t.shape.length,s=e.shape.length;if(n!==0&&(n<-r||n>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${n}`);if(n<0&&(n+=r),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(a<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${a}).`);for(let p=0;p<n;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[a],o=[],u=1,d=1,l=1;for(let p=0;p<n;++p)o.push(e.shape[p]),u*=e.shape[p];for(let p=n;p<a;p++)o.push(e.shape[p]),d*=e.shape[p];for(let p=n;p<r;p++)o.push(t.shape[p]);for(let p=a+1;p<s;p++)o.push(e.shape[p]),l*=e.shape[p];return{batchSize:u,sliceSize:l,outerSize:d,dimSize:i,outputShape:o}}function p$(e){try{return e.map(t=>cc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function c$(e){return e.map(t=>Ud(t))}var yn={};je(yn,{nonMaxSuppressionV3Impl:()=>j3,nonMaxSuppressionV4Impl:()=>q3,nonMaxSuppressionV5Impl:()=>X3,whereImpl:()=>O3});SE();var h$=U();h$.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var Oa;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(Oa||(Oa={}));var mg;(function(e){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(mg||(mg={}));var zm={};function f$(e,t){let a={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};zm[e]=a}function S1(e){return zm[e]}function m$(e){delete zm[e]}function k(e,t,a,n,r){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,d=o<0?t.inputNames.length+o:o;if(s.type==="tensor")return Zt(t.inputNames[d],a,n,r);if(s.type==="tensors"){let c=t.inputs.slice(o,u);return t.inputNames.slice(o,u).filter((h,f)=>{var m;return((m=c[f])===null||m===void 0?void 0:m.op)!=="NoOp"}).map(h=>Zt(h,a,n,r))}let l=Zt(t.inputNames[d],a,n,r),p=l.dataSync();return s.type==="number"?p[0]:v.toNestedArray(l.shape,p)}let i=t.attrParams[e];return i&&i.value}function Zt(e,t,a,n){let[r,s]=Da(e,a);if(n!=null){let o=n.getHashTableHandleByName(r);if(o!=null)return o}let i=a.currentContextIds.find(o=>!!t[Ac(r,o)]);return i!==void 0?t[Ac(r,i)][s]:void 0}function gg(e,t,a){return t[Ac(e,a.currentContextId)]}function Jn(e,t){let[a,n,r]=Da(e,t);return[Ac(a,t&&t.currentContextId),n,r]}function Ac(e,t){return t?`${e}-${t}`:e}function Da(e,t){if(e==="")return["",0,void 0];let a=t!=null&&t.parseNodeNameCache!=null;if(a){let s=t.parseNodeNameCache.get(e);if(s!=null)return s}let n=e.split(":"),r;if(n.length===1)r=[e,0,void 0];else{let s=n[0],i=n.length===3?n[1]:void 0,o=Number(n[n.length-1]);r=[s,o,i]}return a&&t.parseNodeNameCache.set(e,r),r}function Kp(e,t,a){let n=k("pad",e,t,a);if(n==="explicit"){n=k("explicitPaddings",e,t,a);let r=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)r[s][0]=n[s*2],r[s][1]=n[s*2+1];return r}return n}function Qn(e){return e.kept?e:Ta(e)}var C1={};je(C1,{json:()=>g$});var g$=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],N1={};je(N1,{json:()=>y$});var y$=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],T1={};je(T1,{json:()=>x$});var x$=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],R1={};je(R1,{json:()=>A$});var A$=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],E1={};je(E1,{json:()=>b$});var b$=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],_1={};je(_1,{json:()=>v$});var v$=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$1={};je($1,{json:()=>w$});var w$=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],M1={};je(M1,{json:()=>k$});var k$=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],F1={};je(F1,{json:()=>I$});var I$=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],P1={};je(P1,{json:()=>S$});var S$=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],O1={};je(O1,{json:()=>C$});var C$=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],D1={};je(D1,{json:()=>N$});var N$=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],z1={};je(z1,{json:()=>T$});var T$=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],L1={};je(L1,{json:()=>R$});var R$=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],W1={};je(W1,{json:()=>E$});var E$=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],B1={};je(B1,{json:()=>_$});var _$=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],V1={};je(V1,{json:()=>$$});var $$=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],U1={};je(U1,{json:()=>M$});var M$=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],G1={};je(G1,{json:()=>F$});var F$=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],yg=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[C1,N1,T1,R1,E1,_1,$1,M1,F1,P1,O1,D1,z1,L1,W1,B1,V1,U1,G1],t=[].concat(...e.map(a=>a.json));this.opMappers=t.reduce((a,n)=>(a[n.tfOpName]=n,a),{})}transformGraph(e,t={}){let a=e.node,n=[],r=[],s=[],i=a.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?n.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&s.push(f[m.name]),f),{}),o=[],u=[],d={},l={};t!=null&&(d=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(f=>{let m=i[f];m.inputNames.forEach((g,y)=>{let[x,,A]=Jn(g),b=i[x];if(b.outputs!=null){let w=b.outputs.indexOf(A);if(w!==-1){let S=`${x}:${w}`;m.inputNames[y]=S}}m.inputs.push(b),b.children.push(m)})}),Object.keys(l).length===0?p.forEach(f=>{let m=i[f];m.children.length===0&&u.push(m)}):Object.keys(l).forEach(f=>{let[m]=Jn(f),g=i[m];g!=null&&(g.signatureKey=l[f],u.push(g))}),Object.keys(d).length>0?Object.keys(d).forEach(f=>{let[m]=Jn(f),g=i[m];g&&(g.signatureKey=d[f],o.push(g))}):o=n;let c={};e.library!=null&&e.library.function!=null&&(c=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:i,inputs:o,outputs:u,weights:r,placeholders:n,signature:t,functions:c};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,a)=>(t[e[a].name]=a,t),{})}mapNode(e){let t=S1(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let a={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(n=>n.startsWith("^")?n.slice(1):n),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(a.inputParams=t.inputs.reduce((n,r)=>(n[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},n),{})),t.attrs!=null&&(a.attrParams=t.attrs.reduce((n,r)=>{let s=r.type,i;switch(r.type){case"string":i=Lf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Lf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=jf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=jf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=Bf(e.attr,r.tfName,r.defaultValue||0),i===void 0&&r.tfDeprecatedName&&(i=Bf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=Hf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Hf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=Wf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Wf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=Xf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Xf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=Gf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Gf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=qf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=qf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=Vf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Vf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=Uf(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Uf(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=xg(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=xg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return n[r.name]={value:i,type:s},n},{})),a}mapFunction(e){let t=e.nodeDef,a=[],n=[],r={};t!=null&&(r=t.reduce((d,l)=>(d[l.name]=this.mapNode(l),l.op==="Const"&&n.push(d[l.name]),d),{}));let s=[],i=[];e.signature.inputArg.forEach(d=>{let[l]=Jn(d.name),p={name:l,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Lm(d.type),type:"dtype"}},children:[]};p.signatureKey=d.name,s.push(p),r[l]=p}),Object.keys(r).forEach(d=>{let l=r[d];l.inputNames.forEach((p,c)=>{let[h,,f]=Jn(p),m=r[h];if(m.outputs!=null){let g=m.outputs.indexOf(f);if(g!==-1){let y=`${h}:${g}`;l.inputNames[c]=y}}l.inputs.push(m),m.children.push(l)})});let o=e.ret;e.signature.outputArg.forEach(d=>{let[l,p]=Jn(o[d.name]),c=r[l];c!=null&&(c.defaultOutput=p,i.push(c))});let u=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:i,weights:n,placeholders:a,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a),t),{}),outputs:e.signature.outputArg.reduce((t,a)=>(t[a.name]=this.mapArgToTensorInfo(a,e.ret),t),{})}}mapArgToTensorInfo(e,t){let a=e.name;return t!=null&&(a=t[a]),{name:a,dtype:e.type}}};function P$(e){let t=U().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function H1(e,t){let a=Array.isArray(e)?String.fromCharCode.apply(null,e):P$(e);return t?a:a.toLowerCase()}function Lf(e,t,a,n=!1){let r=e[t];return r!=null?H1(r.s,n):a}function Wf(e,t,a){let n=e[t];return n?n.b:a}function Bf(e,t,a){let n=e[t]||{},r=n.i!=null?n.i:n.f!=null?n.f:a;return typeof r=="number"?r:parseInt(r,10)}function Lm(e){switch(typeof e=="string"&&(e=Oa[e]),e){case Oa.DT_FLOAT:case Oa.DT_HALF:return"float32";case Oa.DT_INT32:case Oa.DT_INT64:case Oa.DT_INT8:case Oa.DT_UINT8:return"int32";case Oa.DT_BOOL:return"bool";case Oa.DT_DOUBLE:return"float32";case Oa.DT_STRING:return"string";case Oa.DT_COMPLEX64:case Oa.DT_COMPLEX128:return"complex64";default:return null}}function xg(e,t,a){let n=e[t];return n&&n.func?n.func.name:a}function Vf(e,t,a){let n=e[t];return n&&n.type?Lm(n.type):a}function Uf(e,t,a){let n=e[t];return n&&n.list&&n.list.type?n.list.type.map(r=>Lm(r)):a}function j1(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Gf(e,t,a){let n=e[t];return n&&n.shape?j1(n.shape):a}function Hf(e,t,a){let n=e[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):a}function jf(e,t,a,n=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(s=>H1(s,n)):a}function qf(e,t,a){let n=e[t];return n&&n.list&&n.list.shape?n.list.shape.map(r=>j1(r)):a}function Xf(e,t,a){let n=e[t];return n&&n.list&&n.list.b?n.list.b:a}var O$=class{constructor(e,t,a){this.node=e,this.tensorMap=t,this.context=a,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(n=>this.getInput(n)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((n,r)=>(n[r]=this.getAttr(r),n),{}))}getInput(e){return Zt(e,this.tensorMap,this.context)}getAttr(e,t){let a=this.node.rawAttrs[e];if(a.tensor!=null)return Zt(e,this.tensorMap,this.context);if(a.i!=null||a.f!=null)return Bf(this.node.rawAttrs,e,t);if(a.s!=null)return Lf(this.node.rawAttrs,e,t);if(a.b!=null)return Wf(this.node.rawAttrs,e,t);if(a.shape!=null)return Gf(this.node.rawAttrs,e,t);if(a.type!=null)return Vf(this.node.rawAttrs,e,t);if(a.list!=null){if(a.list.i!=null||a.list.f!=null)return Hf(this.node.rawAttrs,e,t);if(a.list.s!=null)return jf(this.node.rawAttrs,e,t);if(a.list.shape!=null)return qf(this.node.rawAttrs,e,t);if(a.list.b!=null)return Xf(this.node.rawAttrs,e,t);if(a.list.type!=null)return Uf(this.node.rawAttrs,e,t)}return t}},jt={};je(jt,{OP_SCOPE_SUFFIX:()=>O0,abs:()=>za,acos:()=>PA,acosh:()=>OA,add:()=>Ie,addN:()=>W0,all:()=>DA,any:()=>zA,argMax:()=>su,argMin:()=>LA,asin:()=>WA,asinh:()=>BA,atan:()=>VA,atan2:()=>UA,atanh:()=>GA,avgPool:()=>V0,avgPool3d:()=>XA,basicLSTMCell:()=>KA,batchNorm:()=>Xd,batchNorm2d:()=>YA,batchNorm3d:()=>ZA,batchNorm4d:()=>JA,batchToSpaceND:()=>U0,bincount:()=>G0,bitwiseAnd:()=>QA,booleanMaskAsync:()=>D3,broadcastArgs:()=>eb,broadcastTo:()=>rl,buffer:()=>$e,cast:()=>qe,ceil:()=>tb,clipByValue:()=>ab,clone:()=>Ta,complex:()=>or,concat:()=>ft,concat1d:()=>nb,concat2d:()=>Gc,concat3d:()=>rb,concat4d:()=>sb,conv1d:()=>ib,conv2d:()=>Kd,conv2dTranspose:()=>lb,conv3d:()=>ub,conv3dTranspose:()=>db,cos:()=>pb,cosh:()=>cb,cosineWindow:()=>th,cumprod:()=>hb,cumsum:()=>fb,denseBincount:()=>mb,depthToSpace:()=>gb,depthwiseConv2d:()=>Hc,diag:()=>yb,dilation2d:()=>xb,div:()=>Te,divNoNan:()=>bb,dot:()=>vb,dropout:()=>V3,einsum:()=>vs,elu:()=>q0,enclosingPowerOfTwo:()=>Sm,ensureShape:()=>wb,equal:()=>j0,erf:()=>kb,euclideanNorm:()=>Cb,exp:()=>qr,expandDims:()=>ua,expm1:()=>Nb,eye:()=>K0,fft:()=>Zc,fill:()=>lr,floor:()=>Y0,floorDiv:()=>Uc,fused:()=>Cm,gather:()=>Z0,gatherND:()=>B3,greater:()=>Jd,greaterEqual:()=>J0,ifft:()=>ld,imag:()=>Qd,image:()=>Pe,inTopKAsync:()=>U3,irfft:()=>Am,isFinite:()=>Tb,isInf:()=>Rb,isNaN:()=>Eb,leakyRelu:()=>Q0,less:()=>mc,lessEqual:()=>jc,linalg:()=>Z3,linspace:()=>_b,localResponseNormalization:()=>$b,log:()=>cl,log1p:()=>em,logSigmoid:()=>Fb,logSoftmax:()=>Pb,logSumExp:()=>am,logicalAnd:()=>sd,logicalNot:()=>nm,logicalOr:()=>rm,logicalXor:()=>Ob,losses:()=>J3,lowerBound:()=>Db,matMul:()=>rt,max:()=>tn,maxPool:()=>sm,maxPool3d:()=>zb,maxPoolWithArgmax:()=>Lb,maximum:()=>im,mean:()=>id,meshgrid:()=>Wb,min:()=>Fs,minimum:()=>od,mirrorPad:()=>Bb,mod:()=>Kc,moments:()=>Vb,movingAverage:()=>z3,mul:()=>te,multiRNNCell:()=>Ub,multinomial:()=>Gb,neg:()=>Nn,norm:()=>Zd,notEqual:()=>om,oneHot:()=>gc,ones:()=>$r,onesLike:()=>Hb,op:()=>L,outerProduct:()=>jb,pad:()=>hr,pad1d:()=>qb,pad2d:()=>Xb,pad3d:()=>Kb,pad4d:()=>Yb,pool:()=>Zb,pow:()=>pl,prelu:()=>um,print:()=>L0,prod:()=>Jb,raggedGather:()=>Qb,raggedRange:()=>e3,raggedTensorToTensor:()=>t3,rand:()=>a3,randomGamma:()=>i3,randomNormal:()=>fm,randomStandardNormal:()=>o3,randomUniform:()=>Yc,randomUniformInt:()=>l3,range:()=>hl,real:()=>fl,reciprocal:()=>u3,relu:()=>ep,relu6:()=>mm,reshape:()=>Z,reverse:()=>Xr,reverse1d:()=>d3,reverse2d:()=>p3,reverse3d:()=>c3,reverse4d:()=>h3,rfft:()=>Jc,round:()=>gm,rsqrt:()=>f3,scalar:()=>Be,scatterND:()=>L3,searchSorted:()=>Xc,selu:()=>m3,separableConv2d:()=>g3,setdiff1dAsync:()=>y3,sigmoid:()=>Cn,sign:()=>x3,signal:()=>Y3,sin:()=>A3,sinh:()=>b3,slice:()=>We,slice1d:()=>v3,slice2d:()=>w3,slice3d:()=>yc,slice4d:()=>ym,softmax:()=>xm,softplus:()=>tm,spaceToBatchND:()=>lm,sparse:()=>Q3,sparseToDense:()=>W3,spectral:()=>K3,split:()=>Rn,sqrt:()=>Vn,square:()=>fn,squaredDifference:()=>bm,squeeze:()=>Ze,stack:()=>Ua,step:()=>vm,stridedSlice:()=>k3,string:()=>e1,sub:()=>ke,sum:()=>st,tan:()=>I3,tanh:()=>fc,tensor:()=>He,tensor1d:()=>Qt,tensor2d:()=>Or,tensor3d:()=>wm,tensor4d:()=>S3,tensor5d:()=>C3,tensor6d:()=>N3,tensorScatterUpdate:()=>R3,tile:()=>Ps,topk:()=>E3,transpose:()=>ml,truncatedNormal:()=>_3,unique:()=>$3,unsortedSegmentSum:()=>M3,unstack:()=>gn,upperBound:()=>F3,variable:()=>P3,where:()=>sr,whereAsync:()=>Im,zeros:()=>Tn,zerosLike:()=>Va});var D$=(e,t,a,n=jt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(k("a",e,t,a),k("b",e,t,a))];case"AddN":return[n.addN(k("tensors",e,t,a))];case"FloorMod":case"Mod":return[n.mod(k("a",e,t,a),k("b",e,t,a))];case"Mul":return[n.mul(k("a",e,t,a),k("b",e,t,a))];case"RealDiv":case"Div":return[n.div(k("a",e,t,a),k("b",e,t,a))];case"DivNoNan":return[n.divNoNan(k("a",e,t,a),k("b",e,t,a))];case"FloorDiv":return[n.floorDiv(k("a",e,t,a),k("b",e,t,a))];case"Sub":return[n.sub(k("a",e,t,a),k("b",e,t,a))];case"Minimum":return[n.minimum(k("a",e,t,a),k("b",e,t,a))];case"Maximum":return[n.maximum(k("a",e,t,a),k("b",e,t,a))];case"Pow":return[n.pow(k("a",e,t,a),k("b",e,t,a))];case"SquaredDifference":return[n.squaredDifference(k("a",e,t,a),k("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},z$=(e,t,a,n=jt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[n.abs(k("x",e,t,a))];case"Acos":return[n.acos(k("x",e,t,a))];case"Acosh":return[n.acosh(k("x",e,t,a))];case"Asin":return[n.asin(k("x",e,t,a))];case"Asinh":return[n.asinh(k("x",e,t,a))];case"Atan":return[n.atan(k("x",e,t,a))];case"Atan2":return[n.atan2(k("x",e,t,a),k("y",e,t,a))];case"Atanh":return[n.atanh(k("x",e,t,a))];case"Ceil":return[n.ceil(k("x",e,t,a))];case"Complex":return[n.complex(k("real",e,t,a),k("imag",e,t,a))];case"Cos":return[n.cos(k("x",e,t,a))];case"Cosh":return[n.cosh(k("x",e,t,a))];case"Elu":return[n.elu(k("x",e,t,a))];case"Erf":return[n.erf(k("x",e,t,a))];case"Exp":return[n.exp(k("x",e,t,a))];case"Expm1":return[n.expm1(k("x",e,t,a))];case"Floor":return[n.floor(k("x",e,t,a))];case"Log":return[n.log(k("x",e,t,a))];case"Log1p":return[n.log1p(k("x",e,t,a))];case"Imag":return[n.imag(k("x",e,t,a))];case"Neg":return[n.neg(k("x",e,t,a))];case"Reciprocal":return[n.reciprocal(k("x",e,t,a))];case"Real":return[n.real(k("x",e,t,a))];case"Relu":return[n.relu(k("x",e,t,a))];case"Round":return[n.round(k("x",e,t,a))];case"Selu":return[n.selu(k("x",e,t,a))];case"Sigmoid":return[n.sigmoid(k("x",e,t,a))];case"Sin":return[n.sin(k("x",e,t,a))];case"Sign":return[n.sign(k("x",e,t,a))];case"Sinh":return[n.sinh(k("x",e,t,a))];case"Softplus":return[n.softplus(k("x",e,t,a))];case"Sqrt":return[n.sqrt(k("x",e,t,a))];case"Square":return[n.square(k("x",e,t,a))];case"Tanh":return[n.tanh(k("x",e,t,a))];case"Tan":return[n.tan(k("x",e,t,a))];case"ClipByValue":return[n.clipByValue(k("x",e,t,a),k("clipValueMin",e,t,a),k("clipValueMax",e,t,a))];case"Relu6":return[n.relu6(k("x",e,t,a))];case"Rsqrt":return[n.rsqrt(Zt(e.inputNames[0],t,a))];case"LeakyRelu":return[n.leakyRelu(k("x",e,t,a),k("alpha",e,t,a))];case"Prelu":return[n.prelu(k("x",e,t,a),k("alpha",e,t,a))];case"IsNan":return[n.isNaN(Zt(e.inputNames[0],t,a))];case"IsInf":return[n.isInf(Zt(e.inputNames[0],t,a))];case"IsFinite":return[n.isFinite(Zt(e.inputNames[0],t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function un(e,t,a=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>a+` Shapes ${e} and ${t} must match`);for(let n=0;n<e.length;n++){let r=e[n],s=t[n];v.assert(r<0||s<0||r===s,()=>a+` Shapes ${e} and ${t} must match`)}}}function Ag(e){return!(typeof e=="number"||e.some(t=>t<0))}function Cu(e,t,a){let n=Kf(e,a),r=!Ag(n);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(r&&t.forEach(s=>{n=Kf(s.shape,n)}),!Ag(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Kf(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let a=[];for(let n=0;n<e.length;++n){let r=e[n],s=t[n];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);a[n]=r>=0?r:s}return a}var L$=class{constructor(e,t,a,n,r,s,i){this.name=e,this.dtype=t,this.maxSize=a,this.elementShape=n,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Be(0),In(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let a=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),un(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),a.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(a.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);a.tensor=t,In(t),a.written=!0,this.tensors[e]=a}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((a,n)=>this.write(a,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let n=0;n<this.size();n++)e.push(n)}if(e.length===0)return He([],[0].concat(this.elementShape));let a=this.readMany(e);return un(this.elementShape,a[0].shape,"TensorArray shape mismatch: "),Ua(a,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return He([],[0].concat(this.elementShape));let t=[];for(let n=0;n<this.size();n++)t.push(n);let a=this.readMany(t);return un(this.elementShape,a[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${a[0].shape})`),ft(a,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let a=Math.max(...e);if(!this.dynamicSize&&a>=this.maxSize)throw new Error(`Max index must be < array size (${a}  vs. ${this.maxSize})`);this.writeMany(e,gn(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let a=0,n=e.map(o=>(a+=o,a));if(a!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${a}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=a===0?0:t.size/a,s=[];Ue(()=>{t=Z(t,[1,a,r]);for(let o=0;o<e.length;++o){let u=[0,o===0?0:n[o-1],0],d=[1,e[o],r];s[o]=Z(We(t,u,d),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},oh=class Yf{get id(){return this.idTensor.id}constructor(t,a,n,r=-1){this.tensors=t,this.elementShape=a,this.elementDtype=n,t!=null&&t.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);un(a,s.shape,"TensorList shape mismatch: "),In(s)}),this.idTensor=Be(0),this.maxNumElements=r,In(this.idTensor)}copy(){return new Yf([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(a=>{(t==null||!t.has(a.id))&&a.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,a,n=-1){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);un(t,this.elementShape,"TensorList shape mismatch: ");let r=Cu(this.elementShape,this.tensors,t);return Ue(()=>{let s=this.tensors.map(i=>Z(i,r));return Ua(s,0)})}popBack(t,a){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Cu(this.elementShape,this.tensors,t),r=this.tensors.pop();return r.kept=!1,un(r.shape,t,"TensorList shape mismatch: "),Z(r,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(un(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");In(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let a=new Yf([],this.elementShape,this.elementDtype,this.maxNumElements);a.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)a.tensors[n]=this.tensors[n];return a}getItem(t,a,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);un(this.tensors[t].shape,a,"TensorList shape mismatch: ");let r=Cu(this.elementShape,this.tensors,a);return Z(this.tensors[t],r)}setItem(t,a){if(a.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);un(this.elementShape,a.shape,"TensorList shape mismatch: "),In(a),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=a}gather(t,a,n){if(a!==this.elementDtype)throw new Error(`Invalid data types; op elements ${a}, but list elements ${this.elementDtype}`);un(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let r=Cu(this.elementShape,this.tensors,n);return t.length===0?He([],[0].concat(r)):Ue(()=>{let s=t.map(i=>Z(this.tensors[i],r));return Ua(s,0)})}concat(t,a){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);un(this.elementShape,a,"TensorList shape mismatch: ");let n=Cu(this.elementShape,this.tensors,a);return this.size()===0?He([],[0].concat(n)):Ue(()=>{let r=this.tensors.map(s=>Z(s,n));return ft(r,0)})}};function W$(e,t,a){let n=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==a)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${a}`);let r=e.shape.slice(1);un(r,t,"TensorList shape mismatch: ");let s=gn(e);return new oh(s,t,n)}function B$(e,t,a,n){return new oh([],e,t,n)}function V$(e,t,a,n){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(n!=null&&n!==-1&&r>=n)throw new Error(`Max index must be < array size (${r}  vs. ${n})`);let s=new oh([],a,e.dtype,n),i=gn(e,0);return t.forEach((o,u)=>{s.setItem(o,i[u])}),s}function U$(e,t,a){let n=0,r=t.map(l=>(n+=l,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Kf(s,a),o=n===0?0:e.size/n,u=Ue(()=>{let l=[];e=Z(e,[1,n,o]);for(let p=0;p<t.length;++p){let c=[0,p===0?0:r[p-1],0],h=[1,t[p],o];l[p]=Z(We(e,c,h),i)}return e.dispose(),l}),d=new oh([],a,e.dtype,t.length);for(let l=0;l<u.length;l++)d.setItem(l,u[l]);return d}var G$=async(e,t,a)=>{switch(e.op){case"If":case"StatelessIf":{let n=k("thenBranch",e,t,a),r=k("elseBranch",e,t,a),s=k("cond",e,t,a),i=k("args",e,t,a);return(await s.data())[0]?a.functionMap[n].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap):a.functionMap[r].executeFunctionAsync(i,a.tensorArrayMap,a.tensorListMap)}case"While":case"StatelessWhile":{let n=k("body",e,t,a),r=k("cond",e,t,a),s=k("args",e,t,a),i=await a.functionMap[r].executeFunctionAsync(s,a.tensorArrayMap,a.tensorListMap),o=s.map(l=>l.id),u=await i[0].data();i.forEach(l=>{!l.kept&&o.indexOf(l.id)===-1&&l.dispose()});let d=s;for(;u[0];){let l=d;d=await a.functionMap[n].executeFunctionAsync(d,a.tensorArrayMap,a.tensorListMap);let p=d.map(h=>h.id);l.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let c=await a.functionMap[r].executeFunctionAsync(d,a.tensorArrayMap,a.tensorListMap);u=await c[0].data(),c.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return d}case"LoopCond":{let n=k("pred",e,t,a);return[Qn(n)]}case"Switch":{let n=k("pred",e,t,a),r=k("data",e,t,a);return r.kept||(r=Qn(r)),(await n.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let n=e.inputNames.find(r=>Zt(r,t,a)!==void 0);if(n){let r=Zt(n,t,a);return[Qn(r)]}return}case"Enter":{let n=k("frameName",e,t,a),r=k("tensor",e,t,a);return a.enterFrame(n),[Qn(r)]}case"Exit":{let n=k("tensor",e,t,a);return a.exitFrame(),[Qn(n)]}case"NextIteration":{let n=k("tensor",e,t,a);return a.nextIteration(),[Qn(n)]}case"TensorArrayV3":{let n=k("size",e,t,a),r=k("dtype",e,t,a),s=k("elementShape",e,t,a),i=k("dynamicSize",e,t,a),o=k("clearAfterRead",e,t,a),u=k("identicalElementShapes",e,t,a),d=k("name",e,t,a),l=new L$(d,r,n,s,u,i,o);return a.addTensorArray(l),[l.idTensor,Be(1)]}case"TensorArrayWriteV3":{let n=k("tensorArrayId",e,t,a),r=k("index",e,t,a),s=k("tensor",e,t,a),i=a.getTensorArray(n.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{let n=k("tensorArrayId",e,t,a),r=k("index",e,t,a);return[a.getTensorArray(n.id).read(r)]}case"TensorArrayGatherV3":{let n=k("tensorArrayId",e,t,a),r=k("indices",e,t,a),s=k("dtype",e,t,a);return[a.getTensorArray(n.id).gather(r,s)]}case"TensorArrayScatterV3":{let n=k("tensorArrayId",e,t,a),r=k("indices",e,t,a),s=k("tensor",e,t,a),i=a.getTensorArray(n.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=k("tensorArrayId",e,t,a),r=a.getTensorArray(n.id),s=k("dtype",e,t,a);return[r.concat(s)]}case"TensorArraySplitV3":{let n=k("tensorArrayId",e,t,a),r=k("tensor",e,t,a),s=k("lengths",e,t,a),i=a.getTensorArray(n.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{let n=k("tensorArrayId",e,t,a),r=a.getTensorArray(n.id);return[Be(r.size(),"int32")]}case"TensorArrayCloseV3":{let n=k("tensorArrayId",e,t,a),r=a.getTensorArray(n.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let n=k("tensorListId",e,t,a),r=k("index",e,t,a),s=k("tensor",e,t,a),i=a.getTensorList(n.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{let n=k("tensorListId",e,t,a),r=k("index",e,t,a),s=k("elementShape",e,t,a),i=k("elementDType",e,t,a);return[a.getTensorList(n.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=k("indices",e,t,a),r=k("tensor",e,t,a),s=k("elementShape",e,t,a),i=k("numElements",e,t,a),o=V$(r,n,s,i);return a.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=k("elementShape",e,t,a),r=k("elementDType",e,t,a),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,a),o=e.op==="TensorListReserve"?-1:i,u=B$(n,r,i,o);return a.addTensorList(u),[u.idTensor]}case"TensorListGather":{let n=k("tensorListId",e,t,a),r=k("indices",e,t,a),s=k("elementShape",e,t,a),i=k("elementDType",e,t,a);return[a.getTensorList(n.id).gather(r,i,s)]}case"TensorListStack":{let n=k("tensorListId",e,t,a),r=k("elementShape",e,t,a),s=k("elementDType",e,t,a),i=k("numElements",e,t,a);return[a.getTensorList(n.id).stack(r,s,i)]}case"TensorListFromTensor":{let n=k("tensor",e,t,a),r=k("elementShape",e,t,a),s=k("elementDType",e,t,a),i=W$(n,r,s);return a.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=k("tensorListId",e,t,a),r=a.getTensorList(n.id),s=k("dtype",e,t,a),i=k("elementShape",e,t,a);return[r.concat(s,i)]}case"TensorListPushBack":{let n=k("tensorListId",e,t,a),r=k("tensor",e,t,a),s=a.getTensorList(n.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{let n=k("tensorListId",e,t,a),r=k("elementShape",e,t,a),s=k("elementDType",e,t,a);return[a.getTensorList(n.id).popBack(r,s)]}case"TensorListSplit":{let n=k("tensor",e,t,a),r=k("elementShape",e,t,a),s=k("lengths",e,t,a),i=U$(n,s,r);return a.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=k("tensorListId",e,t,a),r=a.getTensorList(n.id);return[Be(r.size(),"int32")]}case"TensorListResize":{let n=k("tensorListId",e,t,a),r=k("size",e,t,a),s=a.getTensorList(n.id).resize(r);return a.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function bg(e,t,a){let[n,r]=k("fusedOps",e,t,a),s=n==="biasadd",i=!s,o=r==="prelu",u=n==="fusedbatchnorm",d=k("numArgs",e,t,a);if(s){if(o&&d!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&d!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=k("strides",e,t,a),p=Kp(e,t,a),c=k("dataFormat",e,t,a).toUpperCase(),h=k("dilations",e,t,a),[f,m]=k("args",e,t,a);i&&(m=f,f=void 0);let g=k("leakyreluAlpha",e,t,a);return{stride:l,pad:p,dataFormat:c,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var H$=(e,t,a,n=jt)=>{switch(e.op){case"Conv1D":{let r=k("stride",e,t,a),s=k("pad",e,t,a),i=k("dataFormat",e,t,a).toUpperCase(),o=k("dilation",e,t,a);return[n.conv1d(k("x",e,t,a),k("filter",e,t,a),r,s,i,o)]}case"Conv2D":{let r=k("strides",e,t,a),s=Kp(e,t,a),i=k("dataFormat",e,t,a).toUpperCase(),o=k("dilations",e,t,a);return[n.conv2d(k("x",e,t,a),k("filter",e,t,a),[r[1],r[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:u,preluArg:d,activationFunc:l,leakyreluAlpha:p}=bg(e,t,a);return[n.fused.conv2d({x:k("x",e,t,a),filter:k("filter",e,t,a),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:d,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:u,preluArg:d,activationFunc:l,leakyreluAlpha:p}=bg(e,t,a);return[n.fused.depthwiseConv2d({x:k("x",e,t,a),filter:k("filter",e,t,a),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:d,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=k("outputShape",e,t,a),s=k("strides",e,t,a),i=Kp(e,t,a);return[n.conv2dTranspose(k("x",e,t,a),k("filter",e,t,a),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=k("strides",e,t,a),s=Kp(e,t,a),i=k("dilations",e,t,a),o=k("dataFormat",e,t,a).toUpperCase();return[n.depthwiseConv2d(k("input",e,t,a),k("filter",e,t,a),[r[1],r[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("dataFormat",e,t,a).toUpperCase(),o=k("dilations",e,t,a);return[n.conv3d(k("x",e,t,a),k("filter",e,t,a),[r[1],r[2],r[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.avgPool(k("x",e,t,a),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.maxPool(k("x",e,t,a),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a),o=k("includeBatchInIndex",e,t,a),{result:u,indexes:d}=n.maxPoolWithArgmax(k("x",e,t,a),[i[1],i[2]],[r[1],r[2]],s,o);return[u,d]}case"AvgPool3D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.avgPool3d(k("x",e,t,a),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("kernelSize",e,t,a);return[n.maxPool3d(k("x",e,t,a),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{let r=k("strides",e,t,a),s=k("pad",e,t,a),i=k("dilations",e,t,a),o=r[1],u=r[2],d=i[1],l=i[2];return[n.dilation2d(k("x",e,t,a),k("filter",e,t,a),[o,u],s,[d,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},j$=(e,t,a,n=jt)=>{switch(e.op){case"Fill":{let r=k("shape",e,t,a),s=k("dtype",e,t,a),i=k("value",e,t,a);return[n.fill(r,i,s)]}case"LinSpace":{let r=k("start",e,t,a),s=k("stop",e,t,a),i=k("num",e,t,a);return[n.linspace(r,s,i)]}case"Multinomial":{let r=k("logits",e,t,a),s=k("numSamples",e,t,a),i=k("seed",e,t,a);return[n.multinomial(r,s,i)]}case"OneHot":{let r=k("indices",e,t,a),s=k("depth",e,t,a),i=k("onValue",e,t,a),o=k("offValue",e,t,a),u=k("dtype",e,t,a);return[n.oneHot(r,s,i,o,u)]}case"Ones":return[n.ones(k("shape",e,t,a),k("dtype",e,t,a))];case"OnesLike":return[n.onesLike(k("x",e,t,a))];case"RandomStandardNormal":return[n.randomStandardNormal(k("shape",e,t,a),k("dtype",e,t,a),k("seed",e,t,a))];case"RandomUniform":return[n.randomUniform(k("shape",e,t,a),k("minval",e,t,a),k("maxval",e,t,a),k("dtype",e,t,a))];case"RandomUniformInt":return[n.randomUniformInt(k("shape",e,t,a),k("minval",e,t,a),k("maxval",e,t,a),k("seed",e,t,a))];case"Range":{let r=k("start",e,t,a),s=k("stop",e,t,a),i=k("step",e,t,a);return[n.range(r,s,i,k("dtype",e,t,a))]}case"TruncatedNormal":{let r=k("shape",e,t,a),s=k("mean",e,t,a),i=k("stdDev",e,t,a),o=k("seed",e,t,a);return[n.truncatedNormal(r,s,i,k("dtype",e,t,a),o)]}case"Zeros":return[n.zeros(k("shape",e,t,a),k("dtype",e,t,a))];case"ZerosLike":return[n.zerosLike(k("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Dh(e,t,a){let n=k("boxes",e,t,a),r=k("scores",e,t,a),s=k("maxOutputSize",e,t,a),i=k("iouThreshold",e,t,a),o=k("scoreThreshold",e,t,a),u=k("softNmsSigma",e,t,a);return{boxes:n,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}var q$=async(e,t,a,n,r=jt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:d,softNmsSigma:l}=Dh(e,t,a),p=await r.image.nonMaxSuppressionWithScoreAsync(s,i,o,u,d,l);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:d}=Dh(e,t,a),l=k("padToMaxOutputSize",e,t,a),p=await r.image.nonMaxSuppressionPaddedAsync(s,i,o,u,d,l);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:d}=Dh(e,t,a);return[await r.image.nonMaxSuppressionAsync(s,i,o,u,d)]}case"Where":{let s=r.cast(k("condition",e,t,a),"bool"),i=[await r.whereAsync(s)];return s.dispose(),i}case"ListDiff":return r.setdiff1dAsync(k("x",e,t,a),k("y",e,t,a));default:throw TypeError(`Node type ${e.op} is not implemented`)}},X$=(e,t,a,n=jt)=>{switch(e.op){case"LowerBound":{let r=k("sortedSequence",e,t,a),s=k("values",e,t,a);return[n.lowerBound(r,s)]}case"TopKV2":{let r=k("x",e,t,a),s=k("k",e,t,a),i=k("sorted",e,t,a),o=n.topk(r,s,i);return[o.values,o.indices]}case"UpperBound":{let r=k("sortedSequence",e,t,a),s=k("values",e,t,a);return[n.upperBound(r,s)]}case"Unique":{let r=k("x",e,t,a),s=n.unique(r);return[s.values,s.indices]}case"UniqueV2":{let r=k("x",e,t,a),s=k("axis",e,t,a),i=n.unique(r,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},K$=(e,t,a,n=jt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=k("default",e,t,a);return[Zt(e.name,t,a)||r];case"Placeholder":return[Zt(e.name,t,a)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=k("x",e,t,a);return[Qn(l)]}case"IdentityN":return k("x",e,t,a).map(l=>Qn(l));case"Snapshot":let s=k("x",e,t,a);return[Qn(s)];case"Shape":return[n.tensor1d(k("x",e,t,a).shape,"int32")];case"ShapeN":return k("x",e,t,a).map(l=>n.tensor1d(l.shape));case"Size":return[n.scalar(k("x",e,t,a).size,"int32")];case"Rank":return[n.scalar(k("x",e,t,a).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=k("x",e,t,a),o=k("data",e,t,a),u=k("message",e,t,a),d=k("summarize",e,t,a);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<o.length;l++)console.log(Array.prototype.slice.call(o[l].dataSync()).slice(0,d));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Y$=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Be(0),this.tensorMap=new Map,In(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Be(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return this.tensorMap.forEach(n=>n.dispose()),this.tensorMap.clear(),Ue(()=>{let n=gn(t),r=a.length,s=n.length;v.assert(r===s,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`);for(let i=0;i<r;i++){let o=a[i],u=n[i];In(u),this.tensorMap.set(o,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let a=await e.data();return Ue(()=>{let n=[];for(let r=0;r<a.length;r++){let s=a[r],i=this.findWithDefault(s,t);n.push(i)}return Ua(n)})}findWithDefault(e,t){let a=this.tensorMap.get(e);return a??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},Z$=async(e,t,a,n)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=n.getHashTableHandleByName(e.name);if(r!=null)return[r];{let s=k("keyDType",e,t,a),i=k("valueDType",e,t,a),o=new Y$(s,i);return n.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let r=k("tableHandle",e,t,a,n),s=k("keys",e,t,a),i=k("values",e,t,a);return[await n.getHashTableById(r.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=k("tableHandle",e,t,a,n),s=k("keys",e,t,a),i=k("defaultValue",e,t,a);return[await n.getHashTableById(r.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=k("tableHandle",e,t,a,n);return[n.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},J$=(e,t,a,n=jt)=>{switch(e.op){case"ResizeBilinear":{let r=k("images",e,t,a),s=k("size",e,t,a),i=k("alignCorners",e,t,a),o=k("halfPixelCenters",e,t,a);return[n.image.resizeBilinear(r,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let r=k("images",e,t,a),s=k("size",e,t,a),i=k("alignCorners",e,t,a),o=k("halfPixelCenters",e,t,a);return[n.image.resizeNearestNeighbor(r,[s[0],s[1]],i,o)]}case"CropAndResize":{let r=k("image",e,t,a),s=k("boxes",e,t,a),i=k("boxInd",e,t,a),o=k("cropSize",e,t,a),u=k("method",e,t,a),d=k("extrapolationValue",e,t,a);return[n.image.cropAndResize(r,s,i,o,u,d)]}case"ImageProjectiveTransformV3":{let r=k("images",e,t,a),s=k("transforms",e,t,a),i=k("outputShape",e,t,a),o=k("fillValue",e,t,a),u=k("interpolation",e,t,a),d=k("fillMode",e,t,a);return[n.image.transform(r,s,u.toLowerCase(),d.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},Q$=(e,t,a,n=jt)=>{switch(e.op){case"Equal":return[n.equal(k("a",e,t,a),k("b",e,t,a))];case"NotEqual":return[n.notEqual(k("a",e,t,a),k("b",e,t,a))];case"Greater":return[n.greater(k("a",e,t,a),k("b",e,t,a))];case"GreaterEqual":return[n.greaterEqual(k("a",e,t,a),k("b",e,t,a))];case"Less":return[n.less(k("a",e,t,a),k("b",e,t,a))];case"LessEqual":return[n.lessEqual(k("a",e,t,a),k("b",e,t,a))];case"LogicalAnd":return[n.logicalAnd(k("a",e,t,a),k("b",e,t,a))];case"LogicalNot":return[n.logicalNot(k("a",e,t,a))];case"LogicalOr":return[n.logicalOr(k("a",e,t,a),k("b",e,t,a))];case"Select":case"SelectV2":return[n.where(k("condition",e,t,a),k("a",e,t,a),k("b",e,t,a))];case"BitwiseAnd":return[n.bitwiseAnd(k("a",e,t,a),k("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eM=(e,t,a,n=jt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(k("a",e,t,a),k("b",e,t,a),k("transposeA",e,t,a),k("transposeB",e,t,a))];case"Einsum":return[n.einsum(k("equation",e,t,a),...k("tensors",e,t,a))];case"Transpose":return[n.transpose(k("x",e,t,a),k("perm",e,t,a))];case"_FusedMatMul":let[r,s]=k("fusedOps",e,t,a),i=r==="biasadd",o=s==="prelu",u=k("numArgs",e,t,a),d=k("leakyreluAlpha",e,t,a);if(i){if(o&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,p]=k("args",e,t,a);return[n.fused.matMul({a:k("a",e,t,a),b:k("b",e,t,a),transposeA:k("transposeA",e,t,a),transposeB:k("transposeB",e,t,a),bias:l,activation:s,preluActivationWeights:p,leakyreluAlpha:d})];case"MatrixBandPart":return[n.linalg.bandPart(k("a",e,t,a),k("numLower",e,t,a),k("numUpper",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},tM=(e,t,a,n=jt)=>{switch(e.op){case"EuclideanNorm":return[n.euclideanNorm(k("x",e,t,a),k("axis",e,t,a),k("keepDims",e,t,a))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(k("x",e,t,a),k("mean",e,t,a),k("variance",e,t,a),k("offset",e,t,a),k("scale",e,t,a),k("epsilon",e,t,a))];case"FusedBatchNormV3":return[n.batchNorm(k("x",e,t,a),k("mean",e,t,a),k("variance",e,t,a),k("offset",e,t,a),k("scale",e,t,a),k("epsilon",e,t,a))];case"LRN":return[n.localResponseNormalization(k("x",e,t,a),k("radius",e,t,a),k("bias",e,t,a),k("alpha",e,t,a),k("beta",e,t,a))];case"Softmax":return[n.softmax(k("x",e,t,a))];case"LogSoftmax":return[n.logSoftmax(k("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aM=(e,t,a,n=jt)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:r,outputDenseValues:s}=n.raggedGather(k("paramsNestedSplits",e,t,a),k("paramsDenseValues",e,t,a),k("indices",e,t,a),k("outputRaggedRank",e,t,a));return r.concat(s)}case"RaggedRange":{let{rtNestedSplits:r,rtDenseValues:s}=n.raggedRange(k("starts",e,t,a),k("limits",e,t,a),k("splits",e,t,a));return[r,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(k("shape",e,t,a),k("values",e,t,a),k("defaultValue",e,t,a),k("rowPartitionTensors",e,t,a),k("rowPartitionTypes",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nM=(e,t,a,n=jt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,a),u=k("keepDims",e,t,a);return[n.max(k("x",e,t,a),o,u)]}case"Mean":{let o=k("axis",e,t,a),u=k("keepDims",e,t,a);return[n.mean(k("x",e,t,a),o,u)]}case"Min":{let o=k("axis",e,t,a),u=k("keepDims",e,t,a);return[n.min(k("x",e,t,a),o,u)]}case"Sum":{let o=k("axis",e,t,a),u=k("keepDims",e,t,a);return[n.sum(k("x",e,t,a),o,u)]}case"All":{let o=k("axis",e,t,a),u=k("keepDims",e,t,a);return[n.all(k("x",e,t,a),o,u)]}case"Any":{let o=k("axis",e,t,a),u=k("keepDims",e,t,a);return[n.any(k("x",e,t,a),o,u)]}case"ArgMax":{let o=k("axis",e,t,a);return[n.argMax(k("x",e,t,a),o)]}case"ArgMin":{let o=k("axis",e,t,a);return[n.argMin(k("x",e,t,a),o)]}case"Prod":{let o=k("axis",e,t,a),u=k("keepDims",e,t,a);return[n.prod(k("x",e,t,a),o,u)]}case"Cumprod":{let o=k("axis",e,t,a),u=k("exclusive",e,t,a),d=k("reverse",e,t,a);return[n.cumprod(k("x",e,t,a),o,u,d)]}case"Cumsum":{let o=k("axis",e,t,a),u=k("exclusive",e,t,a),d=k("reverse",e,t,a);return[n.cumsum(k("x",e,t,a),o,u,d)]}case"Bincount":let r=k("x",e,t,a),s=k("weights",e,t,a),i=k("size",e,t,a);return[n.bincount(r,s,i)];case"DenseBincount":{let o=k("x",e,t,a),u=k("weights",e,t,a),d=k("size",e,t,a),l=k("binaryOutput",e,t,a);return[n.denseBincount(o,u,d,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},rM=(e,t,a,n=jt)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=k("n",e,t,a),s=k("axis",e,t,a),i=k("tensors",e,t,a);return i=i.slice(0,r),[n.concat(i,s)]}case"Gather":{let r=k("x",e,t,a),s=k("indices",e,t,a);return[n.gather(r,n.cast(s,"int32"),0)]}case"GatherV2":{let r=k("axis",e,t,a),s=k("batchDims",e,t,a),i=k("x",e,t,a),o=k("indices",e,t,a);return[n.gather(i,n.cast(o,"int32"),r,s)]}case"Reverse":{let r=k("dims",e,t,a),s=[];for(let o=0;o<r.length;o++)r[o]&&s.push(o);let i=k("x",e,t,a);return[n.reverse(i,s)]}case"ReverseV2":{let r=k("axis",e,t,a),s=k("x",e,t,a);return[n.reverse(s,r)]}case"Slice":{let r=k("begin",e,t,a),s=k("size",e,t,a);return[n.slice(k("x",e,t,a),r,s)]}case"StridedSlice":{let r=k("begin",e,t,a),s=k("end",e,t,a),i=k("strides",e,t,a),o=k("beginMask",e,t,a),u=k("endMask",e,t,a),d=k("ellipsisMask",e,t,a),l=k("newAxisMask",e,t,a),p=k("shrinkAxisMask",e,t,a),c=k("x",e,t,a);return[n.stridedSlice(c,r,s,i,o,u,d,l,p)]}case"Pack":return Ue(()=>{let r=k("axis",e,t,a),s=k("tensors",e,t,a),i=s[0].shape,o=n.squeeze(s[0]).shape,u=s.map(d=>{let l=v.arraysEqual(d.shape,i);if(!l&&!v.arraysEqual(n.squeeze(d).shape,o))throw new Error("the input tensors shape does not match");return l?d:n.reshape(d,i)});return[n.stack(u,r)]});case"Unpack":{let r=k("axis",e,t,a),s=k("tensor",e,t,a);return n.unstack(s,r)}case"Tile":{let r=k("reps",e,t,a);return[n.tile(k("x",e,t,a),r)]}case"Split":case"SplitV":{let r=k("axis",e,t,a),s=k("numOrSizeSplits",e,t,a),i=k("x",e,t,a);return n.split(i,s,r)}case"ScatterNd":{let r=k("indices",e,t,a),s=k("values",e,t,a),i=k("shape",e,t,a);return[n.scatterND(r,s,i)]}case"GatherNd":{let r=k("x",e,t,a),s=k("indices",e,t,a);return[n.gatherND(r,s)]}case"SparseToDense":{let r=k("sparseIndices",e,t,a),s=k("outputShape",e,t,a),i=k("sparseValues",e,t,a),o=k("defaultValue",e,t,a);return[n.sparseToDense(r,i,s,i.dtype===o.dtype?o:n.cast(o,i.dtype))]}case"TensorScatterUpdate":{let r=k("indices",e,t,a),s=k("values",e,t,a),i=k("tensor",e,t,a);return[n.tensorScatterUpdate(i,r,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},sM=(e,t,a,n=jt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=n.sparse.sparseFillEmptyRows(k("indices",e,t,a),k("values",e,t,a),k("denseShape",e,t,a),k("defaultValue",e,t,a));return[r,s,i,o]}case"SparseReshape":{let{outputIndices:r,outputShape:s}=n.sparse.sparseReshape(k("inputIndices",e,t,a),k("inputShape",e,t,a),k("newShape",e,t,a));return[r,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(k("data",e,t,a),k("indices",e,t,a),k("segmentIds",e,t,a))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(k("data",e,t,a),k("indices",e,t,a),k("segmentIds",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},iM=(e,t,a,n=jt)=>{switch(e.op){case"FFT":return[n.fft(k("x",e,t,a))];case"IFFT":return[n.ifft(k("x",e,t,a))];case"RFFT":return[n.rfft(k("x",e,t,a))];case"IRFFT":return[n.irfft(k("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},oM=(e,t,a,n=jt)=>{switch(e.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(k("input",e,t,a),k("pattern",e,t,a),k("rewrite",e,t,a),k("replaceGlobal",e,t,a))];case"StringNGrams":{let{nGrams:r,nGramsSplits:s}=n.string.stringNGrams(k("data",e,t,a),k("dataSplits",e,t,a),k("separator",e,t,a),k("nGramWidths",e,t,a),k("leftPad",e,t,a),k("rightPad",e,t,a),k("padWidth",e,t,a),k("preserveShortSequences",e,t,a));return[r,s]}case"StringSplit":{let{indices:r,values:s,shape:i}=n.string.stringSplit(k("input",e,t,a),k("delimiter",e,t,a),k("skipEmpty",e,t,a));return[r,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(k("input",e,t,a),k("numBuckets",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},lM=(e,t,a,n=jt)=>{switch(e.op){case"Cast":return[n.cast(k("x",e,t,a),k("dtype",e,t,a))];case"ExpandDims":{let r=k("axis",e,t,a);return[n.expandDims(k("x",e,t,a),r)]}case"Squeeze":{let r=k("axis",e,t,a);return[n.squeeze(k("x",e,t,a),r)]}case"Reshape":return[n.reshape(k("x",e,t,a),k("shape",e,t,a))];case"EnsureShape":return[n.ensureShape(k("x",e,t,a),k("shape",e,t,a))];case"MirrorPad":return[n.mirrorPad(k("x",e,t,a),k("padding",e,t,a),k("mode",e,t,a))];case"PadV2":case"Pad":return[n.pad(k("x",e,t,a),k("padding",e,t,a),k("constantValue",e,t,a))];case"SpaceToBatchND":{let r=k("blockShape",e,t,a),s=k("paddings",e,t,a);return[n.spaceToBatchND(k("x",e,t,a),r,s)]}case"BatchToSpaceND":{let r=k("blockShape",e,t,a),s=k("crops",e,t,a);return[n.batchToSpaceND(k("x",e,t,a),r,s)]}case"DepthToSpace":{let r=k("blockSize",e,t,a),s=k("dataFormat",e,t,a).toUpperCase();return[n.depthToSpace(k("x",e,t,a),r,s)]}case"BroadcastTo":return[n.broadcastTo(k("x",e,t,a),k("shape",e,t,a))];case"BroadcastArgs":return[n.broadcastArgs(k("s0",e,t,a),k("s1",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function vg(e,t,a,n,r=Ue){let s=((i,o,u)=>{switch(i.category){case"arithmetic":return r(()=>D$(i,o,u));case"basic_math":return r(()=>z$(i,o,u));case"control":return G$(i,o,u);case"convolution":return r(()=>H$(i,o,u));case"creation":return r(()=>j$(i,o,u));case"dynamic":return q$(i,o,u);case"evaluation":return r(()=>X$(i,o,u));case"image":return r(()=>J$(i,o,u));case"graph":return r(()=>K$(i,o,u));case"logical":return r(()=>Q$(i,o,u));case"matrices":return r(()=>eM(i,o,u));case"normalization":return r(()=>tM(i,o,u));case"ragged":return r(()=>aM(i,o,u));case"reduction":return r(()=>nM(i,o,u));case"slice_join":return r(()=>rM(i,o,u));case"sparse":return r(()=>sM(i,o,u));case"spectral":return r(()=>iM(i,o,u));case"string":return r(()=>oM(i,o,u));case"transformation":return r(()=>lM(i,o,u));case"hash_table":return Z$(i,o,u,n);case"custom":let d=S1(i.op);if(d&&d.customExecutor)return d.customExecutor(new O$(i,o,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,a);return v.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var wg=class{constructor(e={},t={},a={},n={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=a,this.functionMap=n,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let a=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(a))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function kg(e,t,a,n){let r=new Set,s=[],i=null,o=null,u=new Set,d=new Set(Object.keys(e).map(c=>Da(c)[0]));n=n||[];let l=new Set(n.map(c=>Da(c.name)[0])),p=[...t];for(;p.length>0;){let c=p.pop();if((ws(c)||gM(c)||yM(c))&&i==null&&(i=c,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(c.name),a[c.name]==null&&!d.has(c.name)&&!l.has(c.name)){if(c.inputs.length===0){s.push(c.name);continue}c.inputs.forEach(h=>{u.has(h.name)||(u.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}function uM(e,t){let{usedNodes:a,inputs:n}=t,r=Object.keys(n).map(g=>Da(g)[0]).map(g=>e.nodes[g]),s=e.initNodes||[],i=g=>a.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let u=o([...r,...e.weights,...s]).filter(i),d=o([...u,...Object.values(e.nodes)]).filter(i),l=new Map(d.map(g=>[g.name,g])),p={};for(let g of d){p[g.name]=p[g.name]||0;for(let y of g.children)i(y)||(p[y.name]=Number.POSITIVE_INFINITY),p[y.name]=(p[y.name]||0)+1}let c=Object.entries(p).filter(([,g])=>g===0).map(([g])=>g),h=[...c];for(;c.length>0;){let g=c.pop(),y=l.get(g);for(let x of y.children.filter(i))--p[x.name]===0&&(h.push(x.name),c.push(x.name))}let f=h.map(g=>l.get(g)),m=dM(f,u);return pM(m,u),m}function dM(e,t){let a=new Map(e.map(s=>[s.name,s])),n=t.map(s=>s.name),r=new Set(n);for(;n.length>0;){let s=n.pop(),i=a.get(s);for(let o of i.children)!a.has(o.name)||r.has(o.name)||(r.add(o.name),n.push(o.name))}return e.filter(s=>r.has(s.name))}var Np=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function pM(e,t){let a=new Map(e.map((o,u)=>[o.name,u])),n=new Set(t.map(o=>o.name)),r=o=>n.has(typeof o=="string"?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has(typeof o=="string"?o:o.name);for(let o of e){for(let u of o.children.filter(i)){if(!a.has(u.name))throw new Np(`Child ${u.name} of node ${o.name} is unreachable.`);if(a.get(o.name)>a.get(u.name))throw new Np(`Node ${o.name} is scheduled to run after its child ${u.name}.`)}if(!r(o))for(let u of o.inputs){if(!a.has(u.name))throw new Np(`Input ${u.name} of node ${o.name} is unreachable.`);if(a.get(u.name)>a.get(o.name))throw new Np(`Node ${o.name} is scheduled to run before its input ${u.name}.`)}}}function cM(e){let t=new Map(e.map((o,u)=>[o.name,u])),a=Number.MAX_SAFE_INTEGER,n=e.map((o,u)=>ws(o)?a:u),r=o=>{let u=n[t.get(o.name)];return u??-1},s=e.map((o,u)=>o.children.map(r).reduce((d,l)=>Math.max(d,l),n[u])),i=new Map;for(let o=0;o<e.length;++o){let u=s[o];if(u===a)continue;let d=e[o],l=e[u];i.has(l.name)||i.set(l.name,[]),i.get(l.name).push(d)}return i}var hM=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),fM=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),mM=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ws(e){return hM.has(e.op)}function gM(e){return fM.has(e.op)}function yM(e){return mM.has(e.op)}var Ig=class q1{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let a=Object.keys(t).map(n=>t[n].map(r=>r.id));this._weightIds=[].concat(...a),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let a=t.signatureKey||t.name;return t.defaultOutput?`${a}:${t.defaultOutput}`:a})}get functions(){return Object.keys(this._functions).reduce((t,a)=>(t[a]=this._functions[a].signature,t),{})}constructor(t,a){this.graph=t,this.parent=a,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new q1(t.functions[n],this)})}getCompilationKey(t,a){let n=t.map(s=>s.name).sort(),r=a.map(s=>s.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(t,a){let n=kg(t,a,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:i}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){let d=a.map(p=>p.name),l=Object.keys(t);throw new Error(`Cannot compute the outputs [${d}] from the provided inputs [${l}]. Missing the following inputs: [${r}]`)}let o=uM(this.graph,n),u=cM(o);return{orderedNodes:o,nodeLiveUntilMap:u}}cloneAndKeepTensor(t){if(t==null)return null;let a=t.clone();return In(a),a}cloneTensorList(t){return t?t.map(a=>this.cloneAndKeepTensor(a)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([a,n])=>[a,this.cloneTensorList(n)]))}execute(t,a){this.disposeIntermediateTensors(),t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),a=this.mapOutputs(a),this.checkOutputs(a);let r=n.map(c=>this.graph.nodes[Da(c)[0]]),s=a.map(c=>Da(c)[0]),i=new Set(s),o=s.map(c=>this.graph.nodes[c]);o.length===0&&(o=this._outputs);let u=this.getCompilationKey(r,o),d=this.compiledMap.get(u);d==null&&(d=this.compile(t,o),this.compiledMap.set(u,d));try{this.keepIntermediateTensors=U().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){this.keepIntermediateTensors=!1,console.warn(c.message)}let l={},p={};return Ue(()=>{let c=new wg(this.weightMap,l,p,this.functionExecutorMap,this.parseNodeNameCache),h=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(y=>{let[x,A]=Da(y,c),b=[];b[A]=t[y],h[x]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(b))});let f=this.getFrozenTensorIds(h),{orderedNodes:m,nodeLiveUntilMap:g}=d;for(let y of m){if(h[y.name])continue;let x=vg(y,h,c,this._resourceManager);if(v.isPromise(x))throw new Error(`The execution of the op '${y.op}' returned a promise. Please use model.executeAsync() instead.`);h[y.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(y,h,c,f,i,g.get(y.name))}return this.parent==null&&c.dispose(f),a.map(y=>Zt(y,h,c))})}getFrozenTensorIds(t){let a=[].concat.apply([],Object.keys(t).map(n=>t[n]).map(n=>n.map(r=>r.id)));return new Set(a)}checkTensorForDisposal(t,a,n,r,s,i,o){if(!(ws(a)||i.has(t))){for(let u of n[t])u!=null&&(o[u.id]=(o[u.id]||0)+a.children.length);for(let u of a.inputs){if(ws(u))continue;let d=gg(u.name,n,r);if(d!=null)for(let l of d){if(!l||l.kept||s.has(l.id))continue;let p=o[l.id];p===1?(l.dispose(),delete o[l.id]):p!=null&&o[l.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,a,n,r,s,i){function o(u){return ws(u)||s.has(u.name)}if(!(ws(t)||i==null))for(let u of i){if(o(u))continue;let d=gg(u.name,a,n);for(let l of d)!l||l.kept||r.has(l.id)||l.dispose()}}async executeAsync(t,a){return this._executeAsync(t,a)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let a of t)a&&!a.isDisposed&&a.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,a,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),a=this.mapOutputs(a),this.checkOutputs(a));try{this.keepIntermediateTensors=U().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(c){this.keepIntermediateTensors=!1,console.warn(c.message)}let i=new wg(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let o=await this.executeWithControlFlow(t,i,a,n),u=a.map(c=>Zt(c,o,i)),d=u.map(c=>c.id),l=Object.keys(t).map(c=>t[c].id),p=new Set([...d,...l,...this.weightIds]);return Object.values(o).forEach(c=>{c.forEach(h=>{h&&!h.isDisposed&&!p.has(h.id)&&h.dispose()})}),this.parent==null&&i.dispose(p),u}async executeFunctionAsync(t,a,n){let r=t.reduce((s,i,o)=>(s[this.inputs[o].name]=i,s),{});return this._executeAsync(r,this.outputNodes,!0,a,n)}async executeWithControlFlow(t,a,n,r){let s=Object.keys(t),i=s.map(b=>this.graph.nodes[Da(b)[0]]),o=n.map(b=>Da(b)[0]),u=new Set(o),d=o.map(b=>this.graph.nodes[b]);d.length===0&&(d=this._outputs);let{usedNodes:l,missingInputs:p,dynamicNode:c,syncInputs:h}=kg(t,d,this.weightMap,this._initNodes),f=[...i,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:a.currentContext})),m=Object.assign({},this.weightMap);Object.keys(t).forEach(b=>{let[w,S]=Da(b),N=[];N[S]=t[b],m[w]=N});let g={},y=this.getFrozenTensorIds(m),x={};for(;f.length>0;){let b=this.processStack(i,f,a,m,x,y,u,g,l);await Promise.all(b)}c==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let A=d.filter(b=>!ws(b)&&!Zt(b.name,m,a)).map(b=>b.name);if(A.length>0){let b="";throw c!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${b}`)}return m}processStack(t,a,n,r,s,i,o,u,d){let l=[];for(;a.length>0;){let p=a.pop();n.currentContext=p.contexts;let c="";if(p.node.op==="Enter"&&k("isConstant",p.node,r,n)&&([c]=Jn(p.node.name,n)),r[p.node.name]==null){let h=vg(p.node,r,n,this._resourceManager);c||([c]=Jn(p.node.name,n));let f=n.currentContext;v.isPromise(h)?l.push(h.then(m=>(r[c]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(m)),n.currentContext=f,this.checkTensorForDisposal(c,p.node,r,n,i,o,u),this.processChildNodes(p.node,a,n,r,s,d),m))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,p.node,r,n,i,o,u),this.processChildNodes(p.node,a,n,r,s,d))}else this.processChildNodes(p.node,a,n,r,s,d)}return l}processChildNodes(t,a,n,r,s,i){t.children.forEach(o=>{let[u]=Jn(o.name,n);s[u]||!i.has(o.name)||(o.op==="Merge"?o.inputNames.some(d=>!!Zt(d,r,n))&&(s[u]=!0,a.push({contexts:n.currentContext,node:o})):o.inputNames.every(d=>!!Zt(d,r,n))&&(s[u]=!0,a.push({contexts:n.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(a=>a.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(a=>{let n=t[a],[r]=Da(a),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,o=i.length===n.shape.length&&n.shape.every((u,d)=>i[d]===-1||i[d]===u);v.assert(o,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&v.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){var a,n;let r={};for(let s in t){let i=(n=(a=this._signature)===null||a===void 0?void 0:a.inputs)===null||n===void 0?void 0:n[s];i!=null?r[i.name]=t[s]:r[s]=t[s]}return r}checkInputs(t){let a=Object.keys(t).filter(n=>{let[r]=Da(n);return this.graph.nodes[r]==null});if(a.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${a}] that are not part of graph`)}mapOutputs(t){return t.map(a=>{var n,r;let s=(r=(n=this._signature)===null||n===void 0?void 0:n.outputs)===null||r===void 0?void 0:r[a];return s!=null?s.name:a},{})}checkOutputs(t){t.forEach(a=>{let[n]=Da(a);if(!this.graph.nodes[n])throw new Error(`The output '${a}' is not found in the graph`)})}},xM=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},AM="?tfjs-format=file",bM="model.json",lh=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},a=ar){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=a,t==null&&(this.loadOptions={}),this.resourceManager=new xM}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let t=await SA(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let a=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let r=this.artifacts.userDefinedMetadata;r.signature!=null&&(n=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=n,this.version=`${a.versions.producer}.${a.versions.minConsumer}`,this.executor=new Ig(yg.Instance.transformGraph(a,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=yg.Instance.transformGraph(e.modelInitializer);this.initializer=new Ig(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let a=this.io.getSaveHandlers(e);if(a.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(a.length>1)throw new Error(`Found more than one (${a.length}) save handlers for URL '${e}'`);e=a[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof xt?[e]:e,a={};return t.forEach((n,r)=>a[this.structuredOutputKeys[r]]=n),a}return e}predict(e,t){let a=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(a)}async predictAsync(e,t){let a=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(a)}normalizeInputs(e){var t;if(!(e instanceof xt)&&!Array.isArray(e)){let r=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(r!=null)for(let s in r){let i=r[s];i.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let a=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+a!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-a} non-resource placeholders, while there are ${e.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((r,s)=>{var i,o,u;let d=(u=(o=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||o===void 0?void 0:o[s])===null||u===void 0?void 0:u.resourceId;return d!=null?r[s]=this.resourceIdToCapturedInput[d]:r[s]=e[n++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,a=Object.keys(t);for(let n=0;n<a.length;n++){let r=a[n],s=t[r];this.resourceIdToCapturedInput[s.resourceId]=e[n]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=this.executor.execute(e,t);return a.length>1?a:a[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let a=await this.executor.executeAsync(e,t);return a.length>1?a:a[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,a)=>(t[a]=[e[a]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&ae(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function X1(e,t={},a=ar){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=wM(e));let n=new lh(e,t,a);return await n.load(),n}function vM(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let s=ar.getWeightSpecs(n.weightsManifest),i=ar.getModelArtifactsForJSONSync(n,s,r);t=ar.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=ar.fromMemorySync(e);else throw new Error("Unknown model format");let a=new lh(t);return a.load(),a}function wM(e){return e.endsWith("/")||(e=e+"/"),`${e}${bM}${AM}`}var kM="4.22.0";function ve(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&v.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var IM=yn.whereImpl,Wm=class K1 extends wl{nextDataId(){return K1.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new xd(this,$t())}write(t,a,n){this.firstUse&&(this.firstUse=!1,U().get("IS_NODE")&&C.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,a,n){let r;if(a==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let s=n.map(i=>v.encodeString(i));r=this.write(s,t,a)}else r=this.write(n,t,a);return{dataId:r,shape:t,dtype:a}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){let a=this.data.get(t);a.refCount++}decRef(t){if(this.data.has(t)){let a=this.data.get(t);a.refCount--}}move(t,a,n,r,s){this.data.set(t,{values:a,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){let{dtype:a,complexTensorInfos:n}=this.data.get(t);if(a==="complex64"){let r=this.readSync(n.real.dataId),s=this.readSync(n.imag.dataId);return C.mergeRealAndImagArrays(r,s)}return v.convertBackendValuesAndArrayBuffer(this.data.get(t).values,a)}bufferSync(t){let a=this.readSync(t.dataId);if(t.dtype==="string")try{let n=a.map(r=>v.decodeString(r));return $e(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return $e(t.shape,t.dtype,a)}makeOutput(t,a,n){return $t().makeTensorFromTensorInfo(this.makeTensorInfo(a,n,t),this)}disposeData(t,a=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!a&&this.data.get(t).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(t);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){let a=v.now();return t(),{kernelMs:v.now()-a}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){ve([t],"where");let a=this.readSync(t.dataId);return IM(t.shape,a)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Wm.nextDataId=0;var uh={};je(uh,{addImpl:()=>J1,bincountImpl:()=>Vm,bincountReduceImpl:()=>Q1,bitwiseAndImpl:()=>ev,castImpl:()=>Z1,ceilImpl:()=>tv,concatImpl:()=>Um,equalImpl:()=>av,expImpl:()=>rv,expm1Impl:()=>iv,floorDivImpl:()=>lv,floorImpl:()=>ov,gatherNdImpl:()=>uv,gatherV2Impl:()=>dv,greaterEqualImpl:()=>cv,greaterImpl:()=>pv,lessEqualImpl:()=>fv,lessImpl:()=>hv,linSpaceImpl:()=>mv,logImpl:()=>gv,maxImpl:()=>yv,maximumImpl:()=>xv,minimumImpl:()=>Av,multiplyImpl:()=>Gm,negImpl:()=>bv,notEqualImpl:()=>vv,prodImpl:()=>wv,raggedGatherImpl:()=>kv,raggedRangeImpl:()=>Iv,raggedTensorToTensorImpl:()=>Sv,rangeImpl:()=>jm,rsqrtImpl:()=>Cv,scatterImpl:()=>_s,sigmoidImpl:()=>kF,simpleAbsImpl:()=>Y1,sliceImpl:()=>vc,sparseFillEmptyRowsImpl:()=>Tv,sparseReshapeImpl:()=>Rv,sparseSegmentReductionImpl:()=>qm,sqrtImpl:()=>CF,squaredDifferenceImpl:()=>Ev,staticRegexReplaceImpl:()=>_v,stridedSliceImpl:()=>$v,stringNGramsImpl:()=>Xm,stringSplitImpl:()=>Km,stringToHashBucketFastImpl:()=>Ym,subImpl:()=>Mv,tileImpl:()=>Fv,topKImpl:()=>Ov,transposeImpl:()=>Hm,uniqueImpl:()=>Jm});function Y1(e){let t=new Float32Array(e.length);for(let a=0;a<e.length;++a)t[a]=Math.abs(e[a]);return t}var SM=e=>{let{x:t}=e.inputs,a=e.backend;ve(t,"abs");let n=new Float32Array(v.sizeFromShape(t.shape)),r=a.data.get(t.dataId).values;return n=Y1(r),a.makeOutput(n,t.shape,t.dtype)},CM={kernelName:"Abs",backendName:"cpu",kernelFunc:SM};function Rt(e){return(t,a,n,r,s)=>{let i=C.assertAndGetBroadcastShape(t,a),o=i.length,u=v.computeStrides(i),d=v.sizeFromShape(i),l=v.getTypedArrayFromDType(s,d),p=t.length,c=a.length,h=v.computeStrides(t),f=v.computeStrides(a),m=C.getBroadcastDims(t,i),g=C.getBroadcastDims(a,i);if(m.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=e(n[y%n.length],r[y%r.length]);else for(let y=0;y<l.length;++y){let x=v.indexToLoc(y,o,u),A=x.slice(-p);m.forEach(N=>A[N]=0);let b=v.locToIndex(A,p,h),w=x.slice(-c);g.forEach(N=>w[N]=0);let S=v.locToIndex(w,c,f);l[y]=e(n[b],r[S])}return[l,i]}}function Wa(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,s=a.data.get(n.dataId).values,i=a.data.get(r.dataId).values,o=a.makeTensorInfo(n.shape,"complex64"),u=a.data.get(o.dataId);return u.complexTensorInfos={real:a.makeTensorInfo(n.shape,"float32",s),imag:a.makeTensorInfo(r.shape,"float32",i)},o}var NM={kernelName:kd,backendName:"cpu",kernelFunc:Wa};function bc(e,t,a="float32"){if(a==="complex64"){let r=bc(e,t,"float32"),s=bc(e,t,"float32");return Wa({inputs:{real:r,imag:s},backend:e})}let n=v.makeZerosTypedArray(v.sizeFromShape(t),a);return e.makeTensorInfo(t,a,n)}function Gn(e){let{inputs:t,backend:a}=e,{x:n}=t;return a.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var TM={kernelName:_i,backendName:"cpu",kernelFunc:Gn};function Vs(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.data.get(n.dataId).complexTensorInfos.real,s=a.data.get(r.dataId).values;return a.makeTensorInfo(r.shape,r.dtype,s)}var RM={kernelName:Fd,backendName:"cpu",kernelFunc:Vs};function Z1(e,t,a,n){if(n==="int32"){let r=Int32Array.from(e);return[t,"int32",r]}if(n==="bool"){let r=v.toTypedArray([0],a),[s,i]=Rt((o,u)=>o!==u?1:0)(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${a} to ${n}`)}function Kr(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:s}=n;if(s==="complex64"){if(r.dtype==="complex64")return Gn({inputs:{x:r},backend:a});let l=bc(a,r.shape,r.dtype),p=Kr({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),c=Wa({inputs:{real:p,imag:l},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(p),c}if(r.dtype==="complex64"){let l=Vs({inputs:{input:r},backend:a}),p=Kr({inputs:{x:l},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(l),p}if(!v.hasEncodingLoss(r.dtype,s)){let l=Gn({inputs:{x:r},backend:a});return{dataId:l.dataId,shape:l.shape,dtype:s}}let i=a.data.get(r.dataId).values,[o,u,d]=Z1(i,r.shape,r.dtype,s);return a.makeTensorInfo(o,u,d)}var EM={kernelName:li,backendName:"cpu",kernelFunc:Kr};function Lt(e,t,a,n){return a==null?({inputs:r,backend:s})=>{let{a:i,b:o}=r,u=s;ve([i,o],e);let d=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,p=i.dtype==="string"?C.fromUint8ToStringArray(d):d,c=i.dtype==="string"?C.fromUint8ToStringArray(l):l,h=n||i.dtype,[f,m]=t(i.shape,o.shape,p,c,h);return u.makeTensorInfo(m,h,f)}:({inputs:r,backend:s})=>{let{a:i,b:o}=r,u=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let d=Kr({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(d.dataId),p=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,h=u.data.get(p.dataId).values,f=u.data.get(c.dataId).values,m=Kr({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),y=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,A=u.data.get(y.dataId).values,b=u.data.get(x.dataId).values,[w,S,N]=a(i.shape,o.shape,h,f,A,b),T=u.makeTensorInfo(N,"float32",w),_=u.makeTensorInfo(N,"float32",S),P=Wa({inputs:{real:T,imag:_},backend:u});return u.disposeIntermediateTensorInfo(d),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(T),u.disposeIntermediateTensorInfo(_),P}else{let d=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,p=n||i.dtype,[c,h]=t(i.shape,o.shape,d,l,p);return u.makeTensorInfo(h,p,c)}}}function Bm(e){return(t,a,n,r,s,i)=>{let o=C.assertAndGetBroadcastShape(t,a),u=v.sizeFromShape(o),d=o.length,l=v.computeStrides(o),p=v.getTypedArrayFromDType("float32",u),c=v.getTypedArrayFromDType("float32",u),h=C.getBroadcastDims(t,o),f=C.getBroadcastDims(a,o),m=C.mergeRealAndImagArrays(n,r),g=C.mergeRealAndImagArrays(s,i),y=t.length,x=v.computeStrides(t),A=a.length,b=v.computeStrides(a);if(h.length+f.length===0)for(let w=0;w<p.length;w++){let S=w%m.length,N=w%g.length,T=e(m[S*2],m[S*2+1],g[N*2],g[N*2+1]);p[w]=T.real,c[w]=T.imag}else for(let w=0;w<p.length;w++){let S=v.indexToLoc(w,d,l),N=S.slice(-y);h.forEach(I=>N[I]=0);let T=v.locToIndex(N,y,x),_=S.slice(-A);f.forEach(I=>_[I]=0);let P=v.locToIndex(_,A,b),E=e(m[T*2],m[T*2+1],g[P*2],g[P*2+1]);p[w]=E.real,c[w]=E.imag}return[p,c,o]}}var J1=Rt((e,t)=>e+t),_M=Bm((e,t,a,n)=>({real:e+a,imag:t+n})),gl=Lt("Add",J1,_M),$M={kernelName:"Add",backendName:"cpu",kernelFunc:gl};function Vm(e,t,a,n,r){let s=v.sizeFromShape(n),i=v.makeZerosTypedArray(r,a);for(let o=0;o<e.length;o++){let u=e[o];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(s>0?i[u]+=t[o]:i[u]+=1)}return i}function Q1(e,t,a,n=!1){let r=e.shape[0],s=e.shape[1],i=$e([r,a],t.dtype);for(let o=0;o<r;o++)for(let u=0;u<s;u++){let d=e.get(o,u);if(d<0)throw new Error("Input x must be non-negative!");d>=a||(n?i.set(1,o,d):t.size>0?i.set(i.get(o,d)+t.get(o,u),o,d):i.set(i.get(o,d)+1,o,d))}return i}var ev=Rt((e,t)=>e&t),MM=Lt(Tl,ev),FM={kernelName:Tl,backendName:"cpu",kernelFunc:MM};function jn(e){return(t,a,n)=>{let r=v.getArrayFromDType(a,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],n);return r}}function it(e,t,a){let n=jn(t);return rs(e,n,a)}function rs(e,t,a){return({inputs:n,attrs:r,backend:s})=>{let{x:i}=n;ve(i,e);let o=s,u=o.data.get(i.dataId).values,d;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");d=C.fromUint8ToStringArray(u)}else d=u;let l=a||i.dtype,p=t(d,l,r);return o.makeTensorInfo(i.shape,l,p)}}var tv=jn(e=>Math.ceil(e)),PM=rs(ui,tv),OM={kernelName:ui,backendName:"cpu",kernelFunc:PM};function Um(e,t,a,n){let r=v.getArrayFromDType(a,v.sizeFromShape(t));if(n&&a!=="string"){let s=0;e.forEach(i=>{let o=v.sizeFromShape(i.shape);r.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=a==="string"?C.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let d=0;d<i.shape[0];++d){let l=d*t[1]+s;for(let p=0;p<i.shape[1];++p)r[l+p]=o[u++]}s+=i.shape[1]})}return r}var av=Rt((e,t)=>e===t?1:0),nv=Lt(wi,av,null,"bool"),DM={kernelName:wi,backendName:"cpu",kernelFunc:nv},rv=jn(e=>Math.exp(e)),sv=rs("Exp",rv,"float32"),zM={kernelName:"Exp",backendName:"cpu",kernelFunc:sv},iv=jn(e=>Math.expm1(e)),LM=rs(ki,iv),WM={kernelName:ki,backendName:"cpu",kernelFunc:LM},ov=jn(e=>Math.floor(e)),BM=rs(Si,ov),VM={kernelName:Si,backendName:"cpu",kernelFunc:BM},lv=Rt((e,t)=>Math.floor(e/t)),UM=Lt(Ci,lv,null,"int32"),GM={kernelName:Ci,backendName:"cpu",kernelFunc:UM};function uv(e,t,a,n,r,s,i,o,u){let d=$e([n,s],a);for(let l=0;l<n;l++){let p=[],c=0;for(let h=0;h<r;h++){let f=e[l*r+h];c+=f*i[h],p.push(f)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${p} does not index into ${o}`);for(let h=0;h<s;h++)d.values[l*s+h]=t.get(...t.indexToLoc(c*s+h))}return d}function dv(e,t,a){let n=$e(a,e.dtype);for(let r=0;r<n.size;++r){let s=n.indexToLoc(r).slice(),i=s[0],o=s[2],u=t.locToIndex([i,o]);s[2]=t.values[u];let d=e.locToIndex(s);0<=d&&d<e.values.length&&(n.values[r]=e.values[d])}return n}var pv=Rt((e,t)=>e>t?1:0),HM=Lt(Ri,pv,null,"bool"),jM={kernelName:Ri,backendName:"cpu",kernelFunc:HM},cv=Rt((e,t)=>e>=t?1:0),qM=Lt(Ei,cv,null,"bool"),XM={kernelName:Ei,backendName:"cpu",kernelFunc:qM},hv=Rt((e,t)=>e<t?1:0),KM=Lt(Oi,hv,null,"bool"),YM={kernelName:Oi,backendName:"cpu",kernelFunc:KM},fv=Rt((e,t)=>e<=t?1:0),ZM=Lt(Di,fv,null,"bool"),JM={kernelName:Di,backendName:"cpu",kernelFunc:ZM};function mv(e,t,a){let n=(t-e)/(a-1),r=v.makeZerosTypedArray(a,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+n;return r}var gv=jn(e=>Math.log(e)),QM=rs("Log",gv),eF={kernelName:"Log",backendName:"cpu",kernelFunc:QM};function yv(e,t,a,n){let r=v.getTypedArrayFromDType(n,v.sizeFromShape(a));for(let s=0;s<r.length;++s){let i=s*t,o=e[i];for(let u=0;u<t;++u){let d=e[i+u];(Number.isNaN(d)||d>o)&&(o=d)}r[s]=o}return r}var xv=Rt((e,t)=>Math.max(e,t)),tF=Lt(Ui,xv),aF={kernelName:Ui,backendName:"cpu",kernelFunc:tF},Av=Rt((e,t)=>Math.min(e,t)),nF=Lt(ji,Av),rF={kernelName:ji,backendName:"cpu",kernelFunc:nF},Gm=Rt((e,t)=>e*t),sF=Bm((e,t,a,n)=>({real:e*a-t*n,imag:e*n+t*a})),dh=Lt(Ki,Gm,sF),iF={kernelName:Ki,backendName:"cpu",kernelFunc:dh};function bv(e,t,a){let n=v.createScalarValue(-1,a);return Gm([],t,n,e,a)}function oF(e){let{inputs:t,backend:a}=e,{x:n}=t;ve(n,"neg");let r=a.data.get(n.dataId).values,[s,i]=bv(r,n.shape,n.dtype);return a.makeTensorInfo(i,n.dtype,s)}var lF={kernelName:"Neg",backendName:"cpu",kernelFunc:oF},vv=Rt((e,t)=>e!==t?1:0),uF=Lt(Yi,vv,null,"bool"),dF={kernelName:Yi,backendName:"cpu",kernelFunc:uF};function Hm(e,t,a,n,r){let s=t.length,i=v.sizeFromShape(t),o=v.computeStrides(t),u=v.computeStrides(r),d=v.getTypedArrayFromDType(a,v.sizeFromShape(r));for(let l=0;l<i;++l){let p=v.indexToLoc(l,s,o),c=new Array(p.length);for(let f=0;f<c.length;f++)c[f]=p[n[f]];let h=v.locToIndex(c,s,u);d[h]=e[l]}return d}function $a(e){let{inputs:t,attrs:a,backend:n}=e,{x:r}=t,{perm:s}=a;ve(r,"transpose");let i=r.shape.length,o=new Array(i);for(let l=0;l<o.length;l++)o[l]=r.shape[s[l]];let u=n.data.get(r.dataId).values,d=Hm(u,r.shape,r.dtype,s,o);return{dataId:n.write(d,o,r.dtype),shape:o,dtype:r.dtype}}var pF={kernelName:rr,backendName:"cpu",kernelFunc:$a};function wv(e,t,a,n){let[r,s]=C.computeOutAndReduceShapes(e,n),i=ea(t,"int32"),o=v.makeZerosTypedArray(v.sizeFromShape(r),i),u=v.sizeFromShape(s);for(let d=0;d<o.length;++d){let l=d*u,p=1;for(let c=0;c<u;++c)p*=a[l+c];o[d]=p}return{outVals:o,outShape:r,outDtype:i}}function cF(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;ve(r,"prod");let o=r.shape.length,u=v.parseAxisParam(s,r.shape),d=C.getAxesPermutation(u,o),l=u,p=r,c=[];d!=null&&(p=$a({inputs:{x:r},backend:a,attrs:{perm:d}}),c.push(p),l=C.getInnerMostAxes(l.length,o));let h=a.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=wv(p.shape,p.dtype,h,l),y=m;return i&&(y=C.expandShapeToKeepDim(m,u)),c.forEach(x=>a.disposeIntermediateTensorInfo(x)),a.makeTensorInfo(y,g,f)}var hF={kernelName:ao,backendName:"cpu",kernelFunc:cF};function fF(e,t,a){e.forEach((n,r)=>{if(n<0||n>=a){let s=v.indexToLoc(r,t.length,v.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${a})`)}})}function mF(e,t){for(let a=0;a<e.length;++a){let n=e[a],r=a===e.length-1?t:e[a+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>r)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function gF(e,t,a,n){let r=[],s=0,i=t.length-1+a.length,o=new Array(i).fill(null).map(()=>[0]);mF(a,n);let u=1;for(let d=0;d<t.length-1;++d){u*=t[d];let l=t[d+1];for(let p=1;p<u+1;++p)o[d].push(p*l)}for(let d=0;d<e.length;++d){let l=e[d],p=e[d]+1;for(let c=0;c<a.length;++c){let h=a[c],f=c+t.length-1;if(f>=0){let m=o[f],g=m[m.length-1]-h[l];for(let y=l;y<p;++y)o[f].push(h[y+1]+g)}l=h[l],p=h[p]}p!==l&&(r.push([l,p]),s+=p-l)}return{outSplits:o,valueSlices:r,numValues:s}}function yF(e){let t=[];for(let a=0;a<e.length;++a){let n=e[a].length,r=v.getArrayFromDType("int32",n);t.push(r),e[a].forEach((s,i)=>r[i]=s)}return t}function Sg(e,t){let a=e.slice(0,t);for(;a.length<t;)a.push(1);for(let n=t;n<e.length;n++)a[t-1]*=e[n];return a}function xF(e,t,a,n,r,s){let i=Sg(t,2)[1],o=Sg(s,2)[1],u=0;for(let d of a)for(let l=d[0];l<d[1];++l){for(let p=0;p<n;++p)r[u*o+p]=e[l*i+p];++u}}function AF(e,t,a,n,r){let s=t.slice();s[0]=r;let i=v.getArrayFromDType(a,v.sizeFromShape(s)),o=e.length,u=o===0?0:o/t[0];return xF(e,t,n,u,i,s),[i,s]}function kv(e,t,a,n,r,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let u=t[0][0]-1;if(fF(s,i,u),n.length===0)throw new Error("params.rank must be nonzero");let d=n[0],{outSplits:l,valueSlices:p,numValues:c}=gF(s,i,e,d),h=yF(l),f=AF(a,n,r,p,c);return[h,f[0],f[1]]}var Cg=2147483647;function Iv(e,t,a,n,r,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,u=r.length===0,d=i.length===0,l=[];o||l.push(t[0]),u||l.push(r[0]),d||l.push(i[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=l.length===0?1:l[0],c=v.getArrayFromDType("int32",p+1);c[0]=0;for(let g=0;g<p;++g){let y=o?e[0]:e[g],x=u?n[0]:n[g],A=d?s[0]:s[g];if(A===0)throw new Error("Requires delta != 0");let b;if(A>0&&x<y||A<0&&x>y)b=0;else if(b=Math.ceil(Math.abs((x-y)/A)),b>Cg)throw new Error(`Requires ((limit - start) / delta) <= ${Cg}`);c[g+1]=c[g]+b}let h=c[p],f=v.getArrayFromDType(a,h),m=0;for(let g=0;g<p;++g){let y=c[g+1]-c[g],x=o?e[0]:e[g],A=d?s[0]:s[g];for(let b=0;b<y;++b)f[m++]=x,x+=A}return[c,f]}var sn=C.RowPartitionType,bF=class Zf{constructor(t,a,n,r,s,i,o,u,d,l){this.shape=t,this.shapeShape=a,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=u,this.rowPartitionValuesShapes=d,this.rowPartitionTypes=C.getRowPartitionTypesHelper(l),this.raggedRank=C.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===sn.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===sn.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let a=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case sn.VALUE_ROWIDS:return Zf.getMaxWidthValueRowID(a);case sn.ROW_SPLITS:return Zf.getMaxWidthRowSplit(a);default:throw new Error(`Cannot handle partition type ${sn[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let a=t.length;if(a===0||a===1)return 0;let n=0;for(let r=0;r<a-1;++r){let s=t[r+1]-t[r];s>n&&(n=s)}return n}static getMaxWidthValueRowID(t){let a=t.length;if(a===0)return 0;let n=0,r=t[0],s=0;for(let i=1;i<a;++i){let o=t[i];o!==r&&(r=o,s=Math.max(i-n,s),n=i)}return Math.max(a-n,s)}tensorShapeFromTensor(t,a,n=!0){if(a.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Tg(t,n)}calculateOutputSize(t){let a=this.valuesShape,n=this.defaultValueShape;C.validateDefaultValueShape(n,a);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=C.combineRaggedTensorToTensorShapes(this.raggedRank,r,a);s[0]<0&&(s[0]=t);for(let i=1;i<=this.raggedRank;++i)s[i]<0&&(s[i]=this.getMaxWidth(i));return s}calculateFirstParentOutputIndex(t,a,n){let r=Math.min(t,n),s=[],i=0;for(let o=0;o<r;++o,i+=a)s.push(i);for(let o=r;o<t;++o)s.push(-1);return v.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,a,n,r){let s=t.length,i=[];for(let o=0;o<s-1;++o){let u=t[o+1]-t[o],d=Math.min(r,u),l=a[o];l===-1&&(d=0);for(let p=0;p<d;++p)i.push(l),l+=n;for(let p=0;p<u-d;++p)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,a,n,r){let s=t.length,i=[];if(s===0)return[];let o=0,u=t[0];if(u>=a.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${a.length}`);let d=a[u];i.push(d);for(let l=1;l<s;++l){let p=t[l];if(p===u)d>=0&&(++o,o<r?d+=n:d=-1);else{if(o=0,u=p,p>=a.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${a.length}`);d=a[p]}i.push(d)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,a,n,r){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case sn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,a,n,r);case sn.ROW_SPLITS:if(s.length-1>a.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${a.length}`);return this.calculateOutputIndexRowSplit(s,a,n,r);default:throw new Error(`Unsupported partition type: ${sn[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let a=this.rowPartitionTypes[0];switch(a){case sn.FIRST_DIM_SIZE:return t[0];case sn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case sn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${sn[a]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),a=this.calculateOutputSize(t),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let i=n.length-2;i>=0;--i)n[i]=n[i+1]*a[i+1];let r=Tg(a,!1),s=v.getArrayFromDType(this.valuesDType,v.sizeFromShape(r));if(n[0]*a[0]>0){let i=this.calculateFirstParentOutputIndex(t,n[0],a[0]);for(let o=1;o<=this.raggedRank;++o)i=this.calculateOutputIndex(o-1,i,n[o],a[o]);this.setOutput(this.raggedRank,i,s,r)}return[r,s]}setOutput(t,a,n,r){if(n.length===0)return;let s=this.values,i=n,o=r.slice();o=o.slice(t+1);let u=v.sizeFromShape(o),d=a.length,l=this.defaultValue;if(l.length!==u&&l.length!==1){let f=this.defaultValueShape;Ue(()=>{let m=Z(l,f);l=rl(m,o).dataSync()})}let p=0,c=0,h=0;for(let f=0;f<=d;++f){let m=f<d?a[f]:-1;if(m===h){++h;continue}if(c<h){let g=s.subarray(p*u),y=i.subarray(c*u),x=(h-c)*u;Ng(y,g,x)}if(f>=d){let g=n.length;m=Math.floor(g/u)}if(m>h)if(this.defaultValue.length===1)i.subarray(h*u,m*u).fill(this.defaultValue[0]),h=m;else for(;m>h;){let g=i.slice(h*u);Ng(g,l,u),++h}m<0?(p=f+1,c=h):(p=f,c=h,h=c+1)}}};function Ng(e,t,a){for(let n=0;n<a;n++)e[n]=t[n]}function Tg(e,t){let a=[];for(let n of e){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}a.push(n)}return a}function Sv(e,t,a,n,r,s,i,o,u,d){return new bF(e,t,a,n,r,s,i,o,u,d).compute()}function jm(e,t,a,n){let r=e===t,s=e<t&&a<0,i=t<e&&a>1;if(r||s||i)return v.makeZerosTypedArray(0,n);let o=Math.abs(Math.ceil((t-e)/a)),u=v.makeZerosTypedArray(o,n);t<e&&a===1&&(a=-1),u[0]=e;for(let d=1;d<u.length;d++)u[d]=u[d-1]+a;return u}var Cv=jn(e=>1/Math.sqrt(e)),vF=rs(po,Cv),wF={kernelName:po,backendName:"cpu",kernelFunc:vF};function _s(e,t,a,n,r,s,i,o,u,d){let l=[n/r,r],p=e.values,c=t.values;if(n===0)return $e(a,t.dtype);let h=u instanceof Mt?u:$e(l,t.dtype);typeof u=="string"||typeof u=="number"?h.values.fill(u):typeof u=="boolean"&&h.values.fill(+u);for(let f=0;f<s;f++){let m=[],g=0;for(let y=0;y<i;y++){let x=p[f*i+y];m.push(x),g+=x*o[y]}if(g<0||g>=n/r)throw new Error(`Invalid indices: ${m} does not index into ${a}`);for(let y=0;y<r;y++)d?h.values[g*r+y]+=c[f*r+y]:h.values[g*r+y]=t.rank===0?c[0]:c[f*r+y]}return h}var kF=jn(e=>1/(1+Math.exp(-e))),Nv=it(xo,e=>1/(1+Math.exp(-e))),IF={kernelName:xo,backendName:"cpu",kernelFunc:Nv};function vc(e,t,a,n,r){let s=wt.isSliceContinous(n,t,a),i=v.sizeFromShape(a),o=v.computeStrides(n);if(s){let p=wt.computeFlatOffset(t,o);return r==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let u=r==="string"?C.fromUint8ToStringArray(e):e,d=$e(n,r,u),l=$e(a,r);for(let p=0;p<l.size;++p){let c=l.indexToLoc(p),h=c.map((f,m)=>f+t[m]);l.set(d.get(...h),...c)}return r==="string"?C.fromStringArrayToUint8(l.values):l.values}function Us(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,size:i}=n;ve(r,"slice");let[o,u]=wt.parseSliceParams(r,s,i);wt.assertParamsValid(r,o,u);let d=a.data.get(r.dataId).values,l=vc(d,o,u,r.shape,r.dtype);return a.makeTensorInfo(u,r.dtype,l)}var SF={kernelName:Kl,backendName:"cpu",kernelFunc:Us};function Tv(e,t,a,n,r,s,i){let o=t[0],u=s[0],d=new Array(u),l=new Array(o),p=t[1];if(u===0){if(o!==0)throw new Error(C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=v.getArrayFromDType(a,0),y=v.getArrayFromDType(r,0);return[g,[0,p],y,d,l]}let c=!0,h=0,f=new Array(u).fill(0);for(let g=0;g<o;++g){let y=e[g*p];if(y<0)throw new Error(C.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=u)throw new Error(C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,u));++f[y],c=c&&y>=h,h=y}let m=!0;for(let g=0;g<u;++g){let y=f[g]===0;d[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&c){let g=e,y=n;for(let x=0;x<o;++x)l[x]=x;return[g,[o,p],y,d,l]}else{let g=f[u-1],y=v.getArrayFromDType(a,g*p),x=v.getArrayFromDType(r,g),A=new Array(u).fill(0);for(let b=0;b<o;++b){let w=e[b*p],S=A[w],N=(w===0?0:f[w-1])+S;A[w]++;for(let T=0;T<p;++T)y[N*p+T]=e[b*p+T];x[N]=n[b],l[b]=N}for(let b=0;b<u;++b)if(A[b]===0){let w=b===0?0:f[b-1];y[w*p+0]=b;for(let S=1;S<p;++S)y[w*p+S]=0;x[w]=i}return[y,[g,p],x,d,l]}}function Rv(e,t,a,n,r){let s=v.sizeFromShape(n),i=t[0],o=r.length,u=[],d=1,l=-1;for(let m=0;m<o;++m){let g=r[m];if(g===-1){if(l!==-1)throw new Error(C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,m));l=m,u.push(1)}else{if(g<0)throw new Error(C.getSparseReshapeNegativeOutputDimErrorMessage(m,g));d*=g,u.push(g)}}if(l!==-1){if(d<=0)throw new Error(C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let m=Math.trunc(s/d);if(d*m!==s)throw new Error(C.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[l]=m}if(v.sizeFromShape(u)!==s)throw new Error(C.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let p=n.length,c=[];if(p>0){c[p-1]=1;for(let m=p-2;m>=0;--m)c[m]=c[m+1]*n[m+1]}let h=[];if(o>0){h[o-1]=1;for(let m=o-2;m>=0;--m)h[m]=h[m+1]*u[m+1]}let f=v.getArrayFromDType(a,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<p;++y)g+=e[m*p+y]*c[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/h[y]),g%=h[y]}return[f,[i,o],u]}function qm(e,t,a,n,r,s=!1,i=0){let o=n.length,u=[t[0],e.length/t[0]],d=u[1],l=o>0?r[o-1]+1:0;if(l<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=l;let c=p.reduce((x,A)=>x*A,1),h=v.getArrayFromDType(a,c);if(o===0)return l>0&&h.fill(i),[h,p];if(l<=0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=r[f];for(;;){let x=0;if(m<o){if(x=r[m],y===x){++m;continue}if(y>=x)throw new Error(C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=l)throw new Error(C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,l));y>g&&h.fill(i,g*d,y*d);for(let A=f;A<m;++A){let b=n[A];if(b<0||b>=u[0])throw new Error(C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A,n[A],u[0]));for(let w=0;w<d;w++)h[y*d+w]+=e[b*d+w]}if(s)for(let A=0;A<d;A++)h[y*d+A]/=m-f;if(f=m,++m,g=y+1,y=x,m>o)break}return g<l&&h.fill(i,g*d,l*d),[h,p]}var CF=jn(e=>Math.sqrt(e)),NF=it(bo,e=>Math.sqrt(e)),TF={kernelName:bo,backendName:"cpu",kernelFunc:NF},Ev=Rt((e,t)=>{let a=e-t;return a*a}),RF=Lt(ko,Ev),EF={kernelName:ko,backendName:"cpu",kernelFunc:RF},_v=jn((e,t)=>{let{pattern:a,replaceGlobal:n,rewrite:r}=t;return e.replace(new RegExp(a,n?"g":""),r)}),_F=rs(Dd,_v),$F={kernelName:Dd,backendName:"cpu",kernelFunc:_F};function $v(e,t,a,n){let r=$e(e,t.dtype);for(let s=0;s<r.size;s++){let i=r.indexToLoc(s),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*a[u]+n[u];r.set(t.get(...o),...i)}return r}var MF=class{constructor(e,t,a,n,r,s){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(a),this.rightPad=v.encodeString(n),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let a=this.getPadWidth(t);return Math.max(0,e+2*a-t+1)}createNGrams(e,t,a,n,r,s){for(let i=0;i<r;++i){let o=this.getPadWidth(s),u=Math.max(0,o-i),d=Math.max(0,o-(r-(i+1))),l=s-(u+d),p=t+(u>0?0:i-o),c=0;c+=u*this.leftPad.length;for(let y=0;y<l;++y)c+=e[p+y].length;c+=d*this.rightPad.length;let h=u+d+l-1;c+=h*this.separator.length,a[n+i]=new Uint8Array(c);let f=a[n+i],m=0,g=y=>y.forEach(x=>f[m++]=x);for(let y=0;y<u;++y)g(this.leftPad),g(this.separator);for(let y=0;y<l-1;++y)g(e[p+y]),g(this.separator);if(l>0){g(e[p+l-1]);for(let y=0;y<d;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<d-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let a=e.length,n=t.length;if(n>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let u=1;u<n;++u){let d=t[u]>=o;if(d=d&&t[u]<=a,!d)throw new Error(`Invalid split value ${t[u]}, must be in [${o}, ${a}]`);o=t[u]}if(o!==a)throw new Error(`Last split value must be data size. Expected ${a}, got ${o}`)}let r=n-1,s=v.getArrayFromDType("int32",n);if(a===0||n===0){let o=new Array(a);for(let u=0;u<=r;++u)s[u]=0;return[o,s]}s[0]=0;for(let o=1;o<=r;++o){let u=t[o]-t[o-1],d=0;this.nGramWidths.forEach(l=>{d+=this.getNumNGrams(u,l)}),this.preserveShort&&u>0&&d===0&&(d=1),s[o]=s[o-1]+d}let i=new Array(s[r]);for(let o=0;o<r;++o){let u=t[o],d=s[o];if(this.nGramWidths.forEach(l=>{let p=t[o+1]-t[o],c=this.getNumNGrams(p,l);this.createNGrams(e,u,i,d,c,l),d+=c}),this.preserveShort&&d===s[o]){let l=t[o+1]-t[o];if(l===0)continue;let p=l+2*this.padWidth;this.createNGrams(e,u,i,d,1,p)}}return[i,s]}};function Xm(e,t,a,n,r,s,i,o){return new MF(a,n,r,s,i,o).compute(e,t)}function FF(e,t,a,n){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)n.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!a||o.length!==0)&&n.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!a||e.length!==0)&&n.push(e);return}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(r,s);(!a||i.length!==0)&&n.push(i),r=s+1}}function Km(e,t,a){let n=e.length,r=[],s=0,i=0,o=new Array(n);for(let c=0;c<n;++c){let h=r.length;FF(e[c],t,a,r);let f=r.length-h;o[c]=f,s+=f,i=Math.max(i,f)}let u=v.getArrayFromDType("int32",s*2),d=new Array(s),l=[n,i],p=0;for(let c=0;c<n;++c)for(let h=0;h<o[c];++h)u[p*2]=c,u[p*2+1]=h,d[p]=r[p],++p;return[u,d,l]}function Ym(e,t){let a=v.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)a[n]=v.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return a}var Mv=Rt((e,t)=>e-t),PF=Bm((e,t,a,n)=>({real:e-a,imag:t-n})),Zm=Lt("Sub",Mv,PF),OF={kernelName:"Sub",backendName:"cpu",kernelFunc:Zm};function Fv(e,t){let a=new Array(e.rank);for(let r=0;r<a.length;r++)a[r]=e.shape[r]*t[r];let n=$e(a,e.dtype);for(let r=0;r<n.values.length;++r){let s=n.indexToLoc(r),i=new Array(e.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%e.shape[u];let o=e.locToIndex(i);n.values[r]=e.values[o]}return n}var Eu=(e,t)=>{let a=t.value-e.value;return a===0?e.index-t.index:a};function Pv(e,t,a=0,n=e.length-1){for(;n>a;){if(n-a>600){let o=n-a+1,u=t-a+1,d=Math.log(o),l=.5*Math.exp(2*d/3),p=.5*Math.sqrt(d*l*(o-l)/o)*Math.sign(u-o/2),c=Math.max(a,Math.floor(t-u*l/o+p)),h=Math.min(n,Math.floor(t+(o-u)*l/o+p));Pv(e,t,c,h)}let r=e[t],s=a,i=n;for(v.swap(e,a,t),Eu(e[n],r)>0&&v.swap(e,a,n);s<i;){for(v.swap(e,s,i),s++,i--;Eu(e[s],r)<0;)s=s+1;for(;Eu(e[i],r)>0;)i=i-1}Eu(e[a],r)===0?v.swap(e,a,i):(i=i+1,v.swap(e,i,n)),i<=t&&(a=i+1),t<=i&&(n=i-1)}}function Ov(e,t,a,n,r){let s=t[t.length-1],[i,o]=[e.length/s,s],u=v.getTypedArrayFromDType(a,i*n),d=v.getTypedArrayFromDType("int32",i*n);for(let p=0;p<i;p++){let c=p*o,h=e.subarray(c,c+o),f=new Array(h.length);h.forEach((x,A)=>f[A]={value:x,index:A}),n<f.length&&(Pv(f,n),f=f.slice(0,n)),r&&f.sort(Eu);let m=p*n,g=u.subarray(m,m+n),y=d.subarray(m,m+n);for(let x=0;x<n;x++)g[x]=f[x].value,y[x]=f[x].index}let l=t.slice();return l[l.length-1]=n,[$e(l,a,u),$e(l,"int32",d)]}function Jm(e,t,a,n){let r=v.parseAxisParam(t,a)[0],s=[1,a[0],1];for(let f=0;f<r;f++)s[0]*=a[f];s[1]=a[r];for(let f=r+1;f<a.length;f++)s[2]*=a[f];let i=new Map,o=new Int32Array(a[r]),u=new Mt(s,n,e),d=[],l=s[0]===1&&s[2]===1;for(let f=0;f<a[r];f++){let m;if(l)m=e[f].toString();else{let y=[];for(let x=0;x<s[0];x++)for(let A=0;A<s[2];A++)y.push(u.get(x,f,A));m=y.join(",")}let g=i.get(m);if(g!=null)o[f]=g;else{let y=i.size;i.set(m,y),o[f]=y,d.push(f)}}let p=s.slice();p[1]=i.size;let c=new Mt(p,n);d.forEach((f,m)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)c.set(u.get(g,f,y),g,m,y)});let h=a.slice();return h[r]=p[1],{outputValues:c.values,outputShape:h,indices:o}}var DF="4.22.0";ru("cpu",()=>new Wm,1);var Dv=it("Elu",e=>e>=0?e:Math.exp(e)-1),zF={kernelName:"Elu",backendName:"cpu",kernelFunc:Dv};function zv(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:s}=n;ve([r],"leakyRelu");let i=v.sizeFromShape(r.shape),o=a.data.get(r.dataId).values,u=v.getTypedArrayFromDType("float32",i);for(let d=0;d<o.length;d++)u[d]=o[d]<0?s*o[d]:o[d];return a.makeTensorInfo(r.shape,"float32",u)}var LF={kernelName:Pi,backendName:"cpu",kernelFunc:zv},WF=Rt((e,t)=>e<0?t*e:e);function Lv(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t;ve([n,r],"prelu");let s=a.data.get(n.dataId).values,i=a.data.get(r.dataId).values,[o,u]=WF(n.shape,r.shape,s,i,"float32");return a.makeTensorInfo(u,"float32",o)}var BF={kernelName:to,backendName:"cpu",kernelFunc:Lv},Wv=it(ro,e=>Math.max(0,e)),VF={kernelName:ro,backendName:"cpu",kernelFunc:Wv},Bv=it(oo,e=>Math.min(Math.max(0,e),6)),UF={kernelName:oo,backendName:"cpu",kernelFunc:Bv};function wc(e,t,a,n,r){if(a==="linear")return Gn({inputs:{x:t},backend:e});if(a==="relu")return Wv({inputs:{x:t},backend:e});if(a==="elu")return Dv({inputs:{x:t},backend:e});if(a==="relu6")return Bv({inputs:{x:t},backend:e});if(a==="prelu")return Lv({inputs:{x:t,alpha:n},backend:e});if(a==="leakyrelu")return zv({inputs:{x:t},backend:e,attrs:{alpha:r}});if(a==="sigmoid")return Nv({inputs:{x:t},backend:e});throw new Error(`Activation ${a} has not been implemented for the CPU backend.`)}function mt(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{shape:s}=n,i=v.sizeFromShape(r.shape),o=v.inferFromImplicitShape(s,i),u=v.sizeFromShape(o);v.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),a.incRef(r.dataId);let d=a.data.get(r.dataId);if(d.complexTensorInfos!=null){let l=d.complexTensorInfos.real,p=d.complexTensorInfos.imag;l.shape=o,p.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var GF={kernelName:Hl,backendName:"cpu",kernelFunc:mt};function Vv(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;ve([r,s],"matMul");let u=r.shape.length,d=s.shape.length,l=i?r.shape[u-2]:r.shape[u-1],p=o?s.shape[d-1]:s.shape[d-2],c=i?r.shape[u-1]:r.shape[u-2],h=o?s.shape[d-2]:s.shape[d-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),x=Ro.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,h]);v.assert(l===p,()=>`Error in matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let A=i?[g,l,c]:[g,c,l],b=o?[y,h,p]:[y,p,h],w=mt({inputs:{x:r},backend:a,attrs:{shape:A}}),S=mt({inputs:{x:s},backend:a,attrs:{shape:b}}),N=i?w.shape[1]:w.shape[2],T=i?w.shape[2]:w.shape[1],_=o?S.shape[1]:S.shape[2],P=Math.max(g,y),E=a.data.get(w.dataId).values,I=a.data.get(S.dataId).values,F=v.computeStrides(w.shape),$=v.computeStrides(S.shape),[z,M,H]=i?[F[0],1,F[1]]:[F[0],F[1],1],[V,q,G]=o?[1,$[1],$[0]]:[$[1],1,$[0]],B=T*_,K=$e([P,T,_],w.dtype),X=K.values,J=a.blockSize;for(let ee=0;ee<P;ee++){let ye=ee%g,xe=ee%y;for(let le=0;le<T;le+=J){let Se=Math.min(le+J,T);for(let Re=0;Re<_;Re+=J){let Me=Math.min(Re+J,_);for(let Oe=0;Oe<N;Oe+=J){let ot=Math.min(Oe+J,N);for(let Xe=le;Xe<Se;Xe++)for(let Ye=Re;Ye<Me;Ye++){let Fe=0;for(let at=Oe;at<ot;at++){let dt=E[ye*z+Xe*M+at*H],Ma=I[at*V+Ye*q+xe*G];Fe+=dt*Ma}X[ee*B+(Xe*_+Ye)]+=Fe}}}}}return a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(S),a.makeTensorInfo(x,K.dtype,K.values)}var HF={kernelName:ii,backendName:"cpu",kernelFunc:Vv};function jF(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:d,activation:l,leakyreluAlpha:p}=n,c,h,f,m=[];c=Vv({inputs:{a:r,b:s},attrs:{transposeA:u,transposeB:d},backend:a}),i&&(h=gl({inputs:{a:c,b:i},backend:a}),m.push(c),c=h),l&&(f=wc(a,c,l,o,p),m.push(c),c=f);for(let g of m)a.disposeIntermediateTensorInfo(g);return c}var qF={kernelName:Br,backendName:"cpu",kernelFunc:jF},XF=it(Zs,e=>Math.acos(e)),KF={kernelName:Zs,backendName:"cpu",kernelFunc:XF},YF=it(Js,e=>Math.acosh(e)),ZF={kernelName:Js,backendName:"cpu",kernelFunc:YF};function JF(e){let{inputs:t,backend:a}=e,n=t;ve(t,"addN");let r=n.map(o=>a.data.get(o.dataId).values),s=$e(n[0].shape,n[0].dtype),i=s.values;for(let o=0;o<n.length;o++){let u=r[o];for(let d=0;d<i.length;d++)i[d]+=u[d]}return a.makeTensorInfo(s.shape,s.dtype,s.values)}var QF={kernelName:Qs,backendName:"cpu",kernelFunc:JF};function eP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;ve(r,"all");let o=v.parseAxisParam(s,r.shape),u=o,d=C.getAxesPermutation(u,r.shape.length),l=r;d!=null&&(l=$a({inputs:{x:r},backend:a,attrs:{perm:d}}),u=C.getInnerMostAxes(u.length,r.shape.length)),C.assertAxesAreInnerMostDims("all",u,l.shape.length);let[p,c]=C.computeOutAndReduceShapes(l.shape,u),h=v.sizeFromShape(c),f=v.makeZerosTypedArray(v.sizeFromShape(p),l.dtype),m=a.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A&&w}f[y]=A}d!=null&&a.disposeIntermediateTensorInfo(l);let g=a.makeTensorInfo(p,l.dtype,f);if(i){let y=C.expandShapeToKeepDim(p,o),x=mt({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),x}return g}var tP={kernelName:"All",backendName:"cpu",kernelFunc:eP};function aP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;ve(r,"any");let o=v.parseAxisParam(s,r.shape),u=o,d=C.getAxesPermutation(u,r.shape.length),l=r;d!=null&&(l=$a({inputs:{x:r},backend:a,attrs:{perm:d}}),u=C.getInnerMostAxes(u.length,r.shape.length)),C.assertAxesAreInnerMostDims("any",u,l.shape.length);let[p,c]=C.computeOutAndReduceShapes(l.shape,u),h=v.sizeFromShape(c),f=v.makeZerosTypedArray(v.sizeFromShape(p),l.dtype),m=a.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];A=A||w}f[y]=A}d!=null&&a.disposeIntermediateTensorInfo(l);let g=a.makeTensorInfo(p,l.dtype,f);if(i){let y=C.expandShapeToKeepDim(p,o),x=mt({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),x}return g}var nP={kernelName:"Any",backendName:"cpu",kernelFunc:aP};function rP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n;ve(r,"argMax");let i=v.parseAxisParam(s,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,d=[];o!=null&&(u=$a({inputs:{x:r},backend:a,attrs:{perm:o}}),d.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],C.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[l,p]=C.computeOutAndReduceShapes(u.shape,i),c=v.sizeFromShape(l),h=v.makeZerosTypedArray(c,"int32"),f=v.sizeFromShape(p),m=a.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w>x&&(x=w,A=b)}h[g]=A}return d.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(l,"int32",h)}var sP={kernelName:Il,backendName:"cpu",kernelFunc:rP};function iP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n;ve(r,"argMin");let i=v.parseAxisParam(s,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,d=[];o!=null&&(u=$a({inputs:{x:r},backend:a,attrs:{perm:o}}),d.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],C.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[l,p]=C.computeOutAndReduceShapes(u.shape,i),c=v.sizeFromShape(l),h=v.makeZerosTypedArray(c,"int32"),f=v.sizeFromShape(p),m=a.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let y=g*f,x=m[y],A=0;for(let b=0;b<f;++b){let w=m[y+b];w<x&&(x=w,A=b)}h[g]=A}return d.forEach(g=>a.disposeIntermediateTensorInfo(g)),a.makeTensorInfo(l,"int32",h)}var oP={kernelName:Sl,backendName:"cpu",kernelFunc:iP},lP=it(ei,e=>Math.asin(e)),uP={kernelName:ei,backendName:"cpu",kernelFunc:lP},dP=it(ti,e=>Math.asinh(e)),pP={kernelName:ti,backendName:"cpu",kernelFunc:dP},cP=it(ai,e=>Math.atan(e)),hP={kernelName:ai,backendName:"cpu",kernelFunc:cP},fP=Rt((e,t)=>Math.atan2(e,t)),mP=Lt(ri,fP),gP={kernelName:ri,backendName:"cpu",kernelFunc:mP},yP=it(ni,e=>Math.atanh(e)),xP={kernelName:ni,backendName:"cpu",kernelFunc:yP};function Qm(e,t,a,n,r,s){let i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,l=r.effectiveFilterHeight,p=r.effectiveFilterWidth,c=r.padInfo.top,h=r.padInfo.left,f=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=$e(r.outShape,a),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],A=r.outShape[3];for(let b=0;b<r.batchSize;++b){let w=b*y,S=b*n[0];for(let N=0;N<r.inChannels;++N)for(let T=0;T<r.outHeight;++T){let _=T*i-c,P=Math.max(0,_),E=Math.min(r.inHeight,l+_),I=w+T*x;for(let F=0;F<r.outWidth;++F){let $=F*o-h,z=Math.max(0,$),M=Math.min(r.inWidth,p+$),H=f,V=0,q=0;for(let B=P;B<E;B+=u){let K=S+B*n[1];for(let X=z;X<M;X+=d){let J=K+X*n[2],ee=e[J+N];s==="max"&&ee>H?H=ee:s==="avg"&&(V+=ee,q++)}if(isNaN(H))break}let G=I+F*A+N;g[G]=s==="avg"?V/q:H}}}return m}function Uv(e,t,a,n,r=!1,s=!1){let i=$e(n.outShape,"int32"),o=n.strideHeight,u=n.strideWidth,d=n.dilationHeight,l=n.dilationWidth,p=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=n.padInfo.top,f=n.padInfo.left,m=$e(t,a,e);for(let g=0;g<n.batchSize;++g)for(let y=0;y<n.inChannels;++y)for(let x=0;x<n.outHeight;++x){let A=x*o-h,b=A;for(;b<0;)b+=d;let w=Math.min(n.inHeight,p+A);for(let S=0;S<n.outWidth;++S){let N=S*u-f,T=N;for(;T<0;)T+=l;let _=Math.min(n.inWidth,c+N),P=Number.NEGATIVE_INFINITY,E=-1;for(let I=b;I<w;I+=d){let F=I-A;for(let $=T;$<_;$+=l){let z=$-N,M=m.get(g,I,$,y);M>P&&(P=M,r?E=s?((g*n.inHeight+I)*n.inWidth+$)*n.inChannels+y:(I*n.inWidth+$)*n.inChannels+y:E=F*c+z)}}i.set(E,g,x,S,y)}}return i}function Gv(e,t,a,n,r,s){let i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,d=r.dilationDepth,l=r.dilationHeight,p=r.dilationWidth,c=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=$e(r.outShape,a),b=A.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],T=r.outShape[4];for(let _=0;_<r.batchSize;++_){let P=_*w,E=_*n[0];for(let I=0;I<r.inChannels;++I)for(let F=0;F<r.outDepth;++F){let $=F*i-m,z=$;for(;z<0;)z+=d;let M=Math.min(r.inDepth,c+$),H=P+F*S;for(let V=0;V<r.outHeight;++V){let q=V*o-g,G=q;for(;G<0;)G+=l;let B=Math.min(r.inHeight,h+q),K=H+V*N;for(let X=0;X<r.outWidth;++X){let J=X*u-y,ee=J;for(;ee<0;)ee+=p;let ye=Math.min(r.inWidth,f+J),xe=K+X*T,le=x,Se=0,Re=0;for(let Oe=z;Oe<M;Oe+=d){let ot=E+Oe*n[1];for(let Xe=G;Xe<B;Xe+=l){let Ye=ot+Xe*n[2];for(let Fe=ee;Fe<ye;Fe+=p){let at=Ye+Fe*n[3],dt=e[at+I];if(s==="max"&&dt>le?le=dt:s==="avg"&&(Se+=dt,Re++),isNaN(le))break}if(isNaN(le))break}if(isNaN(le))break}let Me=xe+I;b[Me]=s==="avg"?Se/Math.max(Re,1):le}}}}return A}function AP(e,t){let a=$e(t.outShape,"int32"),n=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,d=t.effectiveFilterDepth,l=t.effectiveFilterHeight,p=t.effectiveFilterWidth,c=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let x=y*n-c,A=x;for(;A<0;)A+=i;let b=Math.min(t.inDepth,d+x);for(let w=0;w<t.outHeight;++w){let S=w*r-h,N=S;for(;N<0;)N+=o;let T=Math.min(t.inHeight,l+S);for(let _=0;_<t.outWidth;++_){let P=_*s-f,E=P;for(;E<0;)E+=u;let I=Math.min(t.inWidth,p+P),F=Number.NEGATIVE_INFINITY,$=-1;for(let z=A;z<b;z+=i){let M=z-x;for(let H=N;H<T;H+=o){let V=H-S;for(let q=E;q<I;q+=u){let G=q-P,B=e.get(m,z,H,q,g);B>=F&&(F=B,$=M*l*p+V*l+G)}}}a.set($,m,y,w,_,g)}}}return a}function bP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;ve(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,d=1;v.assert(C.eitherStridesOrDilationsAreOne(i,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let l=C.computePool2DInfo(r.shape,s,i,d,o,u),p;if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))p=Gn({inputs:{x:r},backend:a});else{let c=a.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=Qm(c,r.shape,r.dtype,h,l,"avg");p=a.makeTensorInfo(l.outShape,r.dtype,f.values)}return p}var vP={kernelName:si,backendName:"cpu",kernelFunc:bP};function wP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:d}=n;ve(r,"avgPool3d");let l=C.computePool3DInfo(r.shape,s,i,1,o,u,d),p=a.data.get(r.dataId).values,c=Gv(p,r.shape,r.dtype,v.computeStrides(r.shape),l,"avg");return a.makeTensorInfo(c.shape,"float32",c.values)}var kP={kernelName:Cl,backendName:"cpu",kernelFunc:wP};function IP(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:d}=n;ve([r,s],"avgPool3DGrad");let l=C.computePool3DInfo(s.shape,i,o,1,u,d),p=l.strideDepth,c=l.strideHeight,h=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,x=l.dilationHeight,A=l.dilationWidth,b=l.effectiveFilterDepth,w=l.effectiveFilterHeight,S=l.effectiveFilterWidth,N=b-1-l.padInfo.front,T=S-1-l.padInfo.left,_=w-1-l.padInfo.top,P=$e(s.shape,"float32"),E=1/(f*m*g),I=a.bufferSync(r);for(let F=0;F<l.batchSize;++F)for(let $=0;$<l.inChannels;++$)for(let z=0;z<l.inDepth;++z)for(let M=0;M<l.inHeight;++M)for(let H=0;H<l.inWidth;++H){let V=z-N,q=M-_,G=H-T,B=0;for(let K=0;K<b;K+=y){let X=(V+K)/p;if(!(X<0||X>=l.outDepth||Math.floor(X)!==X))for(let J=0;J<w;J+=x){let ee=(q+J)/c;if(!(ee<0||ee>=l.outHeight||Math.floor(ee)!==ee))for(let ye=0;ye<S;ye+=A){let xe=(G+ye)/h;if(xe<0||xe>=l.outWidth||Math.floor(xe)!==xe)continue;let le=I.get(F,X,ee,xe,$);B+=le}}}P.set(B*E,F,z,M,H,$)}return a.makeTensorInfo(P.shape,P.dtype,P.values)}var SP={kernelName:wd,backendName:"cpu",kernelFunc:IP};function CP(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s;ve([r,s],"avgPoolGrad");let{filterSize:o,strides:u,pad:d}=n,l=C.computePool2DInfo(i.shape,o,u,1,d),p=l.strideHeight,c=l.strideWidth,h=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,x=l.effectiveFilterWidth,A=x-1-l.padInfo.left,b=y-1-l.padInfo.top,w=$e(i.shape,"float32"),S=1/(h*f),N=a.data.get(r.dataId).values,T=$e(r.shape,"float32",N);for(let _=0;_<l.batchSize;++_)for(let P=0;P<l.inChannels;++P)for(let E=0;E<l.inHeight;++E)for(let I=0;I<l.inWidth;++I){let F=E-b,$=I-A,z=0;for(let M=0;M<y;M+=m){let H=(F+M)/p;if(!(H<0||H>=l.outHeight||Math.floor(H)!==H))for(let V=0;V<x;V+=g){let q=($+V)/c;if(q<0||q>=l.outWidth||Math.floor(q)!==q)continue;let G=T.get(_,H,q,P);z+=G}}w.set(z*S,_,E,I,P)}return a.makeTensorInfo(w.shape,w.dtype,w.values)}var NP={kernelName:vd,backendName:"cpu",kernelFunc:CP};function TP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,scale:s,offset:i,mean:o,variance:u}=t;v.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ve([r,o,u,s,i],"batchNorm");let{varianceEpsilon:d}=n;d==null&&(d=.001);let l=a.data.get(r.dataId).values,p=a.data.get(o.dataId).values,c=a.data.get(u.dataId).values,h=s?a.data.get(s.dataId).values:new Float32Array([1]),f=i?a.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=h.length,x=c.length,A=p.length,b=0,w=0,S=0,N=0;for(let T=0;T<l.length;++T)m[T]=f[b++]+(l[T]-p[w++])*h[S++]/Math.sqrt(c[N++]+d),b>=g&&(b=0),w>=A&&(w=0),S>=y&&(S=0),N>=x&&(N=0);return a.makeTensorInfo(r.shape,r.dtype,m)}var RP={kernelName:Ni,backendName:"cpu",kernelFunc:TP};function EP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n;ve([r],"batchToSpaceND");let o=s.reduce((y,x)=>y*x),u=C.getReshaped(r.shape,s,o),d=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(r.shape,s,o),p=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),h=mt({inputs:{x:r},backend:a,attrs:{shape:u}}),f=$a({inputs:{x:h},backend:a,attrs:{perm:d}}),m=mt({inputs:{x:f},backend:a,attrs:{shape:l}}),g=Us({inputs:{x:m},backend:a,attrs:{begin:p,size:c}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var _P={kernelName:Nl,backendName:"cpu",kernelFunc:EP};function $P(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i}=n,o=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,d=Vm(o,u,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}var MP={kernelName:oi,backendName:"cpu",kernelFunc:$P};function FP(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t,s=a.data.get(n.dataId).values,i=a.data.get(r.dataId).values,o=C.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var PP={kernelName:Rl,backendName:"cpu",kernelFunc:FP},OP=it(Qr,(e,t)=>{let a=t;return e>a.clipValueMax?a.clipValueMax:e<a.clipValueMin?a.clipValueMin:e}),DP={kernelName:Qr,backendName:"cpu",kernelFunc:OP},zP=e=>{let{x:t}=e.inputs,a=e.backend,n=new Float32Array(v.sizeFromShape(t.shape)),r=a.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=a.data.get(s.dataId).values,u=a.data.get(i.dataId).values;for(let d=0;d<o.length;d++){let l=o[d],p=u[d];n[d]=Math.hypot(l,p)}return a.makeOutput(n,t.shape,"float32")},LP={kernelName:Id,backendName:"cpu",kernelFunc:zP};function yl(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.data.get(n.dataId).complexTensorInfos.imag,s=a.data.get(r.dataId).values;return a.makeTensorInfo(r.shape,r.dtype,s)}var WP={kernelName:_d,backendName:"cpu",kernelFunc:yl};function xl(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,s=v.parseAxisParam(r,t[0].shape)[0],i=t.map(m=>m.shape);C.assertParamsConsistent(i,s);let o=C.computeOutShape(t.map(m=>m.shape),s);if(v.sizeFromShape(o)===0)return a.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(m=>v.sizeFromShape(m.shape)>0);if(u.length===1)return Gn({inputs:{x:u[0]},backend:a});if(u[0].dtype==="complex64"){let m=u.map(b=>Vs({inputs:{input:b},backend:a})),g=u.map(b=>yl({inputs:{input:b},backend:a})),y=xl({inputs:m,backend:a,attrs:{axis:s}}),x=xl({inputs:g,backend:a,attrs:{axis:s}}),A=Wa({inputs:{real:y,imag:x},backend:a});return m.forEach(b=>a.disposeIntermediateTensorInfo(b)),g.forEach(b=>a.disposeIntermediateTensorInfo(b)),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(x),A}let d=u.map(m=>{let g=[-1,v.sizeFromShape(m.shape.slice(s))];return mt({inputs:{x:m},backend:a,attrs:{shape:g}})}),l=d.map(m=>({vals:a.data.get(m.dataId).values,shape:m.shape}));o=C.computeOutShape(d.map(m=>m.shape),1);let p=d[0].shape[0]===1,c=Um(l,o,t[0].dtype,p),h=C.computeOutShape(u.map(m=>m.shape),s),f=a.makeTensorInfo(h,t[0].dtype,c);return d.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var BP={kernelName:El,backendName:"cpu",kernelFunc:xl};function Hv(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:d,dimRoundingMode:l}=n;ve([r,s],"conv2d");let p=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(r.shape,s.shape,i,d,o,l,!1,p),h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.padInfo.left,x=c.padInfo.top,A=c.dataFormat==="channelsLast",b=new Mt(c.outShape,r.dtype),w=v.computeStrides(r.shape),S=v.computeStrides(s.shape),N=w[0],T=A?w[1]:w[2],_=A?w[2]:1,P=A?1:w[1],E=b.strides[0],I=A?b.strides[1]:b.strides[2],F=A?b.strides[2]:1,$=A?1:b.strides[1],z=a.data.get(r.dataId).values,M=a.data.get(s.dataId).values,H=b.values;for(let V=0;V<c.batchSize;++V){let q=V*N,G=V*E;for(let B=0;B<c.outHeight;++B){let K=G+B*I,X=B*c.strideHeight-x;for(let J=0;J<h;++J){let ee=X+J*m;if(ee<0||ee>=c.inHeight)continue;let ye=J*S[0],xe=q+ee*T;for(let le=0;le<c.outWidth;++le){let Se=K+le*F,Re=le*c.strideWidth-y;for(let Me=0;Me<f;++Me){let Oe=Re+Me*g;if(Oe<0||Oe>=c.inWidth)continue;let ot=ye+Me*S[1],Xe=xe+Oe*_,Ye=ot;for(let Fe=0;Fe<c.inChannels;++Fe){let at=z[Xe+Fe*P];for(let dt=0;dt<c.outChannels;++dt)H[Se+dt*$]+=at*M[Ye+dt];Ye+=c.outChannels}}}}}}return a.makeTensorInfo(b.shape,b.dtype,H)}var VP={kernelName:di,backendName:"cpu",kernelFunc:Hv};function UP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:d,filterShape:l}=n;ve([r,s],"conv2dBackpropFilter");let p=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(r.shape,l,i,1,o,d,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=c,y=c.dataFormat==="channelsLast",x=new Mt(c.filterShape,"float32"),A=c.padInfo.left,b=c.padInfo.top,w=a.data.get(r.dataId).values,S=a.data.get(s.dataId).values,N=new Mt(r.shape,r.dtype,w),T=new Mt(s.shape,s.dtype,S);for(let _=0;_<m;++_){let P=Math.max(0,Math.ceil((b-_)/h)),E=Math.min(c.outHeight,(c.inHeight+b-_)/h);for(let I=0;I<g;++I){let F=Math.max(0,Math.ceil((A-I)/f)),$=Math.min(c.outWidth,(c.inWidth+A-I)/f);for(let z=0;z<c.inChannels;++z)for(let M=0;M<c.outChannels;++M){let H=0;for(let V=0;V<c.batchSize;++V)for(let q=P;q<E;++q){let G=_+q*h-b;for(let B=F;B<$;++B){let K=I+B*f-A;y?H+=N.get(V,G,K,z)*T.get(V,q,B,M):H+=N.get(V,z,G,K)*T.get(V,M,q,B)}}x.set(H,_,I,z,M)}}}return a.makeTensorInfo(x.shape,x.dtype,x.values)}var GP={kernelName:Sd,backendName:"cpu",kernelFunc:UP};function HP(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:d,dimRoundingMode:l}=n;ve([r,s],"conv2dBackpropInput");let p=v.computeStrides(s.shape),c=v.computeStrides(r.shape),h=C.convertConv2DDataFormat(d),f=C.computeConv2DInfo(i,s.shape,o,1,u,l,!1,h),m=new Mt(f.inShape,"float32"),g=m.values,y=a.data.get(r.dataId).values,x=a.data.get(s.dataId).values,[A,b,w]=p,{batchSize:S,filterHeight:N,filterWidth:T,inChannels:_,inHeight:P,inWidth:E,outChannels:I,outHeight:F,outWidth:$,strideHeight:z,strideWidth:M}=f;h=f.dataFormat;let H=N-1-f.padInfo.top,V=T-1-f.padInfo.left,q=h==="channelsLast",G=m.strides[0],B=q?m.strides[1]:m.strides[2],K=q?m.strides[2]:1,X=q?1:m.strides[1],J=c[0],ee=q?c[1]:c[2],ye=q?c[2]:1,xe=q?1:c[1];for(let le=0;le<S;++le)for(let Se=0;Se<_;++Se)for(let Re=0;Re<P;++Re){let Me=Re-H,Oe=Math.max(0,Math.ceil(Me/z)),ot=Math.min(F,(N+Me)/z);for(let Xe=0;Xe<E;++Xe){let Ye=Xe-V,Fe=Math.max(0,Math.ceil(Ye/M)),at=Math.min($,(T+Ye)/M),dt=0;for(let It=Oe;It<ot;++It){let ga=It*z-Me;for(let Xt=Fe;Xt<at;++Xt){let ya=Xt*M-Ye,rn=J*le+ee*It+ye*Xt,Fa=A*(N-1-ga)+b*(T-1-ya)+w*Se;for(let xa=0;xa<I;++xa){let Kt=y[rn+xe*xa],qa=x[Fa+xa];dt+=Kt*qa}}}let Ma=G*le+B*Re+K*Xe+X*Se;g[Ma]=dt}}return a.makeTensorInfo(m.shape,m.dtype,m.values)}var jP={kernelName:pi,backendName:"cpu",kernelFunc:HP};function qP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n;ve([r,s],"conv3d");let d=C.computeConv3DInfo(r.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:p,filterWidth:c,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=d,y=g.front,x=g.left,A=g.top,b=new Mt(d.outShape,r.dtype),w=a.data.get(r.dataId).values,S=a.data.get(s.dataId).values,N=b.values,T=v.computeStrides(r.shape),_=v.computeStrides(s.shape);for(let P=0;P<d.batchSize;++P){let E=P*T[0],I=P*b.strides[0];for(let F=0;F<d.outDepth;++F){let $=I+F*b.strides[1],z=F*d.strideDepth-y;for(let M=0;M<l;++M){let H=z+M*h;if(H<0||H>=d.inDepth)continue;let V=M*_[0],q=E+H*T[1];for(let G=0;G<d.outHeight;++G){let B=$+G*b.strides[2],K=G*d.strideHeight-A;for(let X=0;X<p;++X){let J=K+X*f;if(J<0||J>=d.inHeight)continue;let ee=V+X*_[1],ye=q+J*T[2];for(let xe=0;xe<d.outWidth;++xe){let le=B+xe*d.outChannels,Se=xe*d.strideWidth-x;for(let Re=0;Re<c;++Re){let Me=Se+Re*m;if(Me<0||Me>=d.inWidth)continue;let Oe=ee+Re*_[2],ot=ye+Me*d.inChannels,Xe=Oe;for(let Ye=0;Ye<d.inChannels;++Ye){let Fe=w[ot+Ye];for(let at=0;at<d.outChannels;++at)N[le+at]+=Fe*S[Xe+at];Xe+=d.outChannels}}}}}}}}return a.makeTensorInfo(b.shape,b.dtype,b.values)}var XP={kernelName:ci,backendName:"cpu",kernelFunc:qP};function KP(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=n;ve([r,s],"conv3dBackpropFilterV2");let d=v.computeStrides(r.shape),l=v.computeStrides(s.shape),p=C.computeConv3DInfo(r.shape,u,i,1,o),c=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,x=new Mt(p.filterShape,"float32"),A=x.values,[b,w,S,N]=x.strides,T=a.data.get(s.dataId).values,[_,P,E,I]=l,F=a.data.get(r.dataId).values,[$,z,M,H]=d,V=p.padInfo.front,q=p.padInfo.left,G=p.padInfo.top;for(let B=0;B<m;++B){let K=Math.max(0,Math.ceil((V-B)/c)),X=Math.min(p.outDepth,(p.inDepth+V-B)/c),J=B*b;for(let ee=0;ee<g;++ee){let ye=Math.max(0,Math.ceil((G-ee)/h)),xe=Math.min(p.outHeight,(p.inHeight+G-ee)/h),le=ee*w+J;for(let Se=0;Se<y;++Se){let Re=Math.max(0,Math.ceil((q-Se)/f)),Me=Math.min(p.outWidth,(p.inWidth+q-Se)/f),Oe=Se*S+le;for(let ot=0;ot<p.inChannels;++ot){let Xe=ot*N+Oe;for(let Ye=0;Ye<p.outChannels;++Ye){let Fe=0;for(let at=0;at<p.batchSize;++at){let dt=at*$,Ma=at*_;for(let It=K;It<X;++It){let ga=(B+It*c-V)*z+dt,Xt=It*P+Ma;for(let ya=ye;ya<xe;++ya){let rn=(ee+ya*h-G)*M+ga,Fa=ya*E+Xt;for(let xa=Re;xa<Me;++xa){let Kt=(Se+xa*f-q)*H+rn,qa=xa*I+Fa;Fe+=F[Kt+ot]*T[qa+Ye]}}}}A[Xe+Ye]=Fe}}}}}return a.makeTensorInfo(x.shape,x.dtype,x.values)}var YP={kernelName:_l,backendName:"cpu",kernelFunc:KP};function ZP(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=n;ve([r],"conv3dBackpropInputV2");let d=v.computeStrides(r.shape),l=v.computeStrides(s.shape),p=C.computeConv3DInfo(u,s.shape,o,1,i),c=new Mt(p.inShape,"float32"),h=c.values,[f,m,g,y]=c.strides,x=a.data.get(r.dataId).values,[A,b,w,S]=d,N=a.data.get(s.dataId).values,[T,_,P,E]=l,{batchSize:I,filterDepth:F,filterHeight:$,filterWidth:z,inChannels:M,inDepth:H,inHeight:V,inWidth:q,outChannels:G,outDepth:B,outHeight:K,outWidth:X,strideDepth:J,strideHeight:ee,strideWidth:ye}=p,xe=F-1-p.padInfo.front,le=$-1-p.padInfo.top,Se=z-1-p.padInfo.left;for(let Re=0;Re<I;++Re)for(let Me=0;Me<M;++Me)for(let Oe=0;Oe<H;++Oe){let ot=Oe-xe,Xe=Math.max(0,Math.ceil(ot/J)),Ye=Math.min(B,(F+ot)/J);for(let Fe=0;Fe<V;++Fe){let at=Fe-le,dt=Math.max(0,Math.ceil(at/ee)),Ma=Math.min(K,($+at)/ee);for(let It=0;It<q;++It){let ga=It-Se,Xt=Math.max(0,Math.ceil(ga/ye)),ya=Math.min(X,(z+ga)/ye),rn=0;for(let Fa=Xe;Fa<Ye;++Fa){let xa=Fa*J-ot;for(let Kt=dt;Kt<Ma;++Kt){let qa=Kt*ee-at;for(let Ar=Xt;Ar<ya;++Ar){let vu=Ar*ye-ga,qn=A*Re+b*Fa+w*Kt+S*Ar,wu=T*(F-1-xa)+_*($-1-qa)+P*(z-1-vu)+E*Me;for(let Fn=0;Fn<G;++Fn){let br=x[qn+Fn],Yt=N[wu+Fn];rn+=br*Yt}}}}h[f*Re+m*Oe+g*Fe+y*It+Me]=rn}}}return a.makeTensorInfo(c.shape,c.dtype,c.values)}var JP={kernelName:hi,backendName:"cpu",kernelFunc:ZP},QP=it("Cos",e=>Math.cos(e)),eO={kernelName:"Cos",backendName:"cpu",kernelFunc:QP},tO=it(fi,e=>Math.cosh(e)),aO={kernelName:fi,backendName:"cpu",kernelFunc:tO};function nO(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:d}=n,[l,p,c,h]=r.shape,f=s.shape[0],[m,g]=o,y=$e([f,m,g,h],"float32"),x=a.data.get(s.dataId).values,A=a.data.get(i.dataId).values,b=a.data.get(r.dataId).values,w=v.computeStrides(r.shape),S=v.computeStrides(y.shape);for(let N=0;N<f;N++){let T=N*4,_=x[T],P=x[T+1],E=x[T+2],I=x[T+3],F=A[N];if(F>=l)continue;let $=m>1?(E-_)*(p-1)/(m-1):0,z=g>1?(I-P)*(c-1)/(g-1):0;for(let M=0;M<m;M++){let H=m>1?_*(p-1)+M*$:.5*(_+E)*(p-1);if(H<0||H>p-1){for(let V=0;V<g;V++)for(let q=0;q<h;q++){let G=q+V*S[2]+M*S[1]+N*S[0];y.values[G]=d}continue}if(u==="bilinear"){let V=Math.floor(H),q=Math.ceil(H),G=H-V;for(let B=0;B<g;B++){let K=g>1?P*(c-1)+B*z:.5*(P+I)*(c-1);if(K<0||K>c-1){for(let ye=0;ye<h;ye++){let xe=ye+B*S[2]+M*S[1]+N*S[0];y.values[xe]=d}continue}let X=Math.floor(K),J=Math.ceil(K),ee=K-X;for(let ye=0;ye<h;ye++){let xe=ye+X*w[2]+V*w[1]+F*w[0],le=b[xe];xe=ye+J*w[2]+V*w[1]+F*w[0];let Se=b[xe];xe=ye+X*w[2]+q*w[1]+F*w[0];let Re=b[xe];xe=ye+J*w[2]+q*w[1]+F*w[0];let Me=b[xe],Oe=le+(Se-le)*ee,ot=Re+(Me-Re)*ee;xe=ye+B*S[2]+M*S[1]+N*S[0],y.values[xe]=Oe+(ot-Oe)*G}}}else for(let V=0;V<g;++V){let q=g>1?P*(c-1)+V*z:.5*(P+I)*(c-1);if(q<0||q>c-1){for(let K=0;K<h;K++){let X=K+V*S[2]+M*S[1]+N*S[0];y.values[X]=d}continue}let G=Math.round(q),B=Math.round(H);for(let K=0;K<h;K++){let X=K+G*w[2]+B*w[1]+F*w[0],J=K+V*S[2]+M*S[1]+N*S[0];y.values[J]=b[X]}}}}return a.makeTensorInfo(y.shape,y.dtype,y.values)}var rO={kernelName:yi,backendName:"cpu",kernelFunc:nO};function sO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;ve(r,"cumprod");let u=C.getAxesPermutation([s],r.shape.length),d=r;u!=null&&(d=$a({inputs:{x:r},backend:a,attrs:{perm:u}}));let l=C.getInnerMostAxes(1,r.shape.length)[0];if(l!==d.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${l}`);let p=ea(d.dtype,"int32"),c=v.makeOnesTypedArray(v.sizeFromShape(d.shape),p),h=a.data.get(d.dataId).values,f=d.shape[d.shape.length-1],m=o?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)c[A]=i?1:h[A];else{let b=m(y,x-1);c[A]=i?h[b]*c[b]:h[A]*c[b]}}let g=a.makeTensorInfo(d.shape,p,c);if(u!=null){let y=C.getUndoAxesPermutation(u),x=$a({inputs:{x:g},backend:a,attrs:{perm:y}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(d),x}return g}var iO={kernelName:mi,backendName:"cpu",kernelFunc:sO};function oO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;ve(r,"cumsum");let u=C.getAxesPermutation([s],r.shape.length),d=r;u!=null&&(d=$a({inputs:{x:r},backend:a,attrs:{perm:u}}));let l=C.getInnerMostAxes(1,r.shape.length)[0];if(l!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${l}`);let p=ea(d.dtype,"int32"),c=v.makeZerosTypedArray(v.sizeFromShape(d.shape),p),h=a.data.get(d.dataId).values,f=d.shape[d.shape.length-1],m=o?(y,x)=>y+f-x-1:(y,x)=>y+x;for(let y=0;y<h.length;y+=f)for(let x=0;x<f;x++){let A=m(y,x);if(x===0)c[A]=i?0:h[A];else{let b=m(y,x-1);c[A]=i?h[b]+c[b]:h[A]+c[b]}}let g=a.makeTensorInfo(d.shape,p,c);if(u!=null){let y=C.getUndoAxesPermutation(u),x=$a({inputs:{x:g},backend:a,attrs:{perm:y}});return a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(d),x}return g}var lO={kernelName:gi,backendName:"cpu",kernelFunc:oO};function uO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=n;if(r.shape.length===1){let u=a.data.get(r.dataId).values,d=a.data.get(s.dataId).values,l=Vm(u,d,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,l)}else if(r.shape.length===2){let u=a.bufferSync(r),d=a.bufferSync(s),l=Q1(u,d,i,o);return a.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var dO={kernelName:$l,backendName:"cpu",kernelFunc:uO};function pO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:s,dataFormat:i}=n;v.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=r.shape[0],u=r.shape[1],d=r.shape[2],l=r.shape[3],p=u*s,c=d*s,h=l/(s*s),f=a.data.get(r.dataId).values,m=new Float32Array(o*p*c*h),g=0;for(let y=0;y<o;++y)for(let x=0;x<p;++x){let A=Math.floor(x/s),b=x%s;for(let w=0;w<c;++w){let S=Math.floor(w/s),N=w%s,T=(b*s+N)*h;for(let _=0;_<h;++_){let P=_+T+l*(S+d*(A+u*y));m[g++]=f[P]}}}return a.makeTensorInfo([o,p,c,h],r.dtype,m)}var cO={kernelName:xi,backendName:"cpu",kernelFunc:pO};function jv(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:d}=n;ve([r,s],"depthwiseConv2DNative");let l=v.computeStrides(r.shape),p=v.computeStrides(s.shape),c=u;c==null&&(c=[1,1]),v.assert(C.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let h=C.computeConv2DInfo(r.shape,s.shape,i,c,o,d,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:x}=h,A=x.left,b=x.top,w=h.outChannels/h.inChannels,S=new Mt(h.outShape,r.dtype),N=a.data.get(r.dataId).values,T=a.data.get(s.dataId).values,_=S.values;for(let P=0;P<h.batchSize;++P){let E=P*l[0],I=P*S.strides[0];for(let F=0;F<h.outHeight;++F){let $=I+F*S.strides[1],z=F*h.strideHeight-b;for(let M=0;M<f;++M){let H=z+M*g;if(H<0||H>=h.inHeight)continue;let V=M*p[0],q=E+H*l[1];for(let G=0;G<h.outWidth;++G){let B=$+G*S.strides[2],K=G*h.strideWidth-A;for(let X=0;X<m;++X){let J=K+X*y;if(J<0||J>=h.inWidth)continue;let ee=V+X*p[1],ye=q+J*h.inChannels,xe=B,le=ee;for(let Se=0;Se<h.inChannels;++Se){let Re=N[ye+Se];for(let Me=0;Me<w;++Me)_[xe+Me]+=Re*T[le+Me];xe+=w,le+=w}}}}}}return a.makeTensorInfo(S.shape,S.dtype,S.values)}var hO={kernelName:Ai,backendName:"cpu",kernelFunc:jv};function fO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:d,filterShape:l}=n;ve([r,s],"depthwiseConv2dNativeBackpropFilter");let p=C.computeConv2DInfo(r.shape,l,i,o,u,d,!0),{strideHeight:c,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new Mt(p.filterShape,"float32"),y=p.padInfo.left,x=p.padInfo.top,A=p.outChannels/p.inChannels,b=a.data.get(r.dataId).values,w=new Mt(r.shape,r.dtype,b),S=a.data.get(s.dataId).values,N=new Mt(s.shape,s.dtype,S);for(let T=0;T<f;++T){let _=Math.max(0,Math.ceil((x-T)/c)),P=Math.min(p.outHeight,(p.inHeight+x-T)/c);for(let E=0;E<m;++E){let I=Math.max(0,Math.ceil((y-E)/h)),F=Math.min(p.outWidth,(p.inWidth+y-E)/h);for(let $=0;$<p.outChannels;++$){let z=Math.trunc($/A),M=$%A,H=0;for(let V=0;V<p.batchSize;++V)for(let q=_;q<P;++q){let G=T+q*c-x;for(let B=I;B<F;++B){let K=E+B*h-y;H+=w.get(V,G,K,z)*N.get(V,q,B,$)}}g.set(H,T,E,z,M)}}}return a.makeTensorInfo(g.shape,g.dtype,g.values)}var mO={kernelName:Cd,backendName:"cpu",kernelFunc:fO};function gO(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:d,inputShape:l}=n;ve([r,s],"depthwiseConv2DNativeBackpropInput");let p=v.computeStrides(r.shape),c=v.computeStrides(s.shape),h=C.computeConv2DInfo(l,s.shape,i,o,u,d,!0),f=new Mt(h.inShape,"float32"),m=f.values,[g,y,x]=f.strides,A=a.data.get(r.dataId).values,[b,w,S]=p,N=a.data.get(s.dataId).values,[T,_,P]=c,{batchSize:E,filterHeight:I,filterWidth:F,inChannels:$,inHeight:z,inWidth:M,outChannels:H,outHeight:V,outWidth:q,strideHeight:G,strideWidth:B}=h,K=I-1-h.padInfo.top,X=F-1-h.padInfo.left,J=H/$;for(let ee=0;ee<E;++ee)for(let ye=0;ye<$;++ye)for(let xe=0;xe<z;++xe){let le=xe-K,Se=Math.max(0,Math.ceil(le/G)),Re=Math.min(V,(I+le)/G);for(let Me=0;Me<M;++Me){let Oe=Me-X,ot=Math.max(0,Math.ceil(Oe/B)),Xe=Math.min(q,(F+Oe)/B),Ye=0;for(let Fe=Se;Fe<Re;++Fe){let at=Fe*G-le;for(let dt=ot;dt<Xe;++dt){let Ma=dt*B-Oe,It=b*ee+w*Fe+S*dt,ga=T*(I-1-at)+_*(F-1-Ma)+P*ye;for(let Xt=0;Xt<J;++Xt){let ya=ye*J+Xt,rn=A[It+ya],Fa=N[ga+Xt];Ye+=rn*Fa}}}m[g*ee+y*xe+x*Me+ye]=Ye}}return a.makeTensorInfo(f.shape,f.dtype,f.values)}var yO={kernelName:Nd,backendName:"cpu",kernelFunc:gO};function xO(e){let{inputs:t,backend:a}=e,{x:n}=t,r=v.sizeFromShape(n.shape),s=a.data.get(n.dataId).values,i=$e([r,r],n.dtype),o=i.values;for(let d=0;d<s.length;d++)o[d*r+d]=s[d];let u=[...n.shape,...n.shape];return a.makeTensorInfo(u,i.dtype,i.values)}var AO={kernelName:Ml,backendName:"cpu",kernelFunc:xO},bO={kernelName:bi,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r}=e,{strides:s,pad:i,dilations:o}=a,u=t,d=u.data.get(n.dataId).values,l=n.shape.length,p=u.data.get(r.dataId).values,c=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:x,padInfo:A,strideHeight:b,strideWidth:w,filterHeight:S,filterWidth:N,dilationHeight:T,dilationWidth:_,outShape:P}=C.computeDilation2DInfo(n.shape,r.shape,s,i,"NHWC",o),E=v.sizeFromShape(P),I=P.length,F=v.getArrayFromDType(n.dtype,E);for(let $=0;$<h;++$)for(let z=0;z<y;++z){let M=z*b-A.top;for(let H=0;H<x;++H){let V=H*w-A.left;for(let q=0;q<g;++q){let G=Number.MIN_SAFE_INTEGER;for(let K=0;K<S;++K){let X=M+K*T;if(X>=0&&X<f)for(let J=0;J<N;++J){let ee=V+J*_;if(ee>=0&&ee<m){let ye=v.locToIndex([$,X,ee,q],l,v.computeStrides(n.shape)),xe=v.locToIndex([K,J,q],c,v.computeStrides(r.shape)),le=d[ye]+p[xe];le>G&&(G=le)}}}let B=v.locToIndex([$,z,H,q],I,v.computeStrides(P));F[B]=G}}}return{dataId:u.write(v.toTypedArray(F,n.dtype),P,n.dtype),shape:P,dtype:n.dtype}}},vO={kernelName:ul,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r,dy:s}=e,{strides:i,pad:o,dilations:u}=a,d=t,l=v.toNestedArray(n.shape,d.data.get(n.dataId).values),p=v.toNestedArray(r.shape,d.data.get(r.dataId).values),{batchSize:c,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:_}=C.computeDilation2DInfo(n.shape,r.shape,i,o,"NHWC",u);v.assert(s.rank===_.length,()=>`Error in ${ul}, dy must have the same rank as output ${_.length}, but got ${s.rank}`);let P=v.toNestedArray(_,d.data.get(s.dataId).values),E=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let I=0;I<c;++I)for(let F=0;F<g;++F){let $=F*A-x.top;for(let z=0;z<y;++z){let M=z*b-x.left;for(let H=0;H<m;++H){let V=Number.MIN_SAFE_INTEGER,q=0,G=0;for(let B=0;B<w;++B){let K=$+B*N;if(K>=0&&K<h)for(let X=0;X<S;++X){let J=M+X*T;if(J>=0&&J<f){let ee=l[I][K][J][H]+p[B][X][H];ee>V&&(V=ee,q=B,G=X)}}}E[q][G][H]+=P[I][F][z][H]}}}return{dataId:d.write(v.toTypedArray(E,n.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},wO={kernelName:ll,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:a})=>{let{x:n,filter:r,dy:s}=e,{strides:i,pad:o,dilations:u}=a,d=t,l=v.toNestedArray(n.shape,d.data.get(n.dataId).values),p=v.toNestedArray(r.shape,d.data.get(r.dataId).values),{batchSize:c,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:x,strideHeight:A,strideWidth:b,filterHeight:w,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:_}=C.computeDilation2DInfo(n.shape,r.shape,i,o,"NHWC",u);v.assert(s.rank===_.length,()=>`Error in ${ll}, dy must have the same rank as output ${_.length}, but got ${s.rank}`);let P=v.toNestedArray(_,d.data.get(s.dataId).values),E=v.makeZerosNestedTypedArray(n.shape,n.dtype);for(let I=0;I<c;++I)for(let F=0;F<g;++F){let $=F*A-x.top;for(let z=0;z<y;++z){let M=z*b-x.left;for(let H=0;H<m;++H){let V=Number.MIN_SAFE_INTEGER,q=$<0?0:$,G=M<0?0:M;for(let B=0;B<w;++B){let K=$+B*N;if(K>=0&&K<h)for(let X=0;X<S;++X){let J=M+X*T;if(J>=0&&J<f){let ee=l[I][K][J][H]+p[B][X][H];ee>V&&(V=ee,q=K,G=J)}}}E[I][q][G][H]+=P[I][F][z][H]}}}return{dataId:d.write(v.toTypedArray(E,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function kO(e){let{inputs:t,backend:a,attrs:n}=e,{image:r}=t,{canvas:s,options:i}=n,{contextOptions:o,imageOptions:u}=i||{},d=(u==null?void 0:u.alpha)||1,l=(o==null?void 0:o.contextType)||"2d";if(l!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let p=s.getContext(l,(o==null?void 0:o.contextAttributes)||{});if(p==null)throw new Error(`Could not get the context with ${l} type.`);let[c,h]=r.shape.slice(0,2),f=r.shape.length===2?1:r.shape[2],m=a.data.get(r.dataId).values,g=r.dtype==="float32"?255:1,y=new Uint8ClampedArray(h*c*4);for(let A=0;A<c*h;++A){let b=[0,0,0,255*d];for(let S=0;S<f;S++){let N=m[A*f+S];if(r.dtype==="float32"){if(N<0||N>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${N}.`)}else if(r.dtype==="int32"&&(N<0||N>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${N}.`);f===1?(b[0]=N*g,b[1]=N*g,b[2]=N*g):b[S]=N*g}let w=A*4;y[w+0]=Math.round(b[0]),y[w+1]=Math.round(b[1]),y[w+2]=Math.round(b[2]),y[w+3]=Math.round(b[3])}s.width=h,s.height=c;let x=new ImageData(y,h,c);return p.putImageData(x,0,0),r}var IO={kernelName:Td,backendName:"cpu",kernelFunc:kO};function tp(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;ve(r,"sum");let o;r.dtype==="bool"?o=Kr({inputs:{x:r},backend:a,attrs:{dtype:"int32"}}):o=Gn({inputs:{x:r},backend:a});let u=o.shape.length,d=v.parseAxisParam(s,o.shape),l=C.getAxesPermutation(d,u),p=d,c=o;l!=null&&(c=$a({inputs:{x:o},backend:a,attrs:{perm:l}}),p=C.getInnerMostAxes(p.length,u)),C.assertAxesAreInnerMostDims("sum",p,c.shape.length);let[h,f]=C.computeOutAndReduceShapes(c.shape,p),m=C.upcastType(c.dtype,"int32"),g=bc(a,h,m),y=v.sizeFromShape(f),x=a.data.get(g.dataId).values,A=a.data.get(c.dataId).values;for(let b=0;b<x.length;++b){let w=b*y,S=0;for(let N=0;N<y;++N)S+=A[w+N];x[b]=S}if(i){let b=C.expandShapeToKeepDim(g.shape,d),w=g;g=mt({inputs:{x:g},backend:a,attrs:{shape:b}}),a.disposeIntermediateTensorInfo(w)}return a.disposeIntermediateTensorInfo(o),l!=null&&a.disposeIntermediateTensorInfo(c),g}var SO={kernelName:"Sum",backendName:"cpu",kernelFunc:tp};function CO(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,s=t,{allDims:i,summedDims:o,idDims:u}=C.decodeEinsumEquation(r,s.length);C.checkEinsumDimSizes(i.length,u,s);let{path:d,steps:l}=C.getEinsumComputePath(o,u),p=l.length,c=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of l[m]){let{permutationIndices:y,expandDims:x}=C.getEinsumPermutation(h,u[g]),A;C.isIdentityPermutation(y)?A=s[g]:(A=$a({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=mt({inputs:{x:A},backend:a,attrs:{shape:b}}),f.push(A)),c===null?c=A:(c=dh({inputs:{a:A,b:c},backend:a}),f.push(c))}m<p-1&&(d[m]>=0&&(c=tp({inputs:{x:c},backend:a,attrs:{axis:d[m]-(i.length-h),keepDims:!1}}),f.push(c)),h--)}for(let m of f)m!==c&&a.disposeIntermediateTensorInfo(m);return c}var NO={kernelName:Rd,backendName:"cpu",kernelFunc:CO};function TO(e){let{inputs:t,backend:a}=e,{dy:n,y:r}=t;ve([n,r],"eluGrad");let s=new Float32Array(v.sizeFromShape(r.shape)),i=a.data.get(r.dataId).values,o=a.data.get(n.dataId).values;for(let u=0;u<i.length;++u){let d=i[u];d>=0?s[u]=o[u]:s[u]=o[u]*(d+1)}return a.makeTensorInfo(r.shape,"float32",s)}var RO={kernelName:Fl,backendName:"cpu",kernelFunc:TO},EO=C.ERF_P,_O=C.ERF_A1,$O=C.ERF_A2,MO=C.ERF_A3,FO=C.ERF_A4,PO=C.ERF_A5,OO=it("Erf",e=>{let t=Math.sign(e),a=Math.abs(e),n=1/(1+EO*a);return t*(1-((((PO*n+FO)*n+MO)*n+$O)*n+_O)*n*Math.exp(-a*a))}),DO={kernelName:"Erf",backendName:"cpu",kernelFunc:OO};function kc(e){let{inputs:t,backend:a,attrs:n}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice(),u=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),mt({inputs:{x:r},backend:a,attrs:{shape:o}})}var zO={kernelName:Pl,backendName:"cpu",kernelFunc:kc},LO=Rt((e,t)=>e/t),e2=Lt(vi,LO),Jf={kernelName:vi,backendName:"cpu",kernelFunc:e2};function qv(e,t,a){let n=e.shape,r=n[0],s=n[1],i=a.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,d=[r,s],l=v.sizeFromShape(d),p=v.getTypedArrayFromDType("float32",l),c=v.getTypedArrayFromDType("float32",l);for(let g=0;g<r;g++){let y=Us({inputs:{x:o},backend:a,attrs:{begin:[g,0],size:[1,s]}}),x=Us({inputs:{x:u},backend:a,attrs:{begin:[g,0],size:[1,s]}}),A=Wa({inputs:{real:y,imag:x},backend:a}),{real:b,imag:w}=WO(A,t,a),S=C.mergeRealAndImagArrays(b,w);for(let N=0;N<s;N++){let T=C.getComplexWithIndex(S,N);p[g*s+N]=T.real,c[g*s+N]=T.imag}a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(A)}let h=a.makeTensorInfo(d,"float32",p),f=a.makeTensorInfo(d,"float32",c),m=Wa({inputs:{real:h,imag:f},backend:a});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),m}function WO(e,t,a){let n=v.sizeFromShape(e.shape),r=a.data.get(e.dataId),s=a.data.get(r.complexTensorInfos.real.dataId).values,i=a.data.get(r.complexTensorInfos.imag.dataId).values;if(BO(n)){let o=Qf(s,i,n,t,a),u=[e.shape[0],e.shape[1]];if(t){let d=a.makeTensorInfo(u,"float32",o.real),l=a.makeTensorInfo(u,"float32",o.imag),p=a.makeTensorInfo([],"float32",v.createScalarValue(n,"float32")),c=Gn({inputs:{x:p},backend:a}),h=Jf.kernelFunc({inputs:{a:d,b:p},backend:a}),f=Jf.kernelFunc({inputs:{a:l,b:c},backend:a}),m=a.data.get(h.dataId).values,g=a.data.get(f.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=C.mergeRealAndImagArrays(s,i),u=VO(o,n,t);return C.splitRealAndImagArrays(u)}}function BO(e){return(e&e-1)===0}function Qf(e,t,a,n,r){if(a===1)return{real:e,imag:t};let s=C.mergeRealAndImagArrays(e,t),i=a/2,o=C.complexWithEvenIndex(s),u=o.real,d=o.imag,l=[u.length],p=r.makeTensorInfo(l,"float32",u),c=r.makeTensorInfo(l,"float32",d),h=Wa({inputs:{real:p,imag:c},backend:r}),f=C.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],x=r.makeTensorInfo(y,"float32",m),A=r.makeTensorInfo(y,"float32",g),b=Wa({inputs:{real:x,imag:A},backend:r}),w=Qf(u,d,i,n,r),S=w.real,N=w.imag,T=[S.length],_=r.makeTensorInfo(T,"float32",S),P=r.makeTensorInfo(T,"float32",N),E=Wa({inputs:{real:_,imag:P},backend:r}),I=Qf(m,g,i,n,r),F=I.real,$=I.imag,z=[F.length],M=r.makeTensorInfo(z,"float32",F),H=r.makeTensorInfo(z,"float32",$),V=Wa({inputs:{real:M,imag:H},backend:r}),q=C.exponents(a,n),G=[q.real.length],B=r.makeTensorInfo(G,"float32",q.real),K=r.makeTensorInfo(G,"float32",q.imag),X=Wa({inputs:{real:B,imag:K},backend:r}),J=dh({inputs:{a:X,b:V},backend:r}),ee=gl({inputs:{a:E,b:J},backend:r}),ye=Zm({inputs:{a:E,b:J},backend:r}),xe=Vs({inputs:{input:ee},backend:r}),le=Vs({inputs:{input:ye},backend:r}),Se=yl({inputs:{input:ee},backend:r}),Re=yl({inputs:{input:ye},backend:r}),Me=xl({inputs:[xe,le],backend:r,attrs:{axis:0}}),Oe=xl({inputs:[Se,Re],backend:r,attrs:{axis:0}}),ot=r.data.get(Me.dataId).values,Xe=r.data.get(Oe.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(ye),r.disposeIntermediateTensorInfo(xe),r.disposeIntermediateTensorInfo(Se),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Me),r.disposeIntermediateTensorInfo(Oe),{real:ot,imag:Xe}}function VO(e,t,a){let n=new Float32Array(t*2);for(let r=0;r<t;r++){let s=0,i=0;for(let o=0;o<t;o++){let u=C.exponent(r*o,t,a),d=C.getComplexWithIndex(e,o);s+=d.real*u.real-d.imag*u.imag,i+=d.real*u.imag+d.imag*u.real}a&&(s/=t,i/=t),C.assignToTypedArray(n,s,i,r)}return n}function UO(e){let{inputs:t,backend:a}=e,{input:n}=t,r=v.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=r/s,o=mt({inputs:{x:n},backend:a,attrs:{shape:[i,s]}}),u=qv(o,!1,a),d=mt({inputs:{x:u},backend:a,attrs:{shape:n.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(u),d}var GO={kernelName:"FFT",backendName:"cpu",kernelFunc:UO};function t2(e){let{backend:t,attrs:a}=e,{shape:n,value:r,dtype:s}=a,i=s||v.inferDtype(r),o=v.getArrayFromDType(i,v.sizeFromShape(n));return jO(o,r),t.makeTensorInfo(n,i,o)}var HO={kernelName:Ol,backendName:"cpu",kernelFunc:t2};function jO(e,t,a){e.fill(t)}var qO={kernelName:Ii,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,r=a,s=v.getTypedArrayFromDType(n.dtype,v.sizeFromShape(n.shape)),[i,o,u,d]=n.shape,l=r.data.get(n.dataId).values;for(let p=0;p<i;p++){let c=p*u*o*d;for(let h=0;h<o;h++){let f=h*(u*d);for(let m=0;m<u;m++){let g=m*d;for(let y=0;y<d;y++){let x=Math.round(u-m-1),A=c+f+g+y,b=l[A];if(x>=0&&x<u){let w=x*d,S=c+f+w+y;b=l[S]}s[A]=b}}}}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function XO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dataFormat:l,dilations:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=n,m=Hv({inputs:{x:r,filter:s},backend:a,attrs:{strides:u,pad:d,dataFormat:l,dilations:p,dimRoundingMode:c}});if(i){let g=m;if(l==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=mt({inputs:{x:i},backend:a,attrs:{shape:[i.shape[0],1,1]}});m=gl({inputs:{a:m,b:y},backend:a}),a.disposeIntermediateTensorInfo(y)}else m=gl({inputs:{a:m,b:i},backend:a});a.disposeIntermediateTensorInfo(g)}if(h){let g=m;if(l==="NCHW"&&h==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=mt({inputs:{x:o},backend:a,attrs:{shape:[o.shape[0],1,1]}});m=wc(a,m,h,y,f),a.disposeIntermediateTensorInfo(y)}else m=wc(a,m,h,o,f);a.disposeIntermediateTensorInfo(g)}return m}var KO={kernelName:Vr,backendName:"cpu",kernelFunc:XO};function YO(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dataFormat:l,dilations:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=n,m=jv({inputs:{x:r,filter:s},backend:a,attrs:{strides:u,pad:d,dataFormat:l,dilations:p,dimRoundingMode:c}});if(i){let g=m;m=gl({inputs:{a:m,b:i},backend:a}),a.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=wc(a,m,h,o,f),a.disposeIntermediateTensorInfo(g)}return m}var ZO={kernelName:Ur,backendName:"cpu",kernelFunc:YO};function JO(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,s=v.sizeFromShape(n.shape),i=r.shape,o=i[i.length-1],[u,d,l,p]=C.prepareAndValidate(n,r);if(d===0)return a.makeTensorInfo(u,n.dtype,[]);let c=a.data.get(r.dataId).values,h=a.bufferSync(n),f=uv(c,h,n.dtype,d,o,l,p,n.shape,s);return a.makeTensorInfo(u,n.dtype,f.values)}var QO={kernelName:Ti,backendName:"cpu",kernelFunc:JO};function eD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=n;ve([r,s],"gatherV2");let u=v.parseAxisParam(i,r.shape)[0],d=a.data.get(s.dataId).values,l=r.shape[u];for(let b=0;b<d.length;++b){let w=d[b];v.assert(w<=l-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${l-1}]`)}let p=o;o==null&&(p=0);let c=v.sizeFromShape(s.shape),h=C.segment_util.collectGatherOpShapeInfo(r,s,u,p),f=mt({inputs:{x:r},backend:a,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=mt({inputs:{x:s},backend:a,attrs:{shape:[h.batchSize,c/h.batchSize]}}),g=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],y=a.bufferSync(m),x=a.bufferSync(f),A=dv(x,y,g);return a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.makeTensorInfo(h.outputShape,A.dtype,A.values)}var tD={kernelName:Dl,backendName:"cpu",kernelFunc:eD};function aD(e){let{inputs:t,backend:a}=e,{input:n}=t,r=v.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=r/s,o=mt({inputs:{x:n},backend:a,attrs:{shape:[i,s]}}),u=qv(o,!0,a),d=mt({inputs:{x:u},backend:a,attrs:{shape:n.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(u),d}var nD={kernelName:Ed,backendName:"cpu",kernelFunc:aD},rD=it($i,e=>Number.isFinite(e)?1:0,"bool"),sD={kernelName:$i,backendName:"cpu",kernelFunc:rD},iD=it(Mi,e=>Math.abs(e)===1/0?1:0,"bool"),oD={kernelName:Mi,backendName:"cpu",kernelFunc:iD},lD=it(Fi,e=>Number.isNaN(e)?1:0,"bool"),uD={kernelName:Fi,backendName:"cpu",kernelFunc:lD};function dD(e){let{backend:t,attrs:a}=e,{start:n,stop:r,num:s}=a,i=mv(n,r,s);return t.makeTensorInfo([i.length],"float32",i)}var pD={kernelName:zi,backendName:"cpu",kernelFunc:dD},cD=it(Li,e=>Math.log1p(e)),hD={kernelName:Li,backendName:"cpu",kernelFunc:cD},fD=Rt((e,t)=>e&&t),mD=Lt(Wi,fD,null,"bool"),gD={kernelName:Wi,backendName:"cpu",kernelFunc:mD},yD=it(Bi,e=>e?0:1,"bool"),xD={kernelName:Bi,backendName:"cpu",kernelFunc:yD},AD=Rt((e,t)=>e||t),bD=Lt(Vi,AD,null,"bool"),vD={kernelName:Vi,backendName:"cpu",kernelFunc:bD};function wD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;ve(r,"LRN");let d=r.shape[3],l=d-1,p=a.data.get(r.dataId).values,c=v.sizeFromShape(r.shape),h=new Float32Array(c);function f(m){let g=m%d,y=m-g+Math.max(0,g-s),x=m-g+Math.min(g+s,l),A=0;for(;y<=x;y++){let b=p[y];A+=b*b}return A}for(let m=0;m<c;m++){let g=f(m),y=p[m]*Math.pow(i+o*g,-u);h[m]=y}return a.makeTensorInfo(r.shape,r.dtype,h)}var kD={kernelName:"LRN",backendName:"cpu",kernelFunc:wD};function ID(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:d,beta:l}=n;ve(i,"LRNGrad");let p=v.sizeFromShape(i.shape),c=i.shape[3],h=a.data.get(i.dataId).values,f=a.data.get(r.dataId).values,m=a.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let x=0;x<y;x++){let A=x%c,b=x-A+Math.max(0,A-o),w=x-A+Math.min(c,A+o+1),S=0;for(let N=b;N<w;N++)S+=Math.pow(f[N],2);S=d*S+u;for(let N=b;N<w;N++){let T=-2*d*l*f[N]*m[x]/S;x===N&&(T+=Math.pow(S,-l)),T*=h[x],g[N]+=T}}return a.makeTensorInfo(i.shape,r.dtype,g)}var SD={kernelName:zl,backendName:"cpu",kernelFunc:ID};function Xv(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=n,o=a,u=r.shape,d=u.length,l=v.parseAxisParam(s,u),p=l,c=C.getAxesPermutation(p,d),h=o.data.get(r.dataId).values;if(c!=null){let b=new Array(d);for(let w=0;w<b.length;w++)b[w]=u[c[w]];h=Hm(h,u,r.dtype,c,b),p=C.getInnerMostAxes(p.length,d),u=b}ve(r,"max"),C.assertAxesAreInnerMostDims("max",p,d);let[f,m]=C.computeOutAndReduceShapes(u,p),g=v.sizeFromShape(m),y=yv(h,g,f,r.dtype),x=o.write(y,f,r.dtype),A=f;return i&&(A=C.expandShapeToKeepDim(f,l)),{dataId:x,shape:A,dtype:r.dtype}}var CD={kernelName:"Max",backendName:"cpu",kernelFunc:Xv};function ND(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;ve(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,d=1;v.assert(C.eitherStridesOrDilationsAreOne(i,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let l=C.computePool2DInfo(r.shape,s,i,d,o,u),p;if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))p=Gn({inputs:{x:r},backend:a});else{let c=a.data.get(r.dataId).values,h=v.computeStrides(r.shape),f=Qm(c,r.shape,r.dtype,h,l,"max");p=a.makeTensorInfo(l.outShape,r.dtype,f.values)}return p}var TD={kernelName:Gi,backendName:"cpu",kernelFunc:ND};function RD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:d}=n;ve(r,"maxPool3d");let l=C.computePool3DInfo(r.shape,s,i,1,o,u,d),p=a.data.get(r.dataId).values,c=Gv(p,r.shape,r.dtype,v.computeStrides(r.shape),l,"max");return a.makeTensorInfo(c.shape,"float32",c.values)}var ED={kernelName:Ll,backendName:"cpu",kernelFunc:RD};function _D(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:d}=n;ve([r,s],"maxPool3DGrad");let l=C.computePool3DInfo(s.shape,i,o,1,u,d),p=a.bufferSync(s),c=AP(p,l),h=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,x=l.dilationWidth,A=l.effectiveFilterDepth,b=l.effectiveFilterHeight,w=l.effectiveFilterWidth,S=A-1-l.padInfo.front,N=w-1-l.padInfo.left,T=b-1-l.padInfo.top,_=$e(s.shape,"float32"),P=a.bufferSync(r);for(let E=0;E<l.batchSize;++E)for(let I=0;I<l.inChannels;++I)for(let F=0;F<l.inDepth;++F)for(let $=0;$<l.inHeight;++$)for(let z=0;z<l.inWidth;++z){let M=F-S,H=$-T,V=z-N,q=0;for(let G=0;G<A;G+=g){let B=(M+G)/h;if(!(B<0||B>=l.outDepth||Math.floor(B)!==B))for(let K=0;K<b;K+=y){let X=(H+K)/f;if(!(X<0||X>=l.outHeight||Math.floor(X)!==X))for(let J=0;J<w;J+=x){let ee=(V+J)/m;if(ee<0||ee>=l.outWidth||Math.floor(ee)!==ee)continue;let ye=A*b*w-1-c.get(E,B,X,ee,I),xe=G*b*w+K*w+J,le=ye===xe?1:0;if(le===0)continue;let Se=P.get(E,B,X,ee,I);q+=Se*le}}}_.set(q,E,F,$,z,I)}return a.makeTensorInfo(_.shape,_.dtype,_.values)}var $D={kernelName:Md,backendName:"cpu",kernelFunc:_D};function MD(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s,output:i}=t,o=s;ve([s,i],"maxPoolGrad");let{filterSize:u,strides:d,pad:l,dimRoundingMode:p}=n,c=C.computePool2DInfo(o.shape,u,d,1,l,p),h=a.data.get(o.dataId).values,f=$e(c.outShape,o.dtype,Uv(h,o.shape,o.dtype,c).values),m=c.strideHeight,g=c.strideWidth,y=c.dilationHeight,x=c.dilationWidth,A=c.effectiveFilterHeight,b=c.effectiveFilterWidth,w=b-1-c.padInfo.left,S=A-1-c.padInfo.top,N=$e(o.shape,"float32"),T=a.data.get(r.dataId).values,_=$e(r.shape,"float32",T);for(let P=0;P<c.batchSize;++P)for(let E=0;E<c.inChannels;++E)for(let I=0;I<c.inHeight;++I)for(let F=0;F<c.inWidth;++F){let $=I-S,z=F-w,M=0;for(let H=0;H<A;H+=y){let V=($+H)/m;if(!(V<0||V>=c.outHeight||Math.floor(V)!==V))for(let q=0;q<b;q+=x){let G=(z+q)/g;if(G<0||G>=c.outWidth||Math.floor(G)!==G)continue;let B=A*b-1-f.get(P,V,G,E),K=H*b+q,X=B===K?1:0;if(X===0)continue;let J=_.get(P,V,G,E);M+=J*X}}N.set(M,P,I,F,E)}return a.makeTensorInfo(N.shape,N.dtype,N.values)}var FD={kernelName:$d,backendName:"cpu",kernelFunc:MD};function PD(e,t,a,n,r){let s=v.computeStrides(t),i=Qm(e,t,a,s,r,"max"),o=Uv(e,t,a,r,!0,n);return[i.values,o.values]}var OD={kernelName:Wl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,u=a;ve(n,"MaxPoolWithArgmax");let d=u.data.get(n.dataId).values,l=C.computePool2DInfo(n.shape,r,s,[1,1],i),[p,c]=PD(d,n.shape,n.dtype,o,l),h=u.write(p,l.outShape,n.dtype),f=u.write(c,l.outShape,n.dtype);return[{dataId:h,shape:l.outShape,dtype:n.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function DD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=v.parseAxisParam(s,r.shape),u=C.computeOutAndReduceShapes(r.shape,o)[1],d=v.sizeFromShape(u),l=[],p=a.makeTensorInfo([],"float32",new Float32Array([d]));l.push(p);let c=Kr({inputs:{x:r},backend:a,attrs:{dtype:"float32"}});l.push(c);let h=e2({inputs:{a:c,b:p},backend:a});l.push(h);let f=tp({inputs:{x:h},backend:a,attrs:{axis:s,keepDims:i}});return l.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var zD={kernelName:Hi,backendName:"cpu",kernelFunc:DD};function LD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;ve(r,"min");let o=v.parseAxisParam(s,r.shape),u=o,d=C.getAxesPermutation(u,r.shape.length),l=r;d!=null&&(l=$a({inputs:{x:r},backend:a,attrs:{perm:d}}),u=C.getInnerMostAxes(u.length,r.shape.length)),C.assertAxesAreInnerMostDims("min",u,l.shape.length);let[p,c]=C.computeOutAndReduceShapes(l.shape,u),h=v.sizeFromShape(c),f=v.makeZerosTypedArray(v.sizeFromShape(p),l.dtype),m=a.data.get(l.dataId).values;for(let y=0;y<f.length;++y){let x=y*h,A=m[x];for(let b=0;b<h;++b){let w=m[x+b];(Number.isNaN(w)||w<A)&&(A=w)}f[y]=A}d!=null&&a.disposeIntermediateTensorInfo(l);let g=a.makeTensorInfo(p,l.dtype,f);if(i){let y=C.expandShapeToKeepDim(p,o),x=mt({inputs:{x:g},backend:a,attrs:{shape:y}});return a.disposeIntermediateTensorInfo(g),x}return g}var WD={kernelName:"Min",backendName:"cpu",kernelFunc:LD};function BD(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,mode:i}=n;ve(r,"mirrorPad");let o=s.map((x,A)=>x[0]+r.shape[A]+x[1]),u=s.map(x=>x[0]),d=s.map((x,A)=>x[0]+r.shape[A]),l=i==="reflect"?0:1,p=a.data.get(r.dataId).values,c=r.shape.length,h=v.computeStrides(r.shape),f=v.sizeFromShape(o),m=o.length,g=v.computeStrides(o),y=v.getTypedArrayFromDType(r.dtype,f);for(let x=0;x<f;x++){let A=v.indexToLoc(x,m,g);for(let w=0;w<m;w++)A[w]<u[w]?A[w]=u[w]*2-A[w]-l:A[w]>=d[w]&&(A[w]=(d[w]-1)*2-A[w]+l);A=A.map((w,S)=>w-u[S]);let b=v.locToIndex(A,c,h);y[x]=p[b]}return{dataId:a.write(y,o,r.dtype),shape:o,dtype:r.dtype}}var VD={kernelName:qi,backendName:"cpu",kernelFunc:BD},UD=Rt((e,t)=>{let a=e%t;return e<0&&t<0||e>=0&&t>=0?a:(a+t)%t}),GD=Lt("Mod",UD),HD={kernelName:"Mod",backendName:"cpu",kernelFunc:GD},jD=vl(Gx());function Kv(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:s}=n,i=r.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let u=v.parseAxisParam([o],r.shape),d=Xv({inputs:{x:r},backend:a,attrs:{reductionIndices:u,keepDims:!1}}),l=C.expandShapeToKeepDim(d.shape,u),p=mt({inputs:{x:d},backend:a,attrs:{shape:l}}),c=Zm({inputs:{a:r,b:p},backend:a}),h=sv({inputs:{x:c},backend:a}),f=tp({inputs:{x:h},backend:a,attrs:{axis:u,keepDims:!1}}),m=mt({inputs:{x:f},backend:a,attrs:{shape:l}}),g=e2({inputs:{a:h,b:m},backend:a});return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),g}var qD={kernelName:vo,backendName:"cpu",kernelFunc:Kv};function XD(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=n;ve(r,"multinomial");let u=o?r:Kv({inputs:{logits:r},backend:a,attrs:{dim:-1}}),d=u.shape[0],l=u.shape[1],p=a.data.get(u.dataId).values,c=[d,s],h=v.makeZerosTypedArray(v.sizeFromShape(c),"int32");for(let f=0;f<d;++f){let m=f*l,g=new Float32Array(l-1);g[0]=p[m];for(let A=1;A<g.length;++A)g[A]=g[A-1]+p[m+A];let y=jD.alea(i.toString()),x=f*s;for(let A=0;A<s;++A){let b=y();h[x+A]=g.length;for(let w=0;w<g.length;w++)if(b<g[w]){h[x+A]=w;break}}}return o||a.disposeIntermediateTensorInfo(u),a.makeTensorInfo(c,"int32",h)}var KD={kernelName:Xi,backendName:"cpu",kernelFunc:XD},YD=yn.nonMaxSuppressionV3Impl;function ZD(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=n;ve(r,"NonMaxSuppression");let d=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,{selectedIndices:p}=YD(d,l,i,o,u);return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var JD={kernelName:Zi,backendName:"cpu",kernelFunc:ZD},QD=yn.nonMaxSuppressionV4Impl;function ez(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:d}=n;ve(r,"NonMaxSuppressionPadded");let l=a.data.get(r.dataId).values,p=a.data.get(s.dataId).values,{selectedIndices:c,validOutputs:h}=QD(l,p,i,o,u,d);return[a.makeTensorInfo([c.length],"int32",new Int32Array(c)),a.makeTensorInfo([],"int32",new Int32Array([h]))]}var tz={kernelName:Bl,backendName:"cpu",kernelFunc:ez},az=yn.nonMaxSuppressionV5Impl;function nz(e){let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:d}=n;ve(r,"NonMaxSuppressionWithScore");let l=a.data.get(r.dataId).values,p=a.data.get(s.dataId).values,c=i,h=o,f=u,m=d,{selectedIndices:g,selectedScores:y}=az(l,p,c,h,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var rz={kernelName:Ji,backendName:"cpu",kernelFunc:nz};function sz(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:u}=n;ve(r,"oneHot");let d=v.sizeFromShape(r.shape),l=new Float32Array(d*i);l.fill(u);let p=a.data.get(r.dataId).values;for(let c=0;c<d;++c)p[c]>=0&&p[c]<i&&(l[c*i+p[c]]=o);return a.makeTensorInfo([...r.shape,i],s,l)}var iz={kernelName:Qi,backendName:"cpu",kernelFunc:sz};function Ic(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let r=Vs({inputs:{input:n},backend:a}),s=Ic({inputs:{x:r},backend:a}),i=yl({inputs:{input:n},backend:a}),o=Ic({inputs:{x:i},backend:a}),u=Wa({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}else return t2({backend:a,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var oz={kernelName:nu,backendName:"cpu",kernelFunc:Ic};function Yv(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let r=Vs({inputs:{input:n},backend:a}),s=Yv({inputs:{x:r},backend:a}),i=yl({inputs:{input:n},backend:a}),o=Ic({inputs:{x:i},backend:a}),u=Wa({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}else return t2({backend:a,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var lz={kernelName:Vl,backendName:"cpu",kernelFunc:Yv};function Zv(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return kc({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{v.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let p=kc({inputs:{input:l},backend:a,attrs:{dim:r}});return o.push(p),p}),d=xl({inputs:u,backend:a,attrs:{axis:r}});return o.forEach(l=>a.disposeIntermediateTensorInfo(l)),d}var uz={kernelName:Ul,backendName:"cpu",kernelFunc:Zv};function dz(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,constantValue:i}=n;ve(r,"pad");let o=s.map((y,x)=>y[0]+r.shape[x]+y[1]),u=s.map(y=>y[0]),d=a.data.get(r.dataId).values,l=v.sizeFromShape(r.shape),p=r.shape.length,c=v.computeStrides(r.shape),h=v.sizeFromShape(o),f=o.length,m=v.computeStrides(o),g=v.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let y=0;y<l;y++){let x=v.indexToLoc(y,p,c).map((b,w)=>b+u[w]),A=v.locToIndex(x,f,m);g[A]=d[y]}return{dataId:a.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var Jv={kernelName:eo,backendName:"cpu",kernelFunc:dz},pz=Rt((e,t)=>Math.pow(e,t)),cz=Lt("Pow",pz),hz={kernelName:"Pow",backendName:"cpu",kernelFunc:cz};function fz(e){let{inputs:t,backend:a,attrs:n}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,u=r.map(y=>a.data.get(y.dataId).values),d=r.map(y=>y.shape),l=a.data.get(s.dataId).values,p=a.data.get(i.dataId).values,[c,h,f]=kv(u,d,l,s.shape,s.dtype,p,i.shape),m=c.map(y=>a.makeTensorInfo([y.length],"int32",y)),g=a.makeTensorInfo(f,s.dtype,h);return m.concat([g])}var mz={kernelName:zc,backendName:"cpu",kernelFunc:fz};function gz(e){let{inputs:t,backend:a}=e,{starts:n,limits:r,deltas:s}=t,i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,[d,l]=Iv(i,n.shape,n.dtype,o,r.shape,u,s.shape),p=a.makeTensorInfo([d.length],"int32",d),c=a.makeTensorInfo([l.length],n.dtype,l);return[p,c]}var yz={kernelName:Lc,backendName:"cpu",kernelFunc:gz};function xz(e){let{inputs:t,backend:a,attrs:n}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=n,d=a.data.get(r.dataId).values,l=a.data.get(s.dataId).values,p=a.data.get(i.dataId).values,c=o.map(g=>a.data.get(g.dataId).values),h=o.map(g=>g.shape),[f,m]=Sv(d,r.shape,l,s.shape,s.dtype,p,i.shape,c,h,u);return a.makeTensorInfo(f,s.dtype,m)}var Az={kernelName:Wc,backendName:"cpu",kernelFunc:xz};function bz(e){let{backend:t,attrs:a}=e,{start:n,stop:r,dtype:s,step:i}=a,o=jm(n,r,i,s);return t.makeTensorInfo([o.length],s,o)}var vz={kernelName:Gl,backendName:"cpu",kernelFunc:bz},wz=it(no,e=>1/e),kz={kernelName:no,backendName:"cpu",kernelFunc:wz};function Iz(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;ve(r,"resizeBilinear");let u=v.computeStrides(r.shape),[d,l]=o,[p,c,h,f]=r.shape,m=a.data.get(r.dataId).values,g=new Float32Array(v.sizeFromShape([p,d,l,f])),y=[s&&d>1?c-1:c,s&&l>1?h-1:h],x=[s&&d>1?d-1:d,s&&l>1?l-1:l],A=0,b=y[0]/x[0],w=y[1]/x[1];for(let S=0;S<p;S++)for(let N=0;N<d;N++){let T;i?T=b*(N+.5)-.5:T=b*N;let _=Math.max(0,Math.floor(T)),P=T-_,E=Math.min(c-1,Math.ceil(T)),I=S*u[0]+_*u[1],F=S*u[0]+E*u[1];for(let $=0;$<l;$++){let z;i?z=w*($+.5)-.5:z=w*$;let M=Math.max(0,Math.floor(z)),H=z-M,V=Math.min(h-1,Math.ceil(z)),q=I+M*u[2],G=F+M*u[2],B=I+V*u[2],K=F+V*u[2];for(let X=0;X<f;X++){let J=m[q+X],ee=m[G+X],ye=m[B+X],xe=m[K+X],le=J+(ye-J)*H,Se=ee+(xe-ee)*H,Re=le+(Se-le)*P;g[A++]=Re}}}return a.makeTensorInfo([p,d,l,f],"float32",g)}var Sz={kernelName:io,backendName:"cpu",kernelFunc:Iz};function Cz(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n;ve([s,r],"resizeBilinearGrad");let o=v.computeStrides(r.shape),[u,d,l,p]=r.shape,[,c,h]=s.shape,f=new Float32Array(u*d*l*p),m=[i&&c>1?d-1:d,i&&h>1?l-1:l],g=[i&&c>1?c-1:c,i&&h>1?h-1:h],y=m[0]/g[0],x=m[1]/g[1],A=a.data.get(s.dataId).values,b=0;for(let w=0;w<u;w++){let S=w*o[0];for(let N=0;N<c;N++){let T=N*y,_=Math.floor(T),P=Math.min(Math.ceil(T),d-1),E=S+_*o[1],I=S+P*o[1],F=T-_,$=1-F;for(let z=0;z<h;z++){let M=z*x,H=Math.floor(M),V=Math.min(Math.ceil(M),l-1),q=M-H,G=1-q,B=E+H*o[2],K=E+V*o[2],X=I+H*o[2],J=I+V*o[2],ee=$*G,ye=$*q,xe=F*G,le=F*q;for(let Se=0;Se<p;Se++){let Re=A[b++];f[B+Se]+=Re*ee,f[K+Se]+=Re*ye,f[X+Se]+=Re*xe,f[J+Se]+=Re*le}}}}return a.makeTensorInfo([u,l,d,p],"float32",f)}var Nz={kernelName:ql,backendName:"cpu",kernelFunc:Cz};function Tz(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;ve(r,"resizeNearestNeighbor");let u=v.computeStrides(r.shape),[d,l]=o,[p,c,h,f]=r.shape,m=a.data.get(r.dataId).values,g=new Float32Array(p*d*l*f),y=[s&&d>1?c-1:c,s&&l>1?h-1:h],x=[s&&d>1?d-1:d,s&&l>1?l-1:l],A=y[0]/x[0],b=y[1]/x[1],w=0;for(let S=0;S<p;S++){let N=S*u[0];for(let T=0;T<d;T++){let _=i?A*(T+.5):A*T,P=Math.min(c-1,s?Math.round(_):Math.floor(_));i&&(P=Math.max(0,P));let E=N+P*u[1];for(let I=0;I<l;I++){let F=i?b*(I+.5):b*I,$=Math.min(h-1,s?Math.round(F):Math.floor(F));i&&($=Math.max(0,$));let z=E+$*u[2];for(let M=0;M<f;M++){let H=m[z+M];g[w++]=H}}}}return a.makeTensorInfo([p,d,l,f],r.dtype,g)}var Rz={kernelName:so,backendName:"cpu",kernelFunc:Tz};function Ez(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n;ve([s,r],"resizeNearestNeighborGrad");let o=v.computeStrides(r.shape),u=v.computeStrides(s.shape),[d,l,p,c]=r.shape,[,h,f]=s.shape,m=new Float32Array(d*l*p*c),g=a.data.get(s.dataId).values,y=[i&&h>1?l-1:l,i&&f>1?p-1:p],x=[i&&h>1?h-1:h,i&&f>1?f-1:f],A=y[0]/x[0],b=y[1]/x[1],w=1/A,S=1/b,N=Math.ceil(w)*2+2,T=Math.ceil(S)*2+2;for(let _=0;_<d;_++){let P=_*o[0];for(let E=0;E<l;E++){let I=P+E*o[1],F=Math.floor(E*w),$=Math.floor(F-N/2);for(let z=0;z<p;z++){let M=I+z*o[2],H=Math.floor(z*S),V=Math.floor(H-T/2);for(let q=0;q<c;q++){let G=0;for(let B=0;B<N;B++){let K=B+$;if(K<0||K>=h)continue;let X=P+K*u[1],J=K*A,ee=Math.min(l-1,i?Math.round(J):Math.floor(J));if(E===ee)for(let ye=0;ye<T;ye++){let xe=ye+V;if(xe<0||xe>=f)continue;let le=X+xe*u[2],Se=xe*b,Re=Math.min(p-1,i?Math.round(Se):Math.floor(Se));z===Re&&(G+=g[le+q])}}m[M+q]=G}}}}return a.makeTensorInfo(r.shape,r.dtype,m)}var _z={kernelName:jl,backendName:"cpu",kernelFunc:Ez};function $z(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:s}=n;ve(r,"reverse");let i=r.shape.length,o=v.parseAxisParam(s,r.shape);if(i===0)return Gn({inputs:{x:r},backend:a});let u=new Mt(r.shape,r.dtype),d=a.bufferSync(r);for(let l=0;l<u.size;l++){let p=u.indexToLoc(l),c=p.slice();o.forEach(h=>c[h]=r.shape[h]-1-c[h]),u.set(d.get(...c),...p)}return a.makeTensorInfo(u.shape,u.dtype,u.values)}var Mz={kernelName:lo,backendName:"cpu",kernelFunc:$z},Fz={kernelName:To,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:s,center:i}=t,o=a,u=v.getTypedArrayFromDType(n.dtype,v.sizeFromShape(n.shape)),[d,l,p,c]=n.shape,[h,f]=C.getImageCenter(i,l,p),m=255,g=Math.sin(r),y=Math.cos(r),x=o.data.get(n.dataId).values;for(let A=0;A<d;A++){let b=A*p*l*c;for(let w=0;w<l;w++){let S=w*(p*c);for(let N=0;N<p;N++){let T=N*c;for(let _=0;_<c;_++){let P=[d,w,N,_],E=P[2],I=P[1],F=(E-h)*y-(I-f)*g,$=(E-h)*g+(I-f)*y;F=Math.round(F+h),$=Math.round($+f);let z=s;if(typeof s!="number"&&(_===3?z=m:z=s[_]),F>=0&&F<p&&$>=0&&$<l){let H=$*(p*c),V=F*c,q=b+H+V+_;z=x[q]}let M=b+S+T+_;u[M]=z}}}}return{dataId:o.write(u,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},Pz=it(uo,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),Oz={kernelName:uo,backendName:"cpu",kernelFunc:Pz};function Dz(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:u,sliceSize:d,strides:l,outputSize:p}=C.calculateShapes(s,r,i),c=!0,h=a.bufferSync(r),f=a.bufferSync(s),m=_s(h,f,i,p,d,u,o,l,0,c);return a.makeTensorInfo(i,m.dtype,m.values)}var zz={kernelName:co,backendName:"cpu",kernelFunc:Dz};function Lz(e,t){let a=0,n=e.length,r=0;for(;a<n;)r=Math.floor((a+n)/2),e[r]<t?a=r+1:n=r;return n}function Wz(e,t){let a=0,n=e.length,r=0;for(;a<n;)r=Math.floor((a+n)/2),e[r]<=t?a=r+1:n=r;return n}function Bz(e,t,a,n,r,s){let i=v.getArrayFromDType("int32",a*r);for(let o=0;o<a;++o){let u=e.slice(o*n,(o+1)*n),d=o*r;for(let l=0;l<r;++l)i[d+l]=s==="left"?Lz(u,t[l+d]):Wz(u,t[l+d])}return i}function Vz(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:s}=t,{side:i}=n,o=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,d=Bz(o,u,r.shape[0],r.shape[1],s.shape[1],i);return a.makeTensorInfo(s.shape,"int32",d)}var Uz={kernelName:fo,backendName:"cpu",kernelFunc:Vz};function Gz(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t;ve([n,r,s],"select");let i=n.shape.length,o=a.data.get(n.dataId).values,u=a.data.get(r.dataId).values,d=a.data.get(s.dataId).values,l=ea(r.dtype,s.dtype),p=v.makeZerosTypedArray(v.sizeFromShape(r.shape),l),c=0,h=i===0||i>1||r.shape.length===1?1:v.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<h;m++)o[f]===1?p[c++]=u[f]:p[c++]=d[f];return a.makeTensorInfo(r.shape,l,p)}var Hz={kernelName:Xl,backendName:"cpu",kernelFunc:Gz},jz=C.SELU_SCALEALPHA,qz=C.SELU_SCALE,Xz=it(mo,e=>e>=0?qz*e:jz*(Math.exp(e)-1)),Kz={kernelName:mo,backendName:"cpu",kernelFunc:Xz},Yz=it(yo,e=>e<0?-1:e>0?1:0),Zz={kernelName:yo,backendName:"cpu",kernelFunc:Yz},Jz=it("Sin",e=>Math.sin(e)),Qz={kernelName:"Sin",backendName:"cpu",kernelFunc:Jz},eL=it(go,e=>Math.sinh(e)),tL={kernelName:go,backendName:"cpu",kernelFunc:eL},aL=11920928955078125e-23,Rg=Math.log(aL)+2,nL=it(Ao,e=>{let t=e>-Rg,a=e<Rg,n=Math.exp(e),r;return a?r=n:t?r=e:r=Math.log(1+n),r}),rL={kernelName:Ao,backendName:"cpu",kernelFunc:nL};function sL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n;ve([r],"spaceToBatchND");let o=v.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let g=1+s.length;g<r.shape.length;++g)u.push([0,0]);let d=Jv.kernelFunc({inputs:{x:r},backend:a,attrs:{paddings:u,constantValue:0}}),l=C.getReshaped(d.shape,s,o,!1),p=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(d.shape,s,o,!1),h=mt({inputs:{x:d},backend:a,attrs:{shape:l}}),f=$a({inputs:{x:h},backend:a,attrs:{perm:p}}),m=mt({inputs:{x:f},backend:a,attrs:{shape:c}});return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),m}var iL={kernelName:Yl,backendName:"cpu",kernelFunc:sL};function oL(e){let{inputs:t,backend:a}=e,{indices:n,values:r,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.data.get(n.dataId).values,u=a.data.get(r.dataId).values,d=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values[0],[p,c,h,f,m]=Tv(o,n.shape,n.dtype,u,r.dtype,d,l);return[a.makeTensorInfo(c,n.dtype,p),a.makeTensorInfo([c[0]],r.dtype,h),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var lL={kernelName:Pd,backendName:"cpu",kernelFunc:oL};function uL(e){let{inputs:t,backend:a}=e,{inputIndices:n,inputShape:r,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.data.get(r.dataId).values),o=a.data.get(n.dataId).values,u=Array.from(a.data.get(s.dataId).values),[d,l,p]=Rv(o,n.shape,n.dtype,i,u);return[a.makeTensorInfo(l,n.dtype,d),a.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var dL={kernelName:Jl,backendName:"cpu",kernelFunc:uL};function pL(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,[d,l]=qm(i,n.shape,n.dtype,o,u,!0);return a.makeTensorInfo(l,n.dtype,d)}var cL={kernelName:Ql,backendName:"cpu",kernelFunc:pL};function hL(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=a.data.get(n.dataId).values,o=a.data.get(r.dataId).values,u=a.data.get(s.dataId).values,[d,l]=qm(i,n.shape,n.dtype,o,u);return a.makeTensorInfo(l,n.dtype,d)}var fL={kernelName:eu,backendName:"cpu",kernelFunc:hL};function mL(e){let{inputs:t,backend:a,attrs:n}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:u,numUpdates:d,sliceSize:l,strides:p,outputSize:c}=C.calculateShapes(s,r,o),h=!1,f=a.bufferSync(r),m;switch(s.dtype){case"bool":{let g=a.bufferSync(s),y=!!a.data.get(i.dataId).values[0];m=_s(f,g,o,c,l,d,u,p,y,h);break}case"float32":{let g=a.bufferSync(s),y=a.data.get(i.dataId).values[0];m=_s(f,g,o,c,l,d,u,p,y,h);break}case"int32":{let g=a.bufferSync(s),y=a.data.get(i.dataId).values[0];m=_s(f,g,o,c,l,d,u,p,y,h);break}case"string":{let g=a.bufferSync(s),y=v.decodeString(a.data.get(i.dataId).values[0]);m=_s(f,g,o,c,l,d,u,p,y,h);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return a.makeTensorInfo(o,m.dtype,m.values)}var gL={kernelName:wo,backendName:"cpu",kernelFunc:mL};function yL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,s,o),d=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(p=>{let c=[...l];c[o]=p;let h=Us({inputs:{x:r},backend:a,attrs:{begin:d,size:c}});return d[o]+=p,h})}var xL={kernelName:Zl,backendName:"cpu",kernelFunc:yL},AL={kernelName:Od,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,n=t;ve(a,"square");let r=n.data.get(a.dataId).values,s=new Float32Array(r.length);for(let i=0;i<r.length;++i){let o=r[i];s[i]=o*o}return{dataId:n.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},bL=it(ts,(e,t)=>{let a=t;return isNaN(e)?NaN:e>0?1:a.alpha}),vL={kernelName:ts,backendName:"cpu",kernelFunc:bL};function wL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:d,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:c}=n;ve(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=wt.sliceInfo(r.shape,s,i,o,u,d,l,p,c),w;if(m)w=mt({inputs:{x:r},backend:a,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=wt.computeOutShape(x,A,b),N=Us({inputs:{x:r},backend:a,attrs:{begin:x,size:S}});w=mt({inputs:{x:N},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(N)}else{let S=a.bufferSync(r),N=$v(h,S,b,x);w=a.makeTensorInfo(f,N.dtype,N.values)}return w}var kL={kernelName:Io,backendName:"cpu",kernelFunc:wL};function IL(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:d}=n,{data:l,dataSplits:p}=t,c=a.data.get(l.dataId).values,h=a.data.get(p.dataId).values,[f,m]=Xm(c,h,r,s,i,o,u,d);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var SL={kernelName:tu,backendName:"cpu",kernelFunc:IL};function CL(e){let{inputs:t,backend:a,attrs:n}=e,{skipEmpty:r}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.data.get(s.dataId).values,u=a.data.get(i.dataId).values[0],[d,l,p]=Km(o,u,r),c=l.length;return[a.makeTensorInfo([c,2],"int32",d),a.makeTensorInfo([c],"string",l),a.makeTensorInfo([2],"int32",new Int32Array(p))]}var NL={kernelName:zd,backendName:"cpu",kernelFunc:CL};function TL(e){let{inputs:t,backend:a,attrs:n}=e,{numBuckets:r}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=a.data.get(s.dataId).values,o=Ym(i,r);return a.makeTensorInfo(s.shape,"int32",o)}var RL={kernelName:Ld,backendName:"cpu",kernelFunc:TL},EL=it("Tan",e=>Math.tan(e)),_L={kernelName:"Tan",backendName:"cpu",kernelFunc:EL},$L=it(So,e=>Math.tanh(e)),ML={kernelName:So,backendName:"cpu",kernelFunc:$L};function FL(e){let{inputs:t,backend:a}=e,{tensor:n,indices:r,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:d,outputSize:l}=C.calculateShapes(s,r,n.shape),p=!1,c=a.bufferSync(r),h=a.bufferSync(s),f=a.bufferSync(n),m=_s(c,h,n.shape,l,u,o,i,d,f,p);return a.makeTensorInfo(n.shape,m.dtype,m.values)}var PL={kernelName:ho,backendName:"cpu",kernelFunc:FL};function OL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:s}=n;ve(r,"tile");let i=Fv(a.bufferSync(r),s);return a.makeTensorInfo(i.shape,i.dtype,i.values)}var DL={kernelName:es,backendName:"cpu",kernelFunc:OL};function zL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:s,sorted:i}=n;ve(r,"topk");let o=a.data.get(r.dataId).values,[u,d]=Ov(o,r.shape,r.dtype,s,i);return[a.makeTensorInfo(u.shape,u.dtype,u.values),a.makeTensorInfo(d.shape,d.dtype,d.values)]}var LL={kernelName:Co,backendName:"cpu",kernelFunc:zL};function WL(e){let{inputs:t,attrs:a,backend:n}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:d}=a,[l,p,c,h]=r.shape,[f,m]=d??[p,c],g=[l,f,m,h],y=v.computeStrides(r.shape),x=y[0],A=y[1],b=y[2],w=v.computeStrides(g),S=w[0],N=w[1],T=w[2],_=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(g));_.fill(u);let P=n.data.get(r.dataId).values,E=n.data.get(s.dataId).values;for(let I=0;I<l;++I){let F=s.shape[0]===1?E:E.subarray(I*8,I*8+8);for(let $=0;$<f;++$)for(let z=0;z<m;++z)for(let M=0;M<h;++M){let H,V=F[6]*z+F[7]*$+1;if(V===0)continue;let q=(F[0]*z+F[1]*$+F[2])/V,G=(F[3]*z+F[4]*$+F[5])/V,B=Eg(q,c,o),K=Eg(G,p,o);switch(i){case"nearest":H=jL(P,p,c,x,A,b,I,K,B,M,u);break;case"bilinear":H=qL(P,p,c,x,A,b,I,K,B,M,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let X=I*S+$*N+z*T+M;_[X]=H}return n.makeTensorInfo(g,r.dtype,_)}return{dataId:n.write(_,g,r.dtype),shape:r.shape,dtype:r.dtype}}var BL={kernelName:No,backendName:"cpu",kernelFunc:WL};function Eg(e,t,a){switch(a){case"reflect":return VL(e,t);case"wrap":return UL(e,t);case"nearest":return HL(e,t);case"constant":default:return GL(e)}}function VL(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let n=2*t;a<n&&(a=n*Math.trunc(-a/n)+a),a=a<-t?a+n:-a-1}else if(a>t-1)if(t<=1)a=0;else{let n=2*t;a-=n*Math.trunc(a/n),a>=t&&(a=n-a-1)}return v.clamp(0,a,t-1)}function UL(e,t){let a=e;if(a<0)if(t<=1)a=0;else{let n=t-1;a+=t*(Math.trunc(-a/n)+1)}else if(a>t-1)if(t<=1)a=0;else{let n=t-1;a-=t*Math.trunc(a/n)}return v.clamp(0,a,t-1)}function GL(e,t){return e}function HL(e,t){return v.clamp(0,e,t-1)}function _u(e,t,a,n,r,s,i,o,u,d,l){let p=i*n+o*r+u*s+d;return 0<=o&&o<t&&0<=u&&u<a?e[p]:l}function jL(e,t,a,n,r,s,i,o,u,d,l){let p=Math.round(o),c=Math.round(u);return _u(e,t,a,n,r,s,i,p,c,d,l)}function qL(e,t,a,n,r,s,i,o,u,d,l){let p=Math.floor(o),c=Math.floor(u),h=p+1,f=c+1,m=(f-u)*_u(e,t,a,n,r,s,i,p,c,d,l)+(u-c)*_u(e,t,a,n,r,s,i,p,f,d,l),g=(f-u)*_u(e,t,a,n,r,s,i,h,c,d,l)+(u-c)*_u(e,t,a,n,r,s,i,h,f,d,l);return(h-o)*m+(o-p)*g}function XL(e){let{inputs:t,attrs:a,backend:n}=e,{axis:r}=a,{x:s}=t;ve(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:d}=Jm(i,r,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,o),n.makeTensorInfo([d.length],"int32",d)]}var KL={kernelName:Wd,backendName:"cpu",kernelFunc:XL};function YL(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r.shape.length,o=r.shape[s],u=new Array(i-1),d=0;for(let h=0;h<i;h++)h!==s&&(u[d++]=r.shape[h]);let l=new Array(i).fill(0),p=r.shape.slice();p[s]=1;let c=new Array(o);for(let h=0;h<c.length;h++){l[s]=h;let f=Us({inputs:{x:r},backend:a,attrs:{begin:l,size:p}});c[h]=mt({inputs:{x:f},backend:a,attrs:{shape:u}}),a.disposeIntermediateTensorInfo(f)}return c}var ZL={kernelName:au,backendName:"cpu",kernelFunc:YL};function JL(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,segmentIds:s}=t,{numSegments:i}=n;ve(r,"unsortedSegmentSum");let o=r.shape.length,u=s.shape.length,d=[],l=[],p=o-u,c=s;for(let f=0;f<p;++f){let m=kc({inputs:{input:c},backend:a,attrs:{dim:f+1}});c=m,l.push(m)}for(let f=0;f<i;++f){let m=v.createScalarValue(f,"int32"),g=a.makeTensorInfo([],"int32",m),y=nv({inputs:{a:g,b:c},backend:a}),x=Kr({inputs:{x:y},backend:a,attrs:{dtype:"float32"}}),A=dh({inputs:{a:x,b:r},backend:a}),b=tp({inputs:{x:A},backend:a,attrs:{axis:0,keepDims:!1}});d.push(b),l.push(g),l.push(y),l.push(x),l.push(A),l.push(b)}let h=Zv({inputs:d,backend:a,attrs:{axis:0}});return l.forEach(f=>a.disposeIntermediateTensorInfo(f)),h}var QL={kernelName:Bd,backendName:"cpu",kernelFunc:JL},eW=[qF,CM,KF,ZF,$M,QF,tP,nP,sP,oP,uP,pP,hP,gP,xP,vP,kP,SP,NP,HF,RP,_P,MP,FM,PP,EM,OM,DP,NM,LP,BP,VP,GP,jP,XP,YP,JP,eO,aO,rO,iO,lO,dO,cO,hO,mO,yO,AO,bO,vO,wO,IO,NO,zF,RO,DM,DO,zM,zO,WM,GO,HO,qO,VM,GM,KO,ZO,QO,tD,jM,XM,TM,nD,WP,sD,oD,uD,LF,YM,JM,pD,eF,hD,gD,xD,vD,kD,SD,CD,aF,TD,ED,$D,FD,OD,zD,WD,rF,VD,HD,KD,iF,lF,JD,tz,rz,dF,iz,lz,uz,Jv,hz,BF,hF,mz,yz,Az,vz,RM,Jf,kz,VF,UF,GF,Sz,Nz,Rz,_z,Mz,Fz,Oz,wF,zz,Uz,Hz,Kz,IF,Zz,Qz,tL,SF,qD,rL,iL,lL,dL,cL,fL,gL,xL,TF,AL,EF,$F,vL,kL,SL,NL,RL,OF,SO,_L,ML,PL,DL,LL,BL,pF,KL,ZL,QL,oz];for(let e of eW)Sn(e);var Qv={};je(Qv,{assertNotComplex:()=>lu,bindCanvasToFramebuffer:()=>pW,bindColorTextureToFramebuffer:()=>Zp,bindTextureToProgramUniformSampler:()=>f5,bindTextureUnit:()=>p5,bindVertexBufferToProgramAttribute:()=>e0,callAndCheck:()=>ce,canBeRepresented:()=>e5,createFragmentShader:()=>n5,createFramebuffer:()=>d5,createProgram:()=>r5,createStaticIndexBuffer:()=>o5,createStaticVertexBuffer:()=>i5,createTexture:()=>l5,createVertexShader:()=>a5,getBatchDim:()=>Gs,getExtensionOrThrow:()=>$u,getFramebufferErrorMessage:()=>m5,getMaxTexturesInShader:()=>A5,getNumChannels:()=>uW,getProgramUniformLocation:()=>h5,getProgramUniformLocationOrThrow:()=>c5,getRowsCols:()=>Hs,getShapeAs3D:()=>Fu,getTextureShapeFromLogicalShape:()=>y5,getWebGLDisjointQueryTimerVersion:()=>b5,getWebGLErrorMessage:()=>t5,getWebGLMaxTextureSize:()=>x5,hasExtension:()=>en,isCapableOfRenderingToFloatTexture:()=>v5,isDownloadFloatTextureEnabled:()=>w5,isReshapeFree:()=>dd,isWebGLFenceEnabled:()=>k5,isWebGLVersionEnabled:()=>a0,linkProgram:()=>s5,logShaderSourceAndInfoLog:()=>r2,resetMaxTextureSize:()=>cW,resetMaxTexturesInShader:()=>hW,unbindColorTextureFromFramebuffer:()=>t0,unbindTextureUnit:()=>dW,validateFramebuffer:()=>Mu,validateProgram:()=>Yp,validateTextureSize:()=>u5});var ks={},Tp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function a2(e,t){ks[e]=t}function En(e,t){if(!(e in ks)||t!=null){let n=aW(e,t);if(n!==null)ks[e]=n;else return console.log("Could not get context for WebGL version",e),null}let a=ks[e];return a==null||a.isContextLost()?(delete ks[e],En(e)):(a.disable(a.DEPTH_TEST),a.disable(a.STENCIL_TEST),a.disable(a.BLEND),a.disable(a.DITHER),a.disable(a.POLYGON_OFFSET_FILL),a.disable(a.SAMPLE_COVERAGE),a.enable(a.SCISSOR_TEST),a.enable(a.CULL_FACE),a.cullFace(a.BACK),ks[e])}function tW(e){if(!U().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function aW(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let a=t??tW(e);return a.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete ks[e]},!1),U().getBool("SOFTWARE_WEBGL_ENABLED")&&(Tp.failIfMajorPerformanceCaveat=!1),e===1?a.getContext("webgl",Tp)||a.getContext("experimental-webgl",Tp):a.getContext("webgl2",Tp)}var ud;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(ud||(ud={}));var Qa;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(Qa||(Qa={}));var Jt;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Jt||(Jt={}));function ap(e,t){return[t,e]}function nW(e,t){return e*t}function Rp(e){let t=v.sizeFromShape(e),a=Math.ceil(t/4);return v.sizeToSquarishShape(a)}function ou(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function rW(e,t){let[a,n]=ou(e,t);return a*n*4}function n2(e,t){let a=e,n,r,s,i,o,u,d,l,p,c;return U().getNumber("WEBGL_VERSION")===2?(n=a.R32F,r=a.R16F,s=a.RGBA16F,i=a.RGBA32F,o=a.RED,d=4,l=1,p=a.HALF_FLOAT,c=a.FLOAT,u=a.RGBA8):(n=e.RGBA,r=e.RGBA,s=e.RGBA,i=a.RGBA,o=e.RGBA,d=4,l=4,p=t!=null?t.HALF_FLOAT_OES:null,c=e.FLOAT,u=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:d,defaultNumChannels:l,textureTypeHalfFloat:p,textureTypeFloat:c}}function ce(e,t){let a=t();return U().getBool("DEBUG")&&sW(e),a}function sW(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+t5(e,t))}var iW=596e-10,oW=65504;function e5(e){return!!(U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||iW<Math.abs(e)&&Math.abs(e)<oW)}function t5(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function $u(e,t){return mr(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function a5(e,t){let a=mr(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ce(e,()=>e.shaderSource(a,t)),ce(e,()=>e.compileShader(a)),e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(a)),new Error("Failed to compile vertex shader.");return a}function n5(e,t){let a=mr(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ce(e,()=>e.shaderSource(a,t)),ce(e,()=>e.compileShader(a)),U().get("ENGINE_COMPILE_ONLY"))return a;if(e.getShaderParameter(a,e.COMPILE_STATUS)===!1)throw r2(t,e.getShaderInfoLog(a)),new Error("Failed to compile fragment shader.");return a}var lW=/ERROR: [0-9]+:([0-9]+):/g;function r2(e,t){let a=lW.exec(t);if(a==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+a[1],r=e.split(`
`),s=r.length.toString().length+2,i=r.map((p,c)=>v.rightPad((c+1).toString(),s)+p),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let u=i.slice(0,n-1),d=i.slice(n-1,n),l=i.slice(n);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(d[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function r5(e){return mr(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function s5(e,t){if(ce(e,()=>e.linkProgram(t)),!U().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Yp(e,t){if(ce(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function i5(e,t){let a=mr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),ce(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function o5(e,t){let a=mr(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a)),ce(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),a}function uW(){return U().getNumber("WEBGL_VERSION")===2?1:4}function l5(e){return mr(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function u5(e,t){let a=U().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>a||t>a){let n=`[${e}x${t}]`,r=`[${a}x${a}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+r+".")}}function d5(e){return mr(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function e0(e,t,a,n,r,s,i){let o=e.getAttribLocation(t,a);return o===-1?!1:(ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),ce(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i)),ce(e,()=>e.enableVertexAttribArray(o)),!0)}function p5(e,t,a){g5(e,a),ce(e,()=>e.activeTexture(e.TEXTURE0+a)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function dW(e,t){g5(e,t),ce(e,()=>e.activeTexture(e.TEXTURE0+t)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function c5(e,t,a){return mr(e,()=>e.getUniformLocation(t,a),'uniform "'+a+'" not present in program.')}function h5(e,t,a){return e.getUniformLocation(t,a)}function f5(e,t,a,n){ce(e,()=>p5(e,t,n)),ce(e,()=>e.uniform1i(a,n))}function pW(e){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ce(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),ce(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function Zp(e,t,a){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,a)),ce(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function t0(e,t){ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),ce(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Mu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+m5(e,t))}function m5(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function mr(e,t,a){let n=ce(e,()=>t());if(n==null)throw new Error(a);return n}function g5(e,t){let a=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>a){let r=`[gl.TEXTURE0, gl.TEXTURE${a}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Gs(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function Hs(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Fu(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Gs(e),...Hs(e)]),t}function y5(e,t=!1){let a=U().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=U().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&U().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=a/2),t&&(a=a*2,n=n*2,e=e.map((o,u)=>u>=e.length-2?v.nearestLargerEven(e[u]):e[u]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let r=v.sizeFromShape(e),s=null;e.length<=1&&r<=a?s=[1,r]:e.length===2&&e[0]<=a&&e[1]<=a?s=e:e.length===3&&e[0]*e[1]<=a&&e[2]<=a?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=a&&e[1]*e[2]<=a?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=a&&e[3]<=a?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=a&&e[1]*e[2]*e[3]<=a&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=Gs(e),u=2,d=2;e.length&&([u,d]=Hs(e)),r=o*(u/2)*(d/2),s=v.sizeToSquarishShape(r).map(l=>l*2)}else s=v.sizeToSquarishShape(r);return s}function Ep(e){return e%2===0}function dd(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let a=e[e.length-1],n=t[t.length-1];if(a===n||Ep(a)&&Ep(n)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Ep(e[0])&&Ep(t[0])}var Jp,Qp;function x5(e){if(Jp==null){let t=En(e);Jp=t.getParameter(t.MAX_TEXTURE_SIZE)}return Jp}function cW(){Jp=null}function hW(){Qp=null}function A5(e){if(Qp==null){let t=En(e);Qp=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Qp)}function b5(e){if(e===0)return 0;let t,a=En(e);return en(a,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:en(a,"EXT_disjoint_timer_query")?t=1:t=0,t}function en(e,t){return e.getExtension(t)!=null}function a0(e){try{if(En(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function v5(e){if(e===0)return!1;let t=En(e);if(e===1){if(!en(t,"OES_texture_float"))return!1}else if(!en(t,"EXT_color_buffer_float"))return!1;return n0(t)}function w5(e){if(e===0)return!1;let t=En(e);if(e===1){if(!en(t,"OES_texture_float")||!en(t,"WEBGL_color_buffer_float"))return!1}else{if(en(t,"EXT_color_buffer_float"))return n0(t);let a="EXT_color_buffer_half_float";if(en(t,a)){let n=t.getExtension(a);return fW(t,n)}return!1}return n0(t)}function n0(e){let t=n2(e),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(n),r}function fW(e,t){let a=n2(e,t),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,a.internalFormatHalfFloat,1,1,0,a.textureFormatFloat,a.textureTypeHalfFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function k5(e){return e!==2?!1:En(e).fenceSync!=null}function lu(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&v.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var we=U();we.registerFlag("HAS_WEBGL",()=>we.getNumber("WEBGL_VERSION")>0);we.registerFlag("WEBGL_VERSION",()=>a0(2)?2:a0(1)?1:0);we.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);we.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>we.get("WEBGL_VERSION")===2);we.registerFlag("WEBGL_CPU_FORWARD",()=>!0);we.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);we.registerFlag("WEBGL_PACK",()=>we.getBool("HAS_WEBGL"));we.registerFlag("WEBGL_PACK_NORMALIZATION",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_CLIP",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_REDUCE",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_LAZILY_UNPACK",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_CONV_IM2COL",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>we.getBool("WEBGL_PACK"));we.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>x5(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>A5(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=we.getNumber("WEBGL_VERSION");return e===0?0:b5(e)});we.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>we.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Hd.isMobile());we.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>v5(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>we.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:we.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));we.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>w5(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_FENCE_API_ENABLED",()=>k5(we.getNumber("WEBGL_VERSION")));we.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>we.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);we.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});we.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Hd.isMobile()?1:-1,e=>{if(typeof e!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});we.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);we.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);we.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);we.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);we.registerFlag("WEBGL_EXP_CONV",()=>!1);we.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>we.getBool("IS_TEST"));we.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);we.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);we.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);we.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function ma(){let e,t,a,n,r,s,i,o,u,d;return U().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",a="out",n="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=U().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",d=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",a="varying",n="varying",r="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,d=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:a,varyingFs:n,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:d}}function Eo(e,t,a="index"){let n=v.computeStrides(t);return n.map((r,s)=>{let i=`int ${e[s]} = ${a} / ${r}`,o=s===n.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * ${r}`:`index -= ${e[s]} * ${r}`;return`${i}; ${o};`}).join("")}function ph(e,t,a="index"){let n=v.computeStrides(t);return n.map((r,s)=>{let i=`int ${e[s]} = ${a} / outShapeStrides[${s}]`,o=s===n.length-1?`int ${e[s+1]} = ${a} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function mW(e,t){let a=e.length,n=e.map(s=>`${t}[${s}]`),r=new Array(a-1);r[a-2]=n[a-1];for(let s=a-3;s>=0;--s)r[s]=`(${r[s+1]} * ${n[s+1]})`;return r}function gW(e,t,a="index"){let n=e.map((s,i)=>i),r=mW(n,t);return r.map((s,i)=>{let o=`int ${e[i]} = ${a} / ${r[i]}`,u=i===r.length-1?`int ${e[i+1]} = ${a} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`;return`${o}; ${u};`}).join("")}function s2(e){let t=v.computeStrides(e).map(a=>a.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function i2(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var I5=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:S5}=C;function yW(e,t,a){let n=[];if(e.forEach(c=>{let h=v.sizeFromShape(c.shapeInfo.logicalShape);if(c.shapeInfo.isUniform?n.push(`uniform float ${c.name}${h>1?`[${h}]`:""};`):(n.push(`uniform sampler2D ${c.name};`),n.push(`uniform int offset${c.name};`)),a.enableShapeUniforms){let{uniformShape:f}=o2(a.packedInputs,c.shapeInfo.logicalShape,c.shapeInfo.texShape);switch(f.length){case 1:n.push(`uniform int ${c.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${c.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${c.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${c.name}Shape;`);break}n.push(`uniform ivec2 ${c.name}TexShape;`)}}),a.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}a.customUniforms&&a.customUniforms.forEach(c=>{n.push(`uniform ${c.type} ${c.name}${c.arrayIndex?`[${c.arrayIndex}]`:""};`)});let r=n.join(`
`),s=e.map(c=>xW(c,t,a.packedInputs,a.enableShapeUniforms)).join(`
`),i=t.texShape,o=ma(),u=vW(o),d,l,p=IW(o);return t.isPacked?(d=AW(t.logicalShape,i,a.enableShapeUniforms),l=kW(o)):(d=bW(t.logicalShape,i,a.enableShapeUniforms),l=wW(o)),a.packedInputs&&(p+=TW),[p,u,l,r,d,s,a.userCode].join(`
`)}function uu(e,t=!1){let a=e.shapeInfo.logicalShape;switch(a.length){case 0:return WW(e,t);case 1:return VW(e,t);case 2:return GW(e,t);case 3:return jW(e,t);case 4:return XW(e,t);case 5:return KW(e);case 6:return YW(e);default:throw new Error(`${a.length}-D input sampling is not yet supported`)}}function C5(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return LW(e);case 1:return BW(e,t);case 2:return UW(e,t);case 3:return HW(e,t);default:return qW(e,t)}}function xW(e,t,a=!1,n){let r="";a?r+=C5(e,n):r+=uu(e,n);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a?r+=ZW(e,t):r+=JW(e,t)),r}function AW(e,t,a){switch(e.length){case 0:return N5();case 1:return RW(e,t,a);case 2:return DW(e,t,a);case 3:return _W(e,t,a);default:return MW(e,t,a)}}function bW(e,t,a){switch(e.length){case 0:return N5();case 1:return EW(e,t,a);case 2:return zW(e,t,a);case 3:return $W(e,t,a);case 4:return FW(e,t,a);case 5:return PW(e,t);case 6:return OW(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function vW(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function wW(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function kW(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function IW(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${SW}
    ${CW}
    ${NW}
  `}var SW=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,CW=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,NW=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,TW=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function N5(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function RW(e,t,a){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?a?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function EW(e,t,a){return t[0]===1?a?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?a?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:a?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function _W(e,t,a){if(a)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function $W(e,t,a){if(a)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ph(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let n=Eo(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function MW(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2),i=s,o="",u="b, r, c";for(let d=2;d<e.length-1;d++)i*=e[e.length-d-1],o=`
      int b${d} = index / ${i};
      index -= b${d} * ${i};
    `+o,u=`b${d}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function FW(e,t,a){if(a)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ph(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Eo(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function PW(e,t){let a=Eo(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function OW(e,t){let a=Eo(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${a}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function DW(e,t,a){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return a?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return a?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function zW(e,t,a){return v.arraysEqual(e,t)?a?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?a?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:a?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function _o(e){return`offset${e}`}function LW(e){let t=e.name,a="get"+t.charAt(0).toUpperCase()+t.slice(1),n=ma();return`
    vec4 ${a}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function WW(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${a};}`;let[r,s]=e.shapeInfo.texShape;if(r===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${a}, halfCR);
      }
    `;let i=_o(a);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${i});
      return sampleTexture(${a}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${i});
      return sampleTexture(${a}, uv);
    }
  `}function BW(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=e.shapeInfo.texShape,s=ma();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${a}, uv);
    }
  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${a}, uv);
    }
  `}function VW(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${du(e)}
      }
    `;let r=e.shapeInfo.texShape,s=r[0],i=r[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${a}, halfCR);
      }
    `;let o=_o(a);return i===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${a}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${a}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${o});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${a}, uv);
    }
  `}function UW(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=ma();if(s!=null&&v.arraysEqual(a,s))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let d=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(a[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${d[0]}, ${d[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}function GW(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape;if(s!=null&&v.arraysEqual(a,s)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let c=s[0],h=s[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:o}=v.squeezeShape(a),u=i;if(u.length<a.length){let c=pu(e,u),h=["row","col"];return`
      ${uu(c,t)}
      float ${r}(int row, int col) {
        return ${r}(${cu(h,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));
        ${du(e)}
      }
    `;let d=s[0],l=s[1],p=_o(n);return l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
      return sampleTexture(${n}, uv);
    }
  `:d===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${a[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${a[1]} + col + ${p};
    vec2 uv = uvFromFlat(${d}, ${l}, index);
    return sampleTexture(${n}, uv);
  }
`}function HW(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(a[0]===1){let c=a.slice(1),h=[1,2],f=pu(e,c),m=["b","row","col"];return`
        ${C5(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${cu(m,h)});
        }
      `}let o=ma();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `;let u=i[0],d=i[1],l=Math.ceil(a[2]/2),p=l*Math.ceil(a[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${d}, ${p}, ${l}, b, row, col);
      return ${o.texture2D}(${n}, uv);
    }
  `}function jW(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=a[1]*a[2],i=a[2],{newShape:o,keptDims:u}=v.squeezeShape(a),d=o;if(d.length<a.length){let m=pu(e,d),g=["row","col","depth"];return`
        ${uu(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${cu(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${du(e)}
      }
    `;let l=e.shapeInfo.texShape,p=l[0],c=l[1],h=e.shapeInfo.flatOffset;if(c===s&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${c}.0, ${p}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(c===i&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `;let f=_o(n);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${c}, index);
        return sampleTexture(${n}, uv);
      }
  `}function qW(e,t){let a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=ma();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${a}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${a}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${a}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=u[0],l=u[1],p=Math.ceil(s[i-1]/2),c=p*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${c} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<i-1;m++)h=`int b${m}, `+h,c*=s[i-m-1],f=`b${m} * ${c} + `+f;return`
    vec4 ${n}(${h}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${d});
      return ${r.texture2D}(${a}, uv);
    }
  `}function XW(e,t){let a=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=a[3],i=a[2]*s,o=a[1]*i,{newShape:u,keptDims:d}=v.squeezeShape(a);if(u.length<a.length){let x=pu(e,u),A=["row","col","depth","depth2"];return`
      ${uu(x,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${cu(A,d)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${du(e)}
      }
    `;let l=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],h=p[1],f=`int stride2 = ${n}Shape[3];`,m=`int stride1 = ${n}Shape[2] * stride2;`,g=`int stride0 = ${n}Shape[1] * stride1;`;if(h===o&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===s&&l==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a[1]*a[2]}, ${a[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let y=_o(n);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${y});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${h}, index + ${y});
      return sampleTexture(${n}, uv);
    }
  `}function KW(e){let t=e.shapeInfo.logicalShape,a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:d}=v.squeezeShape(t);if(u.length<t.length){let m=pu(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${uu(m)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${cu(g,d)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${r})) +
          depth3;
        ${du(e)}
      }
    `;let l=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,c=p[0],h=p[1];if(h===o&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(h===r&&l==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;let f=_o(a);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${c}, ${h}, index);
      return sampleTexture(${a}, uv);
    }
  `}function YW(e){let t=e.shapeInfo.logicalShape,a=e.name,n="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:r,keptDims:s}=v.squeezeShape(t);if(r.length<t.length){let g=pu(e,r),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${uu(g)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${cu(y,s)});
      }
    `}let i=t[5],o=t[4]*i,u=t[3]*o,d=t[2]*u,l=t[1]*d;if(e.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${d}, ${u}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${du(e)}
      }
    `;let p=e.shapeInfo.flatOffset,c=e.shapeInfo.texShape,h=c[0],f=c[1];if(f===l&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${u}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(f===i&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `;let m=_o(a);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${d} + depth * ${u} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${a}, uv);
    }
  `}function du(e){let t=e.name,a=v.sizeFromShape(e.shapeInfo.logicalShape);return a<2?`return ${t};`:`
    for (int i = 0; i < ${a}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function ZW(e,t){let a=e.name,n=a.charAt(0).toUpperCase()+a.slice(1),r="get"+n+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=S5(e.shapeInfo.logicalShape,t.logicalShape),u=ut(i),d=i-s,l,p=["x","y","z","w","u","v"];s===0?l="":i<2&&o.length>=1?l="coords = 0;":l=o.map(g=>`coords.${p[g+d]} = 0;`).join(`
`);let c="";i<2&&s>0?c="coords":c=e.shapeInfo.logicalShape.map((g,y)=>`coords.${p[y+d]}`).join(", ");let h="return outputValue;",f=v.sizeFromShape(e.shapeInfo.logicalShape)===1,m=v.sizeFromShape(t.logicalShape)===1;if(s===1&&!f&&!m)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(f&&!m)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?h="return vec4(outputValue.x);":o.indexOf(g)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${n}(${c});
      ${h}
    }
  `}function JW(e,t){let a=e.name,n=a.charAt(0).toUpperCase()+a.slice(1),r="get"+n+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&e.shapeInfo.flatOffset==null&&v.arraysEqual(i,s))return`
      float ${r}() {
        return sampleTexture(${a}, resultUV);
      }
    `;let d=ut(u),l=S5(e.shapeInfo.logicalShape,t.logicalShape),p=u-o,c,h=["x","y","z","w","u","v"];o===0?c="":u<2&&l.length>=1?c="coords = 0;":c=l.map(m=>`coords.${h[m+p]} = 0;`).join(`
`);let f="";return u<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${d} coords = getOutputCoords();
      ${c}
      return get${n}(${f});
    }
  `}function ut(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function o2(e,t,a){let{newShape:n,keptDims:r}=v.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):n,u=!e&&s>1&&!v.arraysEqual(t,a)&&n.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function pu(e,t){let a=JSON.parse(JSON.stringify(e));return a.shapeInfo.logicalShape=t,a}function cu(e,t){return t.map(a=>e[a]).join(", ")}function QW(e,t,a,n){let r=a.map((l,p)=>{let c={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(c.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:c}}),s=r.map(l=>l.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},o=yW(r,i,t),u=n5(e.gl,o),d=e.createProgram(u);return U().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:d,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(d),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:d,inShapeInfos:s,outShapeInfo:i},T5(e,t,d)))}function T5(e,t,a){let n=[],r=[],s,i,o,u=null,d=null;d=e.getUniformLocation(a,"NAN",!1),U().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(a,"INFINITY",!1));let l=!1;for(let p of t.variableNames){let c={name:p,uniform:e.getUniformLocation(a,p,l),offset:e.getUniformLocation(a,`offset${p}`,l)};t.enableShapeUniforms&&(c.shape=e.getUniformLocation(a,`${p}Shape`,l),c.texShape=e.getUniformLocation(a,`${p}TexShape`,l)),n.push(c)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(a,"outShape",l),o=e.getUniformLocation(a,"outShapeStrides",l),i=e.getUniformLocation(a,"outTexShape",l)),t.customUniforms)for(let p of t.customUniforms)r.push(e.getUniformLocation(a,p.name,l));return{variablesLocations:n,customUniformLocations:r,infLoc:u,nanLoc:d,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function _g(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((a,n)=>{let r=a.logicalShape,s=t[n],i=s.shape;if(!v.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(a.isUniform&&s.isUniform)return;let o=a.texShape,u=s.isUniform?null:s.texData.texShape;if(!v.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function eB(e,t,a,n,r){t.program.enableShapeUniforms||(_g(t.inShapeInfos,a),_g([t.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),U().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<a.length;++u){let d=a[u],{uniform:l,offset:p,shape:c,texShape:h}=t.variablesLocations[u];if(c){let{uniformShape:f}=o2(t.program.packedInputs,d.shape,d.texData.texShape);switch(f.length){case 1:e.gl.uniform1iv(c,new Int32Array(f));break;case 2:e.gl.uniform2iv(c,new Int32Array(f));break;case 3:e.gl.uniform3iv(c,new Int32Array(f));break;case 4:e.gl.uniform4iv(c,new Int32Array(f));break}}if(h&&e.gl.uniform2i(h,d.texData.texShape[0],d.texData.texShape[1]),l!=null){if(d.isUniform){if(v.sizeFromShape(d.shape)<2)e.gl.uniform1f(l,d.uniformValues[0]);else{let f=d.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),e.gl.uniform1fv(l,f)}continue}d.texData.slice!=null&&p!=null&&e.gl.uniform1i(p,d.texData.slice.flatOffset),e.setInputMatrixTexture(d.texData.texture.texture,l,u)}}let o=t.outShapeLocation;if(o)switch(n.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(n.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(n.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(n.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(n.shape));break}if(t.outShapeStridesLocation){let u=v.computeStrides(n.shape);switch(n.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&r)for(let u=0;u<t.program.customUniforms.length;++u){let d=t.program.customUniforms[u],l=t.customUniformLocations[u],p=r[u];if(d.type==="float")e.gl.uniform1fv(l,p);else if(d.type==="vec2")e.gl.uniform2fv(l,p);else if(d.type==="vec3")e.gl.uniform3fv(l,p);else if(d.type==="vec4")e.gl.uniform4fv(l,p);else if(d.type==="int")e.gl.uniform1iv(l,p);else if(d.type==="ivec2")e.gl.uniform2iv(l,p);else if(d.type==="ivec3")e.gl.uniform3iv(l,p);else if(d.type==="ivec4")e.gl.uniform4iv(l,p);else throw Error(`uniform type ${d.type} is not supported yet.`)}e.executeProgram()}function tB(e,t,a){let n="";t.concat(a).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:d,uniformShape:l,keptDims:p}=o2(e.packedInputs,i.shape,u),c="",h="",f="";if(l.length===1&&e.packedInputs){let w=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];c=`${w[0]>1}_${w[1]>1}`}else if(l.length===2&&!e.packedInputs)h=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!e.packedInputs){let w=v.computeStrides(l);f=`${w[0]===u[1]}_${w[w.length-1]===u[1]}`}let m=i.shape.length,g=l.length===2&&v.arraysEqual(i.shape,u),y=v.sizeFromShape(i.shape)===1,x=C.getBroadcastDims(i.shape,a.shape),A=!e.packedInputs&&m===a.shape.length&&v.arraysEqual(u,a.texData.texShape),b=e.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;n+=`${m}_${A}_${d?p:""}_${l.length}_${y}_${x}_${g}_${c}_${h}_${f}_${b}_${o}`}else{let u=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${u}_${o}`}});let r=e.userCode,s=e.constructor.name;return s+="_"+n+"_"+r+`${U().getNumber("WEBGL_VERSION")}`,s}function aa(e){return U().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var aB=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ud.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ma();this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ph(["r","c","d"],e):Eo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},nB=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ud.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=ma();this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ph(["r","c","d"],e):Eo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},rB=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Qa.DOWNLOAD;let t=ma();this.outputShape=e,this.userCode=`
      ${I5}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},sB=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Qa.DOWNLOAD;let t=ma();this.outputShape=e,this.userCode=`
      ${I5}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},iB={R:0,G:1,B:2,A:3},$g=class{constructor(e,t=!1,a="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=ma();this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let i=0;i<a.length;i++){let o=a[i];s+=`
          if(offset == ${i}) {
            result = values[${iB[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?i2():s2(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${a.length});

        flatIndex = idiv(flatIndex, ${a.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${r}, 0., 0., 0.);
      }
    `}},oB=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=ma();this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length);let n="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;n+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${a.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?i2():s2(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${a.output} = ${r};
        }
    `}},R5={};je(R5,{bindVertexProgramAttributeStreams:()=>z5,createBufferFromOutputTexture:()=>B5,createFloat16MatrixTexture:()=>F5,createFloat16PackedMatrixTexture:()=>D5,createFloat32MatrixTexture:()=>M5,createIndexBuffer:()=>$5,createPackedMatrixTexture:()=>O5,createUnsignedBytesMatrixTexture:()=>P5,createVertexBuffer:()=>_5,createVertexShader:()=>E5,downloadByteEncodedFloatMatrixFromOutputTexture:()=>U5,downloadFloat32MatrixFromBuffer:()=>V5,downloadMatrixFromPackedOutputTexture:()=>H5,downloadPackedMatrixFromBuffer:()=>G5,getInternalFormatForFloat16MatrixTexture:()=>u2,getInternalFormatForFloat16PackedMatrixTexture:()=>c2,getInternalFormatForFloat32MatrixTexture:()=>l2,getInternalFormatForPackedMatrixTexture:()=>p2,getInternalFormatForUnsignedBytesMatrixTexture:()=>d2,uploadDenseMatrixToTexture:()=>L5,uploadPixelDataToTexture:()=>W5});function E5(e){let t=ma(),a=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return a5(e,a)}function _5(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return i5(e,t)}function $5(e){let t=new Uint16Array([0,1,2,2,1,3]);return o5(e,t)}function np(e,t,a,n,r,s){u5(t,a);let i=l5(e),o=e.TEXTURE_2D;return ce(e,()=>e.bindTexture(o,i)),ce(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),ce(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),ce(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),ce(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),U().getNumber("WEBGL_VERSION")===1?ce(e,()=>e.texImage2D(o,0,n,t,a,0,r,s,null)):ce(e,()=>e.texStorage2D(o,1,n,t,a)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[a,t]}}function l2(e){return e.internalFormatFloat}function M5(e,t,a,n){let[r,s]=ap(t,a);return np(e,r,s,l2(n),n.textureFormatFloat,e.FLOAT)}function u2(e){return e.internalFormatHalfFloat}function F5(e,t,a,n){let[r,s]=ap(t,a);return np(e,r,s,u2(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function d2(e){return e.downloadTextureFormat}function P5(e,t,a,n){let[r,s]=ap(t,a);return np(e,r,s,d2(n),e.RGBA,e.UNSIGNED_BYTE)}function p2(e){return e.internalFormatPackedFloat}function O5(e,t,a,n){let[r,s]=ou(t,a);return np(e,r,s,p2(n),e.RGBA,e.FLOAT)}function c2(e){return e.internalFormatPackedHalfFloat}function D5(e,t,a,n){let[r,s]=ou(t,a);return np(e,r,s,c2(n),e.RGBA,n.textureTypeHalfFloat)}function z5(e,t,a){return ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),e0(e,t,"clipSpacePos",a,3,20,0)&&e0(e,t,"uv",a,2,20,12)}function L5(e,t,a,n,r,s){ce(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,u;r instanceof Uint8Array?(i=new Uint8Array(a*n*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(a*n*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(r),U().getNumber("WEBGL_VERSION")===2?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a,n,e.RGBA,o,i)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,a,n,0,e.RGBA,o,i)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function W5(e,t,a){ce(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a.data instanceof Uint8Array?U().getNumber("WEBGL_VERSION")===2?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,a.width,a.height,e.RGBA,e.UNSIGNED_BYTE,a.data)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,a.width,a.height,0,e.RGBA,e.UNSIGNED_BYTE,a.data)):U().getNumber("WEBGL_VERSION")===2?ce(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,a)):ce(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,a)),ce(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function B5(e,t,a,n){let r=e.createBuffer();ce(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let s=4*4*t*a;return ce(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),ce(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,0)),ce(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function V5(e,t,a){let n=e,r=new Float32Array(a);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,r),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),r}function U5(e,t,a,n){let[r,s]=ap(t,a),i=4,o=new Uint8Array(nW(t*a,i));return ce(e,()=>e.readPixels(0,0,r,s,n.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function G5(e,t,a,n,r,s,i,o){let u=e,d=new Float32Array(rW(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,d),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),d}function H5(e,t,a){let n=new Float32Array(t*a*4);return ce(e,()=>e.readPixels(0,0,a,t,e.RGBA,e.FLOAT,n)),n}var Hu=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=U().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,a2(t,e)):this.gl=En(t),e=this.gl,U().getNumber("WEBGL_VERSION")===2){let r=e;this.createVertexArray=()=>ce(r,()=>r.createVertexArray()),this.bindVertexArray=s=>ce(r,()=>r.bindVertexArray(s)),this.deleteVertexArray=s=>ce(r,()=>r.deleteVertexArray(s)),this.getVertexArray=()=>ce(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){let r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ce(e,()=>r.createVertexArrayOES()),this.bindVertexArray=s=>ce(e,()=>r.bindVertexArrayOES(s)),this.deleteVertexArray=s=>ce(e,()=>r.deleteVertexArrayOES(s)),this.getVertexArray=()=>ce(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let a="WEBGL_color_buffer_float",n="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),U().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=$u(this.gl,r),en(this.gl,s))this.textureHalfFloatExtension=$u(this.gl,s);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),en(this.gl,n))this.colorBufferHalfFloatExtension=$u(this.gl,n);else if(U().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",en(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(en(this.gl,n))this.colorBufferHalfFloatExtension=this.gl.getExtension(n);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=_5(this.gl),this.indexBuffer=$5(this.gl),this.framebuffer=d5(this.gl),this.textureConfig=n2(this.gl,this.textureHalfFloatExtension)}get debug(){return U().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ce(e,()=>e.finish()),ce(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ce(e,()=>e.deleteFramebuffer(this.framebuffer)),ce(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ce(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ce(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),M5(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),F5(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),P5(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),W5(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,a,n){this.throwIfDisposed(),L5(this.gl,e,t,a,n,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),D5(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),O5(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(t0(this.gl,this.framebuffer),this.outputTexture=null),ce(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,a){return this.downloadMatrixDriver(e,()=>U5(this.gl,t,a,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,a,n,r,s){return G5(this.gl,e,t,a,n,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return V5(this.gl,e,t)}createBufferFromTexture(e,t,a){this.bindTextureToFrameBuffer(e);let n=B5(this.gl,t,a,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,a;if(U().getBool("WEBGL_FENCE_API_ENABLED")){let n=e,r=n.fenceSync(n.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),a=()=>{let s=n.clientWaitSync(r,0,0);return s===n.ALREADY_SIGNALED||s===n.CONDITION_SATISFIED},t=r}else U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),a=()=>this.isQueryAvailable(t,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):a=()=>!0;return{query:t,isFencePassed:a}}downloadMatrixFromPackedTexture(e,t,a){return this.downloadMatrixDriver(e,()=>H5(this.gl,t,a))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=E5(t));let a=r5(t);ce(t,()=>t.attachShader(a,this.vertexShader)),ce(t,()=>t.attachShader(a,e)),s5(t,a);let n=Object.assign(a,{vao:this.createVertexArray()});return this.debug&&Yp(t,n),n}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;ce(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),z5(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ce(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Yp(this.gl,this.program),ce(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,a=!0){return this.throwIfDisposed(),a?c5(this.gl,e,t):h5(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ce(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,a){this.throwIfDisposed(),this.throwIfNoProgram(),f5(this.gl,e,t,a)}setOutputMatrixTexture(e,t,a){this.setOutputMatrixTextureDriver(e,a,t)}setOutputPackedMatrixTexture(e,t,a){this.throwIfDisposed();let[n,r]=ou(t,a);this.setOutputMatrixTextureDriver(e,n,r)}setOutputMatrixWriteRegion(e,t,a,n){this.setOutputMatrixWriteRegionDriver(a,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,a,n){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Yp(this.gl,this.program),Mu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ce(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ce(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=$u(this.gl,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let a=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=a.createQuery();return a.beginQuery(n.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,a=this.getQueryTimerExtensionWebGL2();t.endQuery(a.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let a=this.gl;return a.getQueryParameter(e,a.QUERY_RESULT)/1e6}else{let a=this.getQueryTimerExtensionWebGL1();return a.getQueryObjectEXT(e,a.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let a=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=a.getQueryParameter(e,a.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let a=this.getQueryTimerExtensionWebGL1(),n=a.getQueryObjectEXT(e,a.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=lB(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:a}=this.itemsToPoll[t];a()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let a;"setTimeoutCustom"in U().platform&&(a=U().platform.setTimeoutCustom.bind(U().platform)),v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,a)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Zp(this.gl,e,this.framebuffer),this.debug&&Mu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Zp(this.gl,this.outputTexture,this.framebuffer),this.debug&&Mu(this.gl)):t0(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let a=t();return this.unbindTextureToFrameBuffer(),a}setOutputMatrixTextureDriver(e,t,a){this.throwIfDisposed();let n=this.gl;Zp(n,e,this.framebuffer),this.debug&&Mu(n),this.outputTexture=e,ce(n,()=>n.viewport(0,0,t,a)),ce(n,()=>n.scissor(0,0,t,a))}setOutputMatrixWriteRegionDriver(e,t,a,n){this.throwIfDisposed(),ce(this.gl,()=>this.gl.scissor(e,t,a,n))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function lB(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:uB,bincountImpl:j5,bincountReduceImpl:dB,bitwiseAndImpl:pB,castImpl:cB,ceilImpl:hB,concatImpl:fB,equalImpl:mB,expImpl:gB,expm1Impl:yB,floorImpl:xB,gatherNdImpl:AB,gatherV2Impl:bB,greaterImpl:vB,greaterEqualImpl:wB,lessImpl:kB,lessEqualImpl:IB,linSpaceImpl:SB,logImpl:CB,maxImpl:NB,maximumImpl:TB,minimumImpl:RB,multiplyImpl:EB,negImpl:_B,notEqualImpl:$B,prodImpl:MB,raggedGatherImpl:FB,raggedRangeImpl:PB,raggedTensorToTensorImpl:OB,rangeImpl:DB,rsqrtImpl:zB,scatterImpl:LB,sigmoidImpl:WB,simpleAbsImpl:q5,sliceImpl:BB,sparseFillEmptyRowsImpl:VB,sparseReshapeImpl:UB,sparseSegmentReductionImpl:X5,sqrtImpl:GB,staticRegexReplaceImpl:HB,stridedSliceImpl:jB,stringNGramsImpl:qB,stringSplitImpl:XB,stringToHashBucketFastImpl:KB,subImpl:YB,tileImpl:ZB,topKImpl:JB,transposeImpl:h2,uniqueImpl:QB}=uh;function K5(e,t){return["x","y","z","w","u","v"].slice(0,t).map(a=>`${e}.${a}`)}function ca(e,t){return t===1?[e]:K5(e,t)}function eV(e,t){if(e===1)return"rc";let a="";for(let n=0;n<e;n++)a+=t[n],n<e-1&&(a+=",");return a}var tV=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=aa(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=ca("rc",this.rank),a=ut(this.rank),n=this.getOutOfBoundsCondition(t),r=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();

          if(${n}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let a=0;a<=1;a++)for(let n=0;n<=1;n++){let r=`${a===0?"r":"rp1"}, ${n===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)r=`${e[e.length-1-s]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let a=this.rank-2;a<this.rank;a++)t+=`${e[a]} >= ${this.enableShapeUniforms?`outShape[${a}]`:this.outputShape[a]}`,a<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),a=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${a};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},Y5=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length);let a="";for(let n=0;n<4;n++){let r="thisRC = rc;";n%2===1&&(r+="thisRC.z += 1;"),n>1&&(r+="thisRC.y += 1;"),a+=`
        ${r}
        ${n>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${n}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${n>0?"}":""}
      `}this.userCode=`
      ${aV(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?i2():s2(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${a}

        setOutput(result);
      }
    `}};function aV(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?gW(["r","c","d"],"inputShape"):Eo(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var nV=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,a){let n=Fg(t,a),r=Pg(e,n,a);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let s=Mg(e,n,this.gpgpu.gl,this.gpgpu.textureConfig,a);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[r].pop();return this.usedTextures[r].push(o),o}let i;return n===Jt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):n===Jt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):n===Jt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):n===Jt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):n===Jt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,a,n){if(this.freeTextures==null)return;let r=Fg(a,n),s=Pg(t,r,n);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Mg(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n),o=U().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[s],d=u&&u.indexOf(e);if(d==null||d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[d]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function rV(e,t){let a=e;if(t===a.R32F)return 4;if(t===a.R16F)return 2;if(t===a.RGBA32F||t===e.RGBA)return 16;if(t===a.RGBA16F)return 8;if(t===a.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Mg(e,t,a,n,r){let s=sV(t,n),i;if(r){let[u,d]=ou(e[0],e[1]);i=u*d}else{let[u,d]=ap(e[0],e[1]);i=u*d}let o=rV(a,s);return i*o}function sV(e,t){switch(e){case Jt.PACKED_2X2_FLOAT32:return p2(t);case Jt.PACKED_2X2_FLOAT16:return c2(t);case Jt.UNPACKED_FLOAT32:return l2(t);case Jt.UNPACKED_FLOAT16:return u2(t);case Jt.PACKED_4X1_UNSIGNED_BYTE:return d2(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function iV(e){return U().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Jt.PACKED_2X2_FLOAT32:Jt.UNPACKED_FLOAT32:e?Jt.PACKED_2X2_FLOAT16:Jt.UNPACKED_FLOAT16}function Fg(e,t){if(e===Qa.UPLOAD)return Jt.PACKED_2X2_FLOAT32;if(e===Qa.RENDER||e==null)return iV(t);if(e===Qa.DOWNLOAD||e===Qa.PIXELS)return Jt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Pg(e,t,a){return`${e[0]}_${e[1]}_${t}_${a}`}var Wn=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},xn="if (isnan(x)) return x;",oV="return x;",Og="return abs(x);",lV="return (x >= 0.0) ? x : (exp(x) - 1.0);",uV=xn+`
  return (x < 0.0) ? 0.0 : x;
`,dV=xn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Sr="return x;",pV="return 1.0 / (1.0 + exp(-1.0 * x));",cV="return x;",hV=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,fV=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mV=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,gV="return 1.0 / (1.0 + exp(-1.0 * x));",Mr=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},yV=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length);let t=e.length,a=ca("rc",t),n=ut(t),r=eV(t,a),s=a.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},xV=yn.whereImpl,AV=1e-7,bV=1e-4,zh={};function vV(e){return e in zh||(zh[e]={}),zh[e]}var wV=U().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),kV=600;function IV(){return U().global.screen==null?1024:U().global.screen.height*U().global.screen.width*window.devicePixelRatio*kV/1024/1024}var ch=class Z5 extends wl{nextDataId(){return Z5.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!U().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let a;if(t!=null){if(t instanceof Hu)a=t;else{let n=En(U().getNumber("WEBGL_VERSION"),t);a=new Hu(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=En(U().getNumber("WEBGL_VERSION"));a=new Hu(n),this.binaryCache=vV(U().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=a,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nV(this.gpgpu),this.numMBBeforeWarning=IV(),this.texData=new xd(this,$t())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,a,n,r,s,i){let o=this.makeTensorInfo(a,n),u=this.texData.get(o.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[r,s]},u.texShape=[r,s];let d=Fu(a),l=new $g(d,!1,i),p=this.runWebGLProgram(l,[o],n,[[r,s]]);return p.shape=a,u.texture=null,this.disposeIntermediateTensorInfo(o),p.dataId}write(t,a,n){if((U().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||U().getBool("DEBUG"))&&this.checkNumericalProblems(t),n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:a,dtype:n,values:t,usage:Qa.UPLOAD,refCount:1}),r}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){let a=this.texData.get(t);a.refCount++}decRef(t){if(this.texData.has(t)){let a=this.texData.get(t);a.refCount--}}move(t,a,n,r,s){if(U().getBool("DEBUG")&&this.checkNumericalProblems(a),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:a,usage:Qa.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){let a=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:o,isPacked:u}=a;if(i!=null){let c;u?c=new Mr(o,Sr):c=new Wn(o,Sr);let h=this.runWebGLProgram(c,[{dataId:t,shape:o,dtype:r}],r),f=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),f}if(n!=null)return this.convertAndCacheOnCPU(t);if(r==="string")return n;let d=this.activeTimers!=null,l;d&&(l=v.now());let p;if(r==="complex64"){let c=this.readSync(s.real.dataId),h=this.readSync(s.imag.dataId);p=C.mergeRealAndImagArrays(c,h)}else p=this.getValuesFromTexture(t);return d&&(this.downloadWaitMs+=v.now()-l),this.convertAndCacheOnCPU(t,p)}async read(t){if(this.pendingRead.has(t)){let f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}let a=this.texData.get(t),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:o,isPacked:u}=a;if(s!=null){let f;u?f=new Mr(r,Sr):f=new Wn(r,Sr);let m=this.runWebGLProgram(f,[{dataId:t,shape:r,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(n!=null)return this.convertAndCacheOnCPU(t);if(U().getBool("DEBUG")&&!U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&U().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d=null,l;if(i!=="complex64"&&U().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(t);let f=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(f.texture.texture,...Rp(r))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){let f=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),m=f[0],g=f[1];p=C.mergeRealAndImagArrays(m,g)}else if(d==null)p=this.getValuesFromTexture(t);else{let f=v.sizeFromShape(r);p=this.gpgpu.downloadFloat32MatrixFromBuffer(d,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),d!=null){let f=this.gpgpu.gl;ce(f,()=>f.deleteBuffer(d))}let c=this.convertAndCacheOnCPU(t,p),h=this.pendingRead.get(t);return this.pendingRead.delete(t),h.forEach(f=>f(c)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&$t().removeDataId(t,this),this.pendingDeletes--),c}readToGPU(t,a={}){let n=this.texData.get(t),{values:r,shape:s,slice:i,dtype:o,isPacked:u,texture:d}=n;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let h;u?h=new Mr(s,Sr):h=new Wn(s,Sr);let f=this.runWebGLProgram(h,[{dataId:t,shape:s,dtype:o}],o),m=this.readToGPU(f,a);return this.disposeIntermediateTensorInfo(f),m}if(d==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(t,a.customTexShape),p=$t().makeTensorFromTensorInfo(l),c=this.texData.get(l.dataId);return Object.assign({tensorRef:p},c.texture)}bufferSync(t){let a=this.readSync(t.dataId);if(t.dtype==="string")try{let n=a.map(r=>v.decodeString(r));return $e(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return $e(t.shape,t.dtype,a)}checkNumericalProblems(t){if(t!=null)for(let a=0;a<t.length;a++){let n=t[a];if(!e5(n))throw U().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(t){let{shape:a,dtype:n,isPacked:r}=this.texData.get(t),s=v.sizeFromShape(a);if(U().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let c=this.decode(t),h=this.texData.get(c.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...Rp(a)).subarray(0,s);return this.disposeIntermediateTensorInfo(c),f}let i=U().getBool("WEBGL_PACK")&&r===!0,o=i?Fu(a):a,u=i?new sB(o):new rB(o),d=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:t}],"float32"),l=this.texData.get(d.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(d),p}timerAvailable(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){let a=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();let s=v.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=v.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=a,r&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=await Promise.all(s);o.kernelMs=v.sum(u),o.getExtraProfileInfo=()=>u.map((d,l)=>({name:i[l],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(t){return U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=v.now(),t)}async getQueryTime(t){if(U().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);let a=t;return a.endMs-a.startMs}disposeData(t,a=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(a?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!a&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);let{complexTensorInfos:n}=this.texData.get(t);return n!=null&&(this.disposeData(n.real.dataId,a),this.disposeData(n.imag.dataId,a)),this.texData.delete(t),!0}releaseGPUData(t){let{texture:a,dtype:n,texShape:r,usage:s,isPacked:i,slice:o}=this.texData.get(t),u=o&&o.origDataId||t,d=this.dataRefCount.get(u);d>1?this.dataRefCount.set(u,d-1):(this.dataRefCount.delete(u),a!=null&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(a,r,s,i)));let l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,a=wV){return U().getBool("WEBGL_CPU_FORWARD")&&t.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<a)}getGPGPUContext(){return this.gpgpu}where(t){C.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let a=t.dataSync();return xV(t.shape,a)}packedUnaryOp(t,a,n){let r=new Mr(t.shape,a),s=this.compileAndRun(r,[t],n);return $t().makeTensorFromTensorInfo(s)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){let r=q5(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,r)}if(U().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Og,t.dtype);let a=new Wn(t.shape,Og),n=this.compileAndRun(a,[t]);return $t().makeTensorFromTensorInfo(n)}makeTensorInfo(t,a,n){let r;if(a==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let s=n.map(i=>v.encodeString(i));r=this.write(s,t,a)}else r=this.write(n,t,a);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:a}}makeOutput(t,a,n){return $t().makeTensorFromTensorInfo(this.makeTensorInfo(t,a,n),this)}unpackTensor(t){let a=new yV(t.shape);return this.runWebGLProgram(a,[t],t.dtype)}packTensor(t){let a=new tV(t.shape);return this.runWebGLProgram(a,[t],t.dtype,null,!0)}packedReshape(t,a){let n=[Gs(t.shape),...Hs(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},s=[Gs(a),...Hs(a)],i=new Y5(s,n),o=!0,u=[n],d=this.runWebGLProgram(i,[r],t.dtype,u,o);return{dataId:d.dataId,shape:a,dtype:d.dtype}}decode(t,a){let n=this.texData.get(t),{isPacked:r,shape:s,dtype:i}=n;if(a!=null){let c=v.sizeFromShape(s),h=a[0]*a[1]*4;v.assert(c<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=Fu(s),u;r?u=new nB(o):u=new aB(o);let d=!0,l=[a??Rp(o)],p=this.runWebGLProgram(u,[{shape:o,dtype:i,dataId:t}],i,l,d,a);return{dtype:i,shape:s,dataId:p.dataId}}runWebGLProgram(t,a,n,r,s=!1,i){let o=this.makeTensorInfo(t.outputShape,n),u=this.texData.get(o.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===ud.DENSE){let y=i??Rp(t.outputShape);u.texShape=y.map(x=>x*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),v.sizeFromShape(o.shape)===0)return u.values=v.getTypedArrayFromDType(o.dtype,0),o;let d=[],l=a.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(y.dataId);if(x.texture==null){if(!t.packedInputs&&v.sizeFromShape(y.shape)<=U().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:x.values};t.packedInputs&&(x.isPacked=!0,x.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!x.isPacked!=!!t.packedInputs)y=x.isPacked?this.unpackTensor(y):this.packTensor(y),d.push(y),x=this.texData.get(y.dataId);else if(x.isPacked&&!dd(x.shape,y.shape)){let A=y,b=y.shape;y.shape=x.shape,y=this.packedReshape(y,b),d.push(y),x=this.texData.get(y.dataId),A.shape=b}return{shape:y.shape,texData:x,isUniform:!1}});this.uploadToGPU(o.dataId);let p={shape:o.shape,texData:u,isUniform:!1},c=tB(t,l,p),h=this.getAndSaveBinary(c,()=>QW(this.gpgpu,t,l,p)),f=this.activeTimers!=null,m;f&&(m=this.startTimer()),U().get("ENGINE_COMPILE_ONLY")||eB(this.gpgpu,h,l,p,r),d.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));let g=U().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){let y=v.now();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!U().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&s===!1){let y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(t,a,n,r,s=!1){return n=n||a[0].dtype,this.runWebGLProgram(t,a,n,r,s)}getAndSaveBinary(t,a){return t in this.binaryCache||(this.binaryCache[t]=a()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(U().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ue(()=>{if(!U().get("WEBGL_RENDER_FLOAT32_ENABLED")){let t=U().getBool("DEBUG");U().set("DEBUG",!1);let a=this.abs(Be(1e-8)).dataSync()[0];if(U().set("DEBUG",t),a>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?AV:bV}uploadToGPU(t){let a=this.texData.get(t),{shape:n,dtype:r,values:s,texture:i,usage:o,isPacked:u}=a;if(i!=null)return;let d=this.activeTimers!=null,l;d&&(l=v.now());let p=a.texShape;if(p==null&&(p=y5(n,u),a.texShape=p),s!=null){let c=Fu(n),h,f=p[1],m=p[0],g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(u||!g)&&([f,m]=ou(p[0],p[1])),u?h=new oB(c,g):h=new $g(c,g);let y=g?[m,f]:p,x=this.makeTensorInfo(y,r),A=this.texData.get(x.dataId);g?A.usage=Qa.PIXELS:A.usage=Qa.UPLOAD,A.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,s);let b=[[m,f]],w=this.runWebGLProgram(h,[x],r,b,!0),S=this.texData.get(w.dataId);a.texShape=S.texShape,a.isPacked=S.isPacked,a.usage=S.usage,U().get("ENGINE_COMPILE_ONLY")?this.disposeData(w.dataId):(a.texture=S.texture,a.values=null,this.texData.delete(w.dataId)),this.disposeIntermediateTensorInfo(x),d&&(this.uploadWaitMs+=v.now()-l)}else{let c=this.acquireTexture(p,o,r,u);a.texture=c}}convertAndCacheOnCPU(t,a){let n=this.texData.get(t),{dtype:r}=n;return a!=null&&(n.values=SV(a,r)),n.values}acquireTexture(t,a,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let s=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${s} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,a,r)}computeBytes(t,a){return t[0]*t[1]*v.bytesPerElement(a)}checkCompileCompletion(){for(let[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){let t=[];if(this.gpgpu.parallelCompilationExtension){for(let[,a]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(a));return Promise.all(t)}else{for(let[,a]of Object.entries(this.binaryCache)){let n=new Promise(r=>{try{this.checkCompletion_(a),r(!0)}catch(s){throw s}});t.push(n)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await k1(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(r2(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);let{variablesLocations:a,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:u}=T5(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=a,t.customUniformLocations=n,t.infLoc=r,t.nanLoc=s,t.outShapeLocation=i,t.outShapeStridesLocation=o,t.outTexShapeLocation=u}}createTensorFromGPUData(t,a,n){t.channels=t.channels||"RGBA";let{texture:r,height:s,width:i,channels:o}=t,u=$t().backend;if(!u.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let d=u.writeTexture(r,a,n,s,i,o);return $t().makeTensorFromDataId(d,a,n,u)}};ch.nextDataId=0;function SV(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let a=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let n=0;n<a.length;++n)a[n]=Math.round(e[n]);return a}else throw new Error(`Unknown dtype ${t}`)}var CV="4.22.0";function J5(){U().set("WEBGL_FORCE_F16_TEXTURES",!0)}Hd.isBrowser()&&ru("webgl",()=>new ch,2);var NV={forceHalfFloat:J5},f2=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,js=class{constructor(e,t,a){this.variableNames=["A","B"],this.outputShape=C.assertAndGetBroadcastShape(t,a),this.enableShapeUniforms=aa(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},$o=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,hu=class{constructor(e,t,a,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=C.assertAndGetBroadcastShape(t,a);let r=this.outputShape.length;this.enableShapeUniforms=aa(r);let s="";if(n)if(r===0||v.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${ut(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=ca("coords",r);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${i[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function Ga(e){let{inputs:t,backend:a}=e,{x:n}=t;return a.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var TV={kernelName:_i,backendName:"webgl",kernelFunc:Ga};function ss(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,s=a.makeTensorInfo(n.shape,"complex64"),i=a.texData.get(s.dataId),o=Ga({inputs:{x:n},backend:a}),u=Ga({inputs:{x:r},backend:a});return i.complexTensorInfos={real:o,imag:u},s}var RV={kernelName:kd,backendName:"webgl",kernelFunc:ss},Q5="return (a < 0.) ? b * a : a;",ew=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function EV(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:s}=n,i=a.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),o=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hu(ew,r.shape,i.shape):new js(Q5,r.shape,i.shape),u=a.runWebGLProgram(o,[r,i],"float32");return a.disposeIntermediateTensorInfo(i),u}var _V={kernelName:Pi,backendName:"webgl",kernelFunc:EV},tw="return (a < 0.) ? b * a : a;",aw=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function $V(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t,s=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hu(aw,n.shape,r.shape):new js(tw,n.shape,r.shape);return a.runWebGLProgram(s,[n,r],"float32")}var MV={kernelName:to,backendName:"webgl",kernelFunc:$V},fu="if (isnan(x)) return x;";function Je({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:a,dtype:n}){return({inputs:r,backend:s})=>{let{x:i}=r,o=s,u=n||i.dtype;if(o.shouldExecuteOnCPU([i])&&a!=null){let p=o.texData.get(i.dataId),c=a(p.values,u);return o.makeTensorInfo(i.shape,u,c)}let d=U().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return d?l=new Mr(i.shape,t):l=new Wn(i.shape,e),o.runWebGLProgram(l,[i],u)}}function ta({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:a=!1,supportsComplex:n=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{let{a:u,b:d}=i,l=o;if(n&&u.dtype==="complex64"){let f=l.texData.get(u.dataId),m=l.texData.get(d.dataId),[g,y]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(A=>{let[b,w]=A,S={dataId:b.dataId,dtype:b.dtype,shape:u.shape},N={dataId:w.dataId,dtype:w.dtype,shape:d.shape},T=new js(e,u.shape,d.shape);return l.runWebGLProgram(T,[S,N],ea(b.dtype,w.dtype))}),x=ss({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),x}let p=s||ea(u.dtype,d.dtype);if((u.dtype==="string"||d.dtype==="string"||l.shouldExecuteOnCPU([u,d]))&&r!=null){let f=l.texData.get(u.dataId).values,m=l.texData.get(d.dataId).values,g=u.dtype==="string"?C.fromUint8ToStringArray(f):f,y=u.dtype==="string"?C.fromUint8ToStringArray(m):m,[x,A]=r(u.shape,d.shape,g,y,p),b=l.makeTensorInfo(A,p),w=l.texData.get(b.dataId);return w.values=x,b}let c=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return c?h=new hu(t,u.shape,d.shape,a):h=new js(e,u.shape,d.shape),l.runWebGLProgram(h,[u,d],p)}}function pd(e,t=!1){if(e==="linear")return t?cV:oV;if(e==="relu")return t?fV:uV;if(e==="elu")return t?hV:lV;if(e==="relu6")return t?mV:dV;if(e==="prelu")return t?aw:tw;if(e==="leakyrelu")return t?ew:Q5;if(e==="sigmoid")return t?gV:pV;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var nw=class{constructor(e,t,a,n=!1,r=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a,this.enableShapeUniforms=aa(this.outputShape.length);let d=n?e[1]:e[2],l=Math.ceil(d/2),p=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",A="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(A=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${x};
        int batchB = ${A};
        for (int i = 0; i < ${l}; i++) {
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${c});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},Dg={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},zg=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=C.assertAndGetBroadcastShape(t,a),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Lg="return a * b;";function m2(e){let{inputs:t,backend:a}=e,{a:n,b:r}=t,s=C.upcastType(n.dtype,r.dtype);if(n.dtype==="complex64"){let o=a.texData.get(n.dataId),u=a.texData.get(r.dataId),d=new zg(Dg.REAL,n.shape,r.shape),l=new zg(Dg.IMAG,n.shape,r.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:n.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],c=a.runWebGLProgram(d,p,"float32"),h=a.runWebGLProgram(l,p,"float32"),f=ss({inputs:{real:c,imag:h},backend:a});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(h),f}if(a.shouldExecuteOnCPU([n,r])){let o=a.texData.get(n.dataId),u=a.texData.get(r.dataId),[d,l]=EB(n.shape,r.shape,o.values,u.values,s),p=a.makeTensorInfo(l,s),c=a.texData.get(p.dataId);return c.values=d,p}let i;return U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new hu(Lg,n.shape,r.shape):i=new js(Lg,n.shape,r.shape),a.runWebGLProgram(i,[n,r],s)}var FV={kernelName:Ki,backendName:"webgl",kernelFunc:m2};function PV(e,t,a){let n=[Gs(e.shape),...Hs(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[Gs(t),...Hs(t)],i=new Y5(s,n),o=!0,u=[n],d=a.runWebGLProgram(i,[r],e.dtype,u,o);return{dataId:d.dataId,shape:t,dtype:d.dtype}}function pe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{shape:s}=n,i=a,o=v.sizeFromShape(r.shape),u=v.inferFromImplicitShape(s,o),d=v.sizeFromShape(u);v.assert(o===d,()=>`The new shape (${u}) has ${d} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let l=i.texData.get(r.dataId);return l.isPacked&&!dd(r.shape,u)&&!(l.texture!==null&&dd(l.shape,u))?PV(r,u,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}var OV={kernelName:Hl,backendName:"webgl",kernelFunc:pe},Wg=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:n,inSize:r,outSize:s}=e;this.outputShape=[n,s];let i=Math.floor(a/4)*4,o=a%4,u="sumValue += dot(values, ones);";if(t!=null){let l=1/t;u=`sumValue += dot(values * ${v.isInt(l)?l.toPrecision(2):l}, ones);`}let d="";r%a>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},DV=class{constructor(e,t){this.variableNames=["x"];let{windowSize:a,batchSize:n,inSize:r,outSize:s}=e;this.outputShape=[n,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let d=Math.floor(a/4)*4,l=a%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,c="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,c="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,c="bvec4");let h="";r%a>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${d};
        if (${l===1}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${l===2}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${l===3}) {
          ${c} values = ${c}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${u});
      }
    `}};function zV(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let a=t.length?t[t.length-1].outSize:e[1],n=C.computeOptimalWindowSize(a);t.push({inSize:a,windowSize:n,outSize:Math.ceil(a/n)})}return t}function Mo(e,t,a,n){let r=zV(e.shape),s=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:u,outSize:d}=r[i],l,p;a==="mean"?l=i===0?new Wg({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:d},o):new Wg({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:d}):l=new DV({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:d},a),p=s,s=n.runWebGLProgram(l,[s],t),p.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(p)}return s}var LV=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[t[s]];this.outputShape=a,this.rank=a.length;let n=ut(this.rank),r=WV(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function WV(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let r=0;r<e.length;r++)n[e[r]]=a[r];return n.join()}var BV=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let a=new Array(e.length);for(let d=0;d<a.length;d++)a[d]=e[t[d]];if(this.outputShape=a,this.rank=a.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=ut(this.rank),r=K5("rc",this.rank),s=new Array(this.rank);for(let d=0;d<t.length;d++)s[t[d]]=r[d];let i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${a[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${a[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function hh(e,t,a){let n=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new BV(e.shape,t):new LV(e.shape,t);return a.runWebGLProgram(n,[e],e.dtype)}function VV(e,t,a,n){let r=t,s=e.shape.length,i=v.parseAxisParam(r,e.shape),o=i,u=C.getAxesPermutation(o,s),d=u!=null,l=e;d&&(l=hh(e,u,n),o=C.getInnerMostAxes(o.length,s)),C.assertAxesAreInnerMostDims("sum",o,s);let[p,c]=C.computeOutAndReduceShapes(l.shape,o),h=p;a&&(h=C.expandShapeToKeepDim(p,i));let f=v.sizeFromShape(c),m=v.sizeFromShape(e.shape)/f,g=pe({inputs:{x:l},attrs:{shape:[m,f]},backend:n}),y=Gd(e.dtype),x=Mo(g,y,"sum",n),A=pe({inputs:{x},attrs:{shape:h},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),d&&n.disposeIntermediateTensorInfo(l),A}function fh(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return VV(r,s,i,a)}var UV={kernelName:"Sum",backendName:"webgl",kernelFunc:fh};function ha(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{perm:s}=n,i=a,o=r.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=r.shape[s[l]];let d;if(i.shouldExecuteOnCPU([r])){let l=i.texData.get(r.dataId).values,p=h2(l,r.shape,r.dtype,s,u);d=i.makeTensorInfo(u,r.dtype);let c=i.texData.get(d.dataId);c.values=p}else d=hh(r,s,i);return d}var GV={kernelName:rr,backendName:"webgl",kernelFunc:ha},rw=1e3;function Sc({a:e,b:t,transposeA:a,transposeB:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let d=e.shape.length,l=t.shape.length,p=a?e.shape[d-2]:e.shape[d-1],c=n?t.shape[l-1]:t.shape[l-2],h=a?e.shape[d-1]:e.shape[d-2],f=n?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),A=Ro.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${n} must match.`);let b=a?[y,p,h]:[y,h,p],w=n?[x,f,c]:[x,c,f],S=pe({inputs:{x:e},backend:r,attrs:{shape:b}}),N=pe({inputs:{x:t},backend:r,attrs:{shape:w}}),T=[S,N],_=Math.max(y,x),P=a?S.shape[1]:S.shape[2],E=s!=null,I=i!=null,F=u==="leakyrelu",$=u!=null?pd(u,!0):null,z=E||I||F||$!=null,M;if((h===1||f===1)&&P>rw&&z===!1){let V=S,q=N;a&&(V=ha({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),T.push(V)),n&&(q=ha({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),T.push(q));let G=f!==1,B=f===1,K=V;G&&(K=pe({inputs:{x:V},backend:r,attrs:{shape:[_,P,1]}}),T.push(K));let X=f===1?2:1,J=q;B&&(J=pe({inputs:{x:q},backend:r,attrs:{shape:[_,1,P]}}),T.push(J));let ee=m2({inputs:{a:K,b:J},backend:r});M=fh({inputs:{x:ee},backend:r,attrs:{axis:X,keepDims:!0}}),T.push(ee)}else{let V=ea(e.dtype,t.dtype),q=new nw(b,w,[_,h,f],a,n,E,$,I,F),G=[S,N];if(s!=null&&G.push(s),I&&G.push(i),F){let B=r.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));G.push(B),T.push(B)}M=r.runWebGLProgram(q,G,V)}let H=pe({inputs:{x:M},backend:r,attrs:{shape:A}});T.push(M);for(let V of T)r.disposeIntermediateTensorInfo(V);return H}function HV(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:d,activation:l,leakyreluAlpha:p}=n;return Sc({a:r,b:s,transposeA:u,transposeB:d,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:l})}var jV={kernelName:Br,backendName:"webgl",kernelFunc:HV},Bg="return abs(x);";function qV(e){let{inputs:t,backend:a}=e,{x:n}=t;if(a.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=a.texData.get(n.dataId),i=q5(s.values);return a.makeTensorInfo(n.shape,n.dtype,i)}let r;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Mr(n.shape,Bg):r=new Wn(n.shape,Bg),a.runWebGLProgram(r,[n],n.dtype)}var XV={kernelName:"Abs",backendName:"webgl",kernelFunc:qV},KV=xn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,YV=Je({opSnippet:KV}),ZV={kernelName:Zs,backendName:"webgl",kernelFunc:YV},JV=xn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,QV=Je({opSnippet:JV}),eU={kernelName:Js,backendName:"webgl",kernelFunc:QV},Vg="return a + b;",tU=ta({opSnippet:Vg,packedOpSnippet:Vg,supportsComplex:!0,cpuKernelImpl:uB}),aU={kernelName:"Add",backendName:"webgl",kernelFunc:tU},nU=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let a=[];this.variableNames.forEach(r=>{a.push(`float v${r} = get${r}AtOutCoords();`)});let n=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        float result = ${n};
        setOutput(result);
      }
    `}},rU=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,s)=>`T${s}`);let a=[];this.variableNames.forEach(r=>{a.push(`vec4 v${r} = get${r}AtOutCoords();`)});let n=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${a.join(`
        `)}

        vec4 result = ${n};
        setOutput(result);
      }
    `}};function ec(e){let{inputs:t,backend:a}=e,n=t;if(n.length===1)return Ga({inputs:{x:n[0]},backend:a});if(n.length>U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(n.length/2),u=ec({inputs:n.slice(0,o),backend:a}),d=ec({inputs:n.slice(o),backend:a});return ec({inputs:[u,d],backend:a})}let r=n.map(o=>o.dtype).reduce((o,u)=>ea(o,u)),s=n.map(o=>o.shape),i=U().getBool("WEBGL_PACK")?new rU(n[0].shape,s):new nU(n[0].shape,s);return a.runWebGLProgram(i,n,r)}var sU={kernelName:Qs,backendName:"webgl",kernelFunc:ec};function iU(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,u=v.parseAxisParam(s,r.shape),d=u,l=C.getAxesPermutation(d,o),p=r;l!=null&&(p=ha({inputs:{x:r},backend:a,attrs:{perm:l}}),d=C.getInnerMostAxes(d.length,o)),C.assertAxesAreInnerMostDims("all",d,o);let[c,h]=C.computeOutAndReduceShapes(p.shape,d),f=v.sizeFromShape(h),m=pe({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=Mo(m,m.dtype,"all",a),y;if(i){let x=C.expandShapeToKeepDim(c,u);y=pe({inputs:{x:g},backend:a,attrs:{shape:x}})}else y=pe({inputs:{x:g},backend:a,attrs:{shape:c}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l!=null&&a.disposeIntermediateTensorInfo(p),y}var oU={kernelName:"All",backendName:"webgl",kernelFunc:iU};function lU(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,u=v.parseAxisParam(s,r.shape),d=u,l=C.getAxesPermutation(d,o),p=r;l!=null&&(p=ha({inputs:{x:r},backend:a,attrs:{perm:l}}),d=C.getInnerMostAxes(d.length,o)),C.assertAxesAreInnerMostDims("any",d,o);let[c,h]=C.computeOutAndReduceShapes(p.shape,d),f=v.sizeFromShape(h),m=pe({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=Mo(m,m.dtype,"any",a),y;if(i){let x=C.expandShapeToKeepDim(c,u);y=pe({inputs:{x:g},backend:a,attrs:{shape:x}})}else y=pe({inputs:{x:g},backend:a,attrs:{shape:c}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l!=null&&a.disposeIntermediateTensorInfo(p),y}var uU={kernelName:"Any",backendName:"webgl",kernelFunc:lU},dU=class{constructor(e,t,a){this.variableNames=["A"];let{windowSize:n,batchSize:r,outSize:s}=e;a||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];let i=t==="max"?">":"<",o=a?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},pU=class{constructor(e,t,a,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${a.charAt(0).toUpperCase()+a.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,u=ut(o),d=ca("coords",o),l,p;if(s===1){p=o+1;let N=ut(p);l=`
        ${N} sourceLocR = ${N}(${d.join()}, 0);
        ++${d[o-1]};
        ${N} sourceLocG = ${N}(${d.join()}, 0);
        ++${d[o-2]};
        ${N} sourceLocA = ${N}(${d.join()}, 0);
        --${d[o-1]};
        ${N} sourceLocB = ${N}(${d.join()}, 0);
        --${d[o-2]};`}else p=o,l=`
        ${u} sourceLocR = coords;
        ++${d[o-1]};
        ${u} sourceLocG = coords;
        ++${d[o-2]};
        ${u} sourceLocA = coords;
        --${d[o-1]};
        ${u} sourceLocB = coords;
        --${d[o-2]};`;let c=["x","y","z","w","u","v"].slice(0,p),h="."+c[p-1],f=c.map(N=>"int "+N),m=ca("sourceLocR",p-1).concat("inIdx.r"),g=ca("sourceLocG",p-1).concat("inIdx.g"),y=ca("sourceLocB",p-1).concat("inIdx.b"),x=ca("sourceLocA",p-1).concat("inIdx.a"),A=a==="max"?"greaterThan":"lessThan",b=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${x.join()})));`,w=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=n?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${c.join()}),
                                          vec2(${c.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${c.join()}),
                               vec2(${c.slice(-2).join()}));
      }
      ${S}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${d[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${d[o-2]} < ${i[o-2]-1};
        ${l}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${w};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${w};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function sw(e,t,a,n=null){let r=t.shape[0],s=t.shape[1];n!=null&&(r=n.shape[0],s=n.shape[1]);let i=C.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},u=new dU(o,a,n==null),d=[t];n!=null&&d.push(n);let l=e.runWebGLProgram(u,d,"int32");if(l.shape[1]===1)return l;let p=sw(e,t,a,l);return e.disposeIntermediateTensorInfo(l),p}function iw(e,t,a,n=null){let r=n!=null?n.shape:t.shape,s=r[r.length-1],i=C.computeOptimalWindowSize(s),o=new pU(r,i,a,n==null),u=n==null?[t]:[t,n],d=e.runWebGLProgram(o,u,"int32");if(d.shape.length===t.shape.length){let l=iw(e,t,a,d);return e.disposeIntermediateTensorInfo(d),l}return d}function ow(e,t,a,n){let r=[a];if(C.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,t.shape.length),!U().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,u=t;o&&(u=e.unpackTensor(t),s.push(u));let[d,l]=C.computeOutAndReduceShapes(u.shape,r),p=v.sizeFromShape(l),c=pe({inputs:{x:u},backend:e,attrs:{shape:[-1,p]}});s.push(c);let h=sw(e,c,n);s.push(h);let f=pe({inputs:{x:h},backend:e,attrs:{shape:d}});return s.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return iw(e,t,n)}function cU(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,d=[];o!=null&&(u=ha({inputs:{x:r},backend:a,attrs:{perm:o}}),d.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=ow(a,u,i[0],"max");return d.forEach(p=>a.disposeIntermediateTensorInfo(p)),l}var hU={kernelName:Il,backendName:"webgl",kernelFunc:cU};function fU(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,d=[];o!=null&&(u=ha({inputs:{x:r},backend:a,attrs:{perm:o}}),d.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=ow(a,u,i[0],"min");return d.forEach(p=>a.disposeIntermediateTensorInfo(p)),l}var mU={kernelName:Sl,backendName:"webgl",kernelFunc:fU},gU=xn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,yU=Je({opSnippet:gU}),xU={kernelName:ei,backendName:"webgl",kernelFunc:yU},AU=xn+"return log(x + sqrt(x * x + 1.0));",bU=Je({opSnippet:AU}),vU={kernelName:ti,backendName:"webgl",kernelFunc:bU},wU=xn+`
  return atan(x);
`,kU=Je({opSnippet:wU}),IU={kernelName:ai,backendName:"webgl",kernelFunc:kU},SU=f2+`
  return atan(a, b);
`,CU=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+$o+`
  return result;
`,NU=ta({opSnippet:SU,packedOpSnippet:CU}),TU={kernelName:ri,backendName:"webgl",kernelFunc:NU},RU=xn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,EU=Je({opSnippet:RU}),_U={kernelName:ni,backendName:"webgl",kernelFunc:EU},cd=class{constructor(e,t,a,n=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),a){this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${c}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${l};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?r?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / max(count, 1.0)");let b=Math.floor(s/4)*4,w=s%4,S=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${c}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${l};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${S}
          }

          int xC = xCCorner + ${b};
          if (${w===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${w===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${S}
          } else if (${w===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${S}
          }
        }
        setOutput(${A});
      }
    `}},g2=class{constructor(e,t,a,n=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,d=e.dilationDepth,l=e.dilationHeight,p=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x=t==="avg",A="0.0";if(x||(A="-1.0 / 1e-20"),a){this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${c};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${l}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / max(count, 1.0)");let S=Math.floor(s/4)*4,N=s%4,T=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${S}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${S};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${w});
      }
    `}};function $U(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;lu(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,d=1;v.assert(C.eitherStridesOrDilationsAreOne(i,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let l=C.computePool2DInfo(r.shape,s,i,d,o,u);if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))return Ga({inputs:{x:r},backend:a});let p=new cd(l,"avg",!1);return a.runWebGLProgram(p,[r],"float32")}var MU={kernelName:si,backendName:"webgl",kernelFunc:$U};function FU(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:d}=n,l=[1,1,1],p=C.computePool3DInfo(r.shape,s,i,l,o,u,d),c=new g2(p,"avg",!1);return a.runWebGLProgram(c,[r],"float32")}var PU={kernelName:Cl,backendName:"webgl",kernelFunc:FU},OU=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.top,l=u-1-e.padInfo.left,p=1/(t*a);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${l});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},DU=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,n=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,l=e.effectiveFilterDepth,p=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=p-1-e.padInfo.top,m=c-1-e.padInfo.left,g=1/(t*a*n);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function zU(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:d,dimRoundingMode:l}=n,p=[1,1,1],c=C.computePool3DInfo(i.shape,o,u,p,d,l),h=new DU(c);return a.runWebGLProgram(h,[r],i.dtype)}var LU={kernelName:wd,backendName:"webgl",kernelFunc:zU};function WU(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s;lu([r,s],"avgPoolGrad");let{filterSize:o,strides:u,pad:d}=n,l=C.computePool2DInfo(i.shape,o,u,1,d),p=new OU(l);return a.runWebGLProgram(p,[r],i.dtype)}var BU={kernelName:vd,backendName:"webgl",kernelFunc:WU};function VU(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;return Sc({a:r,b:s,transposeA:i,transposeB:o,backend:a})}var UU={kernelName:ii,backendName:"webgl",kernelFunc:VU},GU=class{constructor(e,t,a,n,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,a);let i="0.0";n!=null&&(C.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(C.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},HU=class{constructor(e,t,a,n,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,a);let i="vec4(0.0)";n!=null&&(C.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(C.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},jU=({inputs:e,backend:t,attrs:a})=>{let{x:n,mean:r,variance:s,offset:i,scale:o}=e;v.assert(r.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=a;u==null&&(u=.001);let d=[n,r,s],l=null;i!=null&&(l=i.shape,d.push(i));let p=null;o!=null&&(p=o.shape,d.push(o));let c=U().getBool("WEBGL_PACK_NORMALIZATION")?new HU(n.shape,r.shape,s.shape,l,p,u):new GU(n.shape,r.shape,s.shape,l,p,u);return t.runWebGLProgram(c,d,d[0].dtype)},qU={kernelName:Ni,backendName:"webgl",kernelFunc:jU},XU=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=ut(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let a=KU(this.rank),n,r=e.map((s,i)=>`sourceLoc.${r0[i]} = start[${i}] + coords.${r0[i]};`);n=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${n}
        setOutput(getSource(${a}));
      }
    `}},r0=["x","y","z","w","u","v"];function KU(e){if(e===1)return"sourceLoc";if(e<=6)return r0.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var YU=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=ut(this.rank),a=ca("coords",this.rank),n=ca("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${r})`,i=`
      result.x = ${s};
      if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${a[this.rank-1]};
      if (++${a[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${a[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((d,l)=>`start[${l}]`).join()});`:e.map((d,l)=>`${n[l]} = ${a[l]} + start[${l}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function ZU(e,t,a,n){let r=n.texData.get(e.dataId),s=n.makeTensorInfo(a,e.dtype),i=n.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=a,i.dtype=e.dtype;let o=wt.computeFlatOffset(t,v.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let u=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,u+1),s}function mu(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,size:i}=n,[o,u]=wt.parseSliceParams(r,s,i);if(wt.assertParamsValid(r,o,u),v.sizeFromShape(u)===0)return a.makeTensorInfo(u,r.dtype,[]);if(a.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=a.texData.get(r.dataId),c=BB(p.values,o,u,r.shape,r.dtype);return a.makeTensorInfo(u,r.dtype,c)}let{isPacked:d}=a.texData.get(r.dataId),l=wt.isSliceContinous(r.shape,o,u);if(d||!l){let p=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YU(u):new XU(u),c=[o];return a.runWebGLProgram(p,[r],r.dtype,c)}return a.uploadToGPU(r.dataId),ZU(r,o,u,a)}var JU={kernelName:Kl,backendName:"webgl",kernelFunc:mu},QU=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((x,A)=>x*A),u=C.getReshaped(r.shape,s,o),d=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(r.shape,s,o),p=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),h=[],f=pe({inputs:{x:r},backend:a,attrs:{shape:u}}),m=ha({inputs:{x:f},backend:a,attrs:{perm:d}}),g=pe({inputs:{x:m},backend:a,attrs:{shape:l}}),y=mu({inputs:{x:g},backend:a,attrs:{begin:p,size:c}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>a.disposeIntermediateTensorInfo(x)),y},eG={kernelName:Nl,backendName:"webgl",kernelFunc:QU};function tG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i}=n,o=a.readSync(r.dataId),u=a.readSync(s.dataId),d=j5(o,u,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,d)}var aG={kernelName:oi,backendName:"webgl",kernelFunc:tG},nG=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,rG=`
  return float(int(a.r) & int(b.r));
`;function sG(e){let{inputs:t,backend:a}=e,{a:n,b:r}=t,s=U().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=U().getNumber("WEBGL_VERSION");if(a.shouldExecuteOnCPU([n,r])||i===1){let u=a.texData.get(n.dataId).values,d=a.texData.get(r.dataId).values,[l,p]=pB(n.shape,r.shape,u,d,n.dtype),c=a.makeTensorInfo(p,n.dtype),h=a.texData.get(c.dataId);return h.values=l,c}let o;return s?o=new hu(nG,n.shape,r.shape,!1):o=new js(rG,n.shape,r.shape),a.runWebGLProgram(o,[n,r],n.dtype)}var iG={kernelName:Tl,backendName:"webgl",kernelFunc:sG};function oG(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t,s=a.readSync(n.dataId),i=a.readSync(r.dataId),o=C.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var lG={kernelName:Rl,backendName:"webgl",kernelFunc:oG},uG="return float(a != b);",lw=ta({opSnippet:uG,cpuKernelImpl:$B,dtype:"bool"}),dG={kernelName:Yi,backendName:"webgl",kernelFunc:lw};function rp(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.texData.get(n.dataId);return Ga({inputs:{x:r.complexTensorInfos.real},backend:a})}var pG={kernelName:Fd,backendName:"webgl",kernelFunc:rp},cG="return float(int(x));";function hG(e,t){let a=new Wn(e.shape,cG),n=t.runWebGLProgram(a,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function s0(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:s}=n;if(s==="complex64"){if(r.dtype==="complex64")return Ga({inputs:{x:r},backend:a});let i=Tn(r.shape),o=s0({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),u=ss({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=rp({inputs:{input:r},backend:a}),o=s0({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(i),o}if(!v.hasEncodingLoss(r.dtype,s)){let i=Ga({inputs:{x:r},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(a.shouldExecuteOnCPU([r])){let i=a.texData.get(r.dataId).values,[o,u,d]=cB(i,r.shape,r.dtype,s);return a.makeTensorInfo(o,u,d)}if(s==="int32")return hG(r,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=lw({inputs:{a:r,b:i},backend:a});return a.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var fG={kernelName:li,backendName:"webgl",kernelFunc:s0},Ug="return ceil(x);",mG=Je({opSnippet:Ug,packedOpSnippet:Ug,cpuKernelImpl:hB}),gG={kernelName:ui,backendName:"webgl",kernelFunc:mG},yG=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},xG=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function AG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=n,o;U().getBool("WEBGL_PACK_CLIP")?o=new xG(r.shape):o=new yG(r.shape);let u=[[s],[i]];return a.runWebGLProgram(o,[r],r.dtype,u)}var bG={kernelName:Qr,backendName:"webgl",kernelFunc:AG},vG=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function Gg(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function wG(e){let{inputs:t,backend:a}=e,{x:n}=t,r=a.texData.get(n.dataId),s=new vG(n.shape),i=[Gg(n,r.complexTensorInfos.real),Gg(n,r.complexTensorInfos.imag)];return a.runWebGLProgram(s,i,i[0].dtype)}var kG={kernelName:Id,backendName:"webgl",kernelFunc:wG},IG=class{constructor(e){this.outputShape=[],this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let a=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];a.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let n=t.length,r=t[t.length-1];a.push(`else setOutput(getT${n}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${a.join(`
        `)}
      }
    `}},SG=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=C.computeOutShape(e,t);let a=this.outputShape,n=a.length,r=ut(n),s=ca("coords",n),i=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let u=i[t],d=i.slice(-2),l=i.join(),p=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${l}), vec2(${d.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];p+=`
        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${_p(i,u,m)}),
            vec2(${_p(d,u,m)}));
        }`}let c=o.length,h=o[o.length-1];p+=`
        return getChannel(
          getT${c}(${_p(i,u,h)}),
          vec2(${_p(d,u,h)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${a[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${a[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${a[n-2]} &&
            ${s[n-1]} < ${a[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function _p(e,t,a){let n=e.indexOf(t);return e.map((r,s)=>s===n?`${r} - ${a}`:r).join()}function mh(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.texData.get(n.dataId);return Ga({inputs:{x:r.complexTensorInfos.imag},backend:a})}var CG={kernelName:_d,backendName:"webgl",kernelFunc:mh};function Pu(e,t,a){let n=e[0].dtype;if(n==="complex64"){let h=e.map(x=>rp({inputs:{input:x},backend:a})),f=e.map(x=>mh({inputs:{input:x},backend:a})),m=Pu(h,t,a),g=Pu(f,t,a),y=ss({inputs:{real:m,imag:g},backend:a});return h.forEach(x=>a.disposeIntermediateTensorInfo(x)),f.forEach(x=>a.disposeIntermediateTensorInfo(x)),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),y}let r=a.shouldExecuteOnCPU(e);if(n==="string"&&(r=!0),r){let h=e.map(b=>{let w=[-1,v.sizeFromShape(b.shape.slice(t))];return pe({inputs:{x:b},backend:a,attrs:{shape:w}})}),f=h.map(b=>({vals:a.readSync(b.dataId),shape:b.shape})),m=C.computeOutShape(h.map(b=>b.shape),1),g=h[0].shape[0]===1,y=fB(f,m,n,g),x=C.computeOutShape(e.map(b=>b.shape),t),A=a.makeTensorInfo(x,n,y);return h.forEach(b=>a.disposeIntermediateTensorInfo(b)),A}let s=e.filter(h=>v.sizeFromShape(h.shape)>0),i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let h=i?new Wn(e[0].shape,Sr):new Mr(e[0].shape,Sr);return a.runWebGLProgram(h,e,n)}let o=U().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let h=[];for(let m=0;m<s.length;m+=o){let g=s.slice(m,m+o);h.push(Pu(g,t,a))}let f=Pu(h,t,a);for(let m of h)a.disposeIntermediateTensorInfo(m);return f}if(i){let h=new SG(s.map(f=>f.shape),t);return a.runWebGLProgram(h,s,n)}let{tensors2D:u,outShape:d}=NG(s,t,a),l=new IG(u.map(h=>h.shape)),p=a.runWebGLProgram(l,u,n);u.forEach(h=>a.disposeIntermediateTensorInfo(h));let c=pe({inputs:{x:p},attrs:{shape:d},backend:a});return a.disposeIntermediateTensorInfo(p),c}function NG(e,t,a){let n=C.computeOutShape(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>pe({inputs:{x:r},attrs:{shape:[-1,v.sizeFromShape(r.shape.slice(t))]},backend:a})),outShape:n}}function uw(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,s=v.parseAxisParam(r,t[0].shape)[0],i=t.map(d=>d.shape);C.assertParamsConsistent(i,s);let o=C.computeOutShape(t.map(d=>d.shape),s);if(v.sizeFromShape(o)===0)return a.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(d=>v.sizeFromShape(d.shape)>0);return u.length===1?Ga({inputs:{x:u[0]},backend:a}):Pu(u,s,a)}var TG={kernelName:El,backendName:"webgl",kernelFunc:uw},dw=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,d=e.dilationHeight,l=e.dilationWidth,p=e.filterHeight,c=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,y=m?2:3,x=m?3:1,A="",b="";a&&(n?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:A=`
          float activation(float x) {
            ${a}
          }
        `,b="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${x}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${c}; wC++) {
            int xC = xCCorner + wC * ${l};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${w}
        ${b}
        setOutput(result);
      }
    `}},RG=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,a=e.padInfo.top,n=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,l=e.filterDepth,p=e.filterHeight,c=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${a}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${l}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${c}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},pw=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=aa(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,l=d,p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<d;m++)p+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;p+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<d;m++)p+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(l+1)/2;m++){let g=m*2;if(p+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<d&&(s%2===1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?p+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:p+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<d)){let y=s%2===0?v.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?p+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:p+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?p+=`
                     xC${g+1} = xTexelC${g};
                     `:p+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<d&&(s%2===1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<d&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<d&&(p+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<d&&(p+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<d&&(p+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   `,p+=`
     }
   `,p+=`
     }
   `;let c="",h="";a&&(n?c=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${a}
         }`:r?c=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${a}
         }`:c=`vec4 activation(vec4 x) {
           ${a}
         }`,h="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${c}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${h}
         setOutput(result);
       }
     `}},EG=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=aa(this.outputShape.length);let{dataFormat:a}=t,n=ma(),r=a==="channelsLast",s=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let d=0;d<=1;d++)for(let l=0;l<=1;l++)u+=`
          blockIndex = rc.z + ${l};
          pos = rc.y + ${d};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${d*2+l}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${d*2+l}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}};function Cc(e,t){let a=e.length;return a>=3?t?[...e.slice(0,-3),e[a-3]*e[a-2],e[a-1]]:[...e.slice(0,-3),e[a-3],e[a-2]*e[a-1]]:!t&&a===1&&e[0]>1?[e[0],1]:null}function cw({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,d=n.texData.get(e.dataId),l=a.inChannels,p=u[0]*u[1]*u[2],c=a.outChannels,h=a.dataFormat==="channelsLast",f=!1,m=!1,g,y=[];if(s!=null){let x=Cc(s.shape,h);x!=null&&(s=pe({inputs:{x:s},backend:n,attrs:{shape:x}}),y.push(s))}if(r!=null){let x=Cc(r.shape,h);x!=null&&(r=pe({inputs:{x:r},backend:n,attrs:{shape:x}}),y.push(r))}if(!((p===1||c===1)&&l>rw)&&d.isPacked&&h&&d.texture!=null&&u[2]%2!==0&&v.arraysEqual(d.shape.slice(-3),u.slice(-3))){let x=u[0]*u[1]*(u[2]+1),A={dataId:e.dataId,shape:[1,x,a.inChannels],dtype:e.dtype},b=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,v.assert(dd(d.shape,A.shape),()=>`packed reshape ${d.shape} to ${A.shape} isn't free`);let w=pe({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(w);let S=Sc({a:A,b:w,backend:n,transposeA:f,transposeB:m,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),N=n.texData.get(S.dataId);v.assert(N.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=b,N.shape=a.outShape,g=Ga({inputs:{x:S},backend:n}),g.shape=a.outShape,y.push(S)}else{let x=a.outHeight*a.outWidth,A=pe({inputs:{x:e},backend:n,attrs:{shape:h?[a.batchSize,x,a.inChannels]:[a.batchSize,a.inChannels,x]}}),b=pe({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}}),w=Sc({a:h?A:b,b:h?b:A,transposeA:!h,transposeB:m,backend:n,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=pe({inputs:{x:w},backend:n,attrs:{shape:a.outShape}}),y.push(A),y.push(b),y.push(w)}for(let x of y)n.disposeIntermediateTensorInfo(x);return g}function hw({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:d,inChannels:l,outWidth:p,outHeight:c,dataFormat:h}=a,f=h==="channelsLast",m=u*d*l,g=c*p,y=[a.batchSize,m,g],x=!0,A=!1,b=[];if(s!=null){let V=Cc(s.shape,f);V!=null&&(s=pe({inputs:{x:s},backend:n,attrs:{shape:V}}),b.push(s))}if(r!=null){let V=Cc(r.shape,f);V!=null&&(r=pe({inputs:{x:r},backend:n,attrs:{shape:V}}),b.push(r))}let w=pe({inputs:{x:t},backend:n,attrs:{shape:[1,m,v.sizeFromShape(t.shape)/m]}});b.push(w);let S=new EG(y,a),N=[e.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],T=n.runWebGLProgram(S,[e],"float32",N),_=pe({inputs:{x:T},backend:n,attrs:{shape:y}});b.push(T),b.push(_);let P=r!=null,E=s!=null,I=o==="leakyrelu",F=o?pd(o,!0):null,$=new nw(f?_.shape:w.shape,f?w.shape:_.shape,f?[a.batchSize,g,a.outChannels]:[a.batchSize,a.outChannels,g],x,A,P,F,E,I),z=f?[_,w]:[w,_];if(r&&z.push(r),E&&z.push(s),I){let V=n.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));z.push(V),b.push(V)}let M=n.runWebGLProgram($,z,"float32"),H=pe({inputs:{x:M},backend:n,attrs:{shape:a.outShape}});b.push(M);for(let V of b)n.disposeIntermediateTensorInfo(V);return H}function _G(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:d,dimRoundingMode:l}=n,p=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(r.shape,s.shape,i,d,o,l,!1,p),h;if(c.filterHeight===1&&c.filterWidth===1&&c.dilationHeight===1&&c.dilationWidth===1&&c.strideHeight===1&&c.strideWidth===1&&(c.padInfo.type==="SAME"||c.padInfo.type==="VALID"))h=cw({x:r,filter:s,convInfo:c,backend:a});else if(c.strideWidth<=2&&p==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){let m=new pw(c),g=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];h=a.runWebGLProgram(m,[r,s],"float32",g)}else if(U().getBool("WEBGL_CONV_IM2COL"))h=hw({x:r,filter:s,convInfo:c,backend:a});else{let m=new dw(c);h=a.runWebGLProgram(m,[r,s],"float32")}let f=pe({inputs:{x:h},backend:a,attrs:{shape:c.outShape}});return a.disposeIntermediateTensorInfo(h),f}var $G={kernelName:di,backendName:"webgl",kernelFunc:_G},MG=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,n=e.padInfo.top,r=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},FG=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s?1:2,d=s?2:3,l=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${l}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},PG=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,a=e.strideHeight,n=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${a} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},OG=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,a=e.filterHeight,n=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=a-1-e.padInfo.top,d=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${a}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${a} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function DG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:d,filterShape:l}=n,p=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(r.shape,l,i,1,o,d,!1,p),h=new MG(c);return a.runWebGLProgram(h,[r,s],"float32")}var zG={kernelName:Sd,backendName:"webgl",kernelFunc:DG},LG=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=aa(this.outputShape.length);let t=e.filterHeight,a=e.filterWidth,n=t-1-e.padInfo.top,r=a-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            int wCPerm = ${a} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function WG(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:d,dimRoundingMode:l}=n,p=C.convertConv2DDataFormat(d),c=C.computeConv2DInfo(i,s.shape,o,1,u,l,!1,p);if(U().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let h=[[c.strideHeight,c.strideWidth]],f=new LG(c);return a.runWebGLProgram(f,[r,s],"float32",h)}else{let h=new FG(c);return a.runWebGLProgram(h,[r,s],"float32")}}var BG={kernelName:pi,backendName:"webgl",kernelFunc:WG};function VG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n,d=C.computeConv3DInfo(r.shape,s.shape,i,u,o),l=new RG(d);return a.runWebGLProgram(l,[r,s],"float32")}var UG={kernelName:ci,backendName:"webgl",kernelFunc:VG};function GG(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=n,d=C.computeConv3DInfo(r.shape,u,i,1,o),l=new PG(d);return a.runWebGLProgram(l,[r,s],"float32")}var HG={kernelName:_l,backendName:"webgl",kernelFunc:GG};function jG(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=n,d=C.computeConv3DInfo(u,s.shape,o,1,i),l=new OG(d);return a.runWebGLProgram(l,[r,s],"float32")}var qG={kernelName:hi,backendName:"webgl",kernelFunc:jG},XG=fu+`
  return cos(x);
`,KG=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${$o}
  return result;
`,YG=Je({opSnippet:XG,packedOpSnippet:KG}),ZG={kernelName:"Cos",backendName:"webgl",kernelFunc:YG},JG=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,QG=Je({opSnippet:JG}),eH={kernelName:fi,backendName:"webgl",kernelFunc:QG},tH=class{constructor(e,t,a,n,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,u]=e,[d]=t,[l,p]=a;this.outputShape=[d,l,p,u];let c=n==="bilinear"?1:0,[h,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,y]=l>1?[`${(i-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[x,A,b]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${x});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${A};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${c} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},aH=e=>{let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:d}=n,l=new tH(r.shape,s.shape,o,u,d);return a.runWebGLProgram(l,[r,s,i],"float32")},nH={kernelName:yi,backendName:"webgl",kernelFunc:aH},hd;(function(e){e.Prod="*",e.Sum="+"})(hd||(hd={}));var Hg=class{constructor(e,t,a,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,s=this.op===hd.Prod?"1.0":"0.0",i=a?s:`getX(${jg(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],u="",d="";a?(u=n?`end != ${o-1}`:"end != 0",d=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${o}`:"end >= pow2",d=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ut(r)} coords = getOutputCoords();
        int end = ${qg(r,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${d};
          ${qg(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${jg(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function jg(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function qg(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function fw(e,t,a,n,r,s){let i=t.shape.length,o=C.getAxesPermutation([n],i),u=t;o!=null&&(u=ha({inputs:{x:t},backend:a,attrs:{perm:o}}));let d=C.getInnerMostAxes(1,i)[0];if(d!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let l=u.shape[d],p=Ga({inputs:{x:u},backend:a});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let h=new Hg(e,u.shape,!1,s),f=[[c]],m=p;p=a.runWebGLProgram(h,[p],p.dtype,f),a.disposeIntermediateTensorInfo(m)}if(r){let c=new Hg(e,u.shape,r,s),h=p;p=a.runWebGLProgram(c,[p],p.dtype),a.disposeIntermediateTensorInfo(h)}if(o!=null){let c=C.getUndoAxesPermutation(o),h=ha({inputs:{x:p},backend:a,attrs:{perm:c}});return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(u),h}return p}function rH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return fw(hd.Prod,r,a,s,i,o)}var sH={kernelName:mi,backendName:"webgl",kernelFunc:rH};function iH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return fw(hd.Sum,r,a,s,i,o)}var oH={kernelName:gi,backendName:"webgl",kernelFunc:iH};function lH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=n;if(r.shape.length===1){let u=a.readSync(r.dataId),d=a.readSync(s.dataId),l=j5(u,d,s.dtype,s.shape,i);return a.makeTensorInfo([i],s.dtype,l)}else if(r.shape.length===2){let u=a.bufferSync(r),d=a.bufferSync(s),l=dB(u,d,i,o);return a.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var uH={kernelName:$l,backendName:"webgl",kernelFunc:lH},dH=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=a,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function pH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:s,dataFormat:i}=n,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],d=i==="NHWC"?r.shape[2]:r.shape[3],l=i==="NHWC"?r.shape[3]:r.shape[1],p=u*s,c=d*s,h=l/(s*s),f=i==="NHWC"?[o,p,c,h]:[o,h,p,c],m=new dH(f,s,i);return a.runWebGLProgram(m,[r],r.dtype)}var cH={kernelName:xi,backendName:"webgl",kernelFunc:pH},mw=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=aa(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,u="",d="";a&&(n?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:u=`
          float activation(float x) {
            ${a}
          }
        `,d="result = activation(result);");let l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${l}
        ${d}
        setOutput(result);
      }
    `}},gw=class{constructor(e,t=!1,a=null,n=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=aa(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,d=e.filterHeight,l=e.filterWidth,p=l,c=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)c+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;c+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let g=0;g<l;g++)c+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;c+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){let y=g*2;if(c+=`
          xC = xCCorner + ${y*u};
          `,o===1){if(y<l&&(i%2===1?(c+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,u===1&&y>0?c+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:c+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):c+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<l)){let x=i%2===0?v.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(c+=`
                  xCOffset = xC + imod(pads[1], 2) + ${x};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,u>1?c+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:c+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):x===1?c+=`
                    xC${y+1} = xTexelC${y};
                    `:c+=`
                    xCOffset = xC + ${x};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<l&&(i%2===1?(c+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<l&&(c+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(c+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<l&&(c+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<l&&(c+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<l&&(c+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}c+=`
    }
  `,c+=`
      }
    `;let h="",f="";a&&(n?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:h=`vec4 activation(vec4 x) {
          ${a}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${c}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function hH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:d}=n,l=u;l==null&&(l=[1,1]),v.assert(C.eitherStridesOrDilationsAreOne(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let p=C.computeConv2DInfo(r.shape,s.shape,i,l,o,d,!0),c;U().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?c=new gw(p):c=new mw(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return a.runWebGLProgram(c,[r,s],"float32",h)}var fH={kernelName:Ai,backendName:"webgl",kernelFunc:hH},mH=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,a=e.strideWidth,n=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${a} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},gH=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,a=e.filterWidth,n=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=a-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${a} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function yH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:d,filterShape:l}=n,p=C.computeConv2DInfo(r.shape,l,i,o,u,d,!0),c=new mH(p);return a.runWebGLProgram(c,[r,s],"float32")}var xH={kernelName:Cd,backendName:"webgl",kernelFunc:yH};function AH(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:d,inputShape:l}=n,p=C.computeConv2DInfo(l,s.shape,i,o,u,d,!0),c=new gH(p);return a.runWebGLProgram(c,[r,s],"float32")}var bH={kernelName:Nd,backendName:"webgl",kernelFunc:AH},vH=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function wH(e){let{inputs:t,backend:a}=e,{x:n}=t,r=[...n.shape,...n.shape],s=v.sizeFromShape(n.shape),i=pe({inputs:{x:n},backend:a,attrs:{shape:[s]}}),o=new vH(s),u=a.runWebGLProgram(o,[i],i.dtype),d=pe({inputs:{x:u},backend:a,attrs:{shape:r}});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(u),d}var kH={kernelName:Ml,backendName:"webgl",kernelFunc:wH},IH=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:a,padInfo:n,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:d}=e,{top:l,left:p}=n;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${s});
      const ivec2 pads = ivec2(${l}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${a}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function SH(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n,d=C.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u),l,p=new IH(d);l=a.runWebGLProgram(p,[r,s],"float32");let c=pe({inputs:{x:l},backend:a,attrs:{shape:d.outShape}});return a.disposeIntermediateTensorInfo(l),c}var CH={kernelName:bi,backendName:"webgl",kernelFunc:SH};function NH(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,s=t,{allDims:i,summedDims:o,idDims:u}=C.decodeEinsumEquation(r,s.length);C.checkEinsumDimSizes(i.length,u,s);let{path:d,steps:l}=C.getEinsumComputePath(o,u),p=l.length,c=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of l[m]){let{permutationIndices:y,expandDims:x}=C.getEinsumPermutation(h,u[g]),A;C.isIdentityPermutation(y)?A=s[g]:(A=ha({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=pe({inputs:{x:A},backend:a,attrs:{shape:b}}),f.push(A)),c===null?c=A:(c=m2({inputs:{a:A,b:c},backend:a}),f.push(c))}m<p-1&&(d[m]>=0&&(c=fh({inputs:{x:c},backend:a,attrs:{axis:d[m]-(i.length-h),keepDims:!1}}),f.push(c)),h--)}for(let m of f)m!==c&&a.disposeIntermediateTensorInfo(m);return c}var TH={kernelName:Rd,backendName:"webgl",kernelFunc:NH},RH="return (x >= 0.0) ? x : (exp(x) - 1.0);",EH=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,_H=Je({opSnippet:RH,packedOpSnippet:EH}),$H={kernelName:"Elu",backendName:"webgl",kernelFunc:_H},MH="return (b >= 0.0) ? a : a * (b + 1.0);",FH=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,PH=e=>{let{inputs:t,backend:a}=e,{dy:n,y:r}=t,s=U().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new hu(FH,n.shape,r.shape):new js(MH,n.shape,r.shape);return a.runWebGLProgram(s,[n,r],n.dtype)},OH={kernelName:Fl,backendName:"webgl",kernelFunc:PH},DH=`
  return vec4(equal(a, b));
`,zH="return float(a == b);",LH=ta({opSnippet:zH,packedOpSnippet:DH,dtype:"bool",cpuKernelImpl:mB}),WH={kernelName:wi,backendName:"webgl",kernelFunc:LH},BH=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${C.ERF_P};
  float a1 = ${C.ERF_A1};
  float a2 = ${C.ERF_A2};
  float a3 = ${C.ERF_A3};
  float a4 = ${C.ERF_A4};
  float a5 = ${C.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,VH=Je({opSnippet:BH}),UH={kernelName:"Erf",backendName:"webgl",kernelFunc:VH},GH=fu+`
  return exp(x);
`,HH=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yw=Je({opSnippet:GH,packedOpSnippet:HH,cpuKernelImpl:gB,dtype:"float32"}),jH={kernelName:"Exp",backendName:"webgl",kernelFunc:yw};function i0(e){let{inputs:t,attrs:a,backend:n}=e,{dim:r}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),u=r;return r<0&&(v.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),pe({inputs:{x:s},backend:n,attrs:{shape:o}})}var qH={kernelName:Pl,backendName:"webgl",kernelFunc:i0},Xg="return exp(x) - 1.0;",XH=Je({opSnippet:Xg,packedOpSnippet:Xg,cpuKernelImpl:yB}),KH={kernelName:ki,backendName:"webgl",kernelFunc:XH},Kg=class{constructor(e,t,a){this.variableNames=["real","imag"];let n=t[1];this.outputShape=t;let r=a?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=a?`${n}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${n});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${n}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function xw(e,t,a){let n=a.texData.get(e.dataId),r=v.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=r/s,o=pe({inputs:{x:e},backend:a,attrs:{shape:[i,s]}}),u=o.shape,d=new Kg("real",u,t),l=new Kg("imag",u,t),p=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],c=a.runWebGLProgram(d,p,"float32"),h=a.runWebGLProgram(l,p,"float32"),f=ss({inputs:{real:c,imag:h},backend:a});a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(h);let m=pe({inputs:{x:f},backend:a,attrs:{shape:e.shape}});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(f),m}function YH(e){let{inputs:t,backend:a}=e,{input:n}=t;return xw(n,!1,a)}var ZH={kernelName:"FFT",backendName:"webgl",kernelFunc:YH},JH=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function sp(e){let{backend:t,attrs:a}=e,{shape:n,value:r}=a,{dtype:s}=a;if(s=s||v.inferDtype(r),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(n));return i.fill(r),t.makeTensorInfo(n,s,i)}else{let i=new JH(n,r),o=[[r]];return t.runWebGLProgram(i,[],s,o)}}var QH={kernelName:Ol,backendName:"webgl",kernelFunc:sp},ej=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},tj={kernelName:Ii,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,n=t,r=new ej(a.shape);return n.runWebGLProgram(r,[a],a.dtype)}},Yg="return floor(x);",aj=Je({opSnippet:Yg,packedOpSnippet:Yg,cpuKernelImpl:xB}),nj={kernelName:Si,backendName:"webgl",kernelFunc:aj},rj=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,sj=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,ij=ta({opSnippet:rj,packedOpSnippet:sj,dtype:"int32"}),oj={kernelName:Ci,backendName:"webgl",kernelFunc:ij},lj=class{constructor(e){this.variableNames=["A"];let t=ma(),[a,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${a}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},uj=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=ma(),[a,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${a}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},dj={kernelName:Yu,backendName:"webgl",kernelFunc:pj},Uo,Lh=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function pj(e){let{inputs:t,backend:a,attrs:n}=e,{pixels:r}=t,{numChannels:s}=n,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[u,d]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[d,u],p=[d,u,s];if(o||i){let m=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Uo==null||m!==Lh)&&(Lh=m,Uo=document.createElement("canvas").getContext("2d",{willReadFrequently:Lh})),Uo.canvas.width=u,Uo.canvas.height=d,Uo.drawImage(r,0,0,u,d),r=Uo.canvas}let c=a.makeTensorInfo(l,"int32");a.texData.get(c.dataId).usage=Qa.PIXELS,a.gpgpu.uploadPixelDataToTexture(a.getTexture(c.dataId),r);let h=U().getBool("WEBGL_PACK")?new uj(p):new lj(p),f=a.runWebGLProgram(h,[c],"int32");return a.disposeData(c.dataId),f}function cj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dataFormat:l,dilations:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=n,m=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(r.shape,s.shape,u,p,d,c,!1,m),y,x=[],A=i!=null,b=o!=null,w=h==="leakyrelu",S=()=>{let T=[r,s],_=(P,E)=>{if(E==="NCHW"&&P.shape.length===1&&P.shape[0]!==1){let I=pe({inputs:{x:P},backend:a,attrs:{shape:[P.shape[0],1,1]}});return x.push(I),I}return P};if(A&&T.push(_(i,l)),b&&T.push(_(o,l)),w){let P=a.makeTensorInfo([],"float32",v.createScalarValue(f,"float32"));T.push(P),x.push(P)}return T};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=cw({x:r,filter:s,convInfo:g,backend:a,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&U().getBool("WEBGL_EXP_CONV")){let T=h?pd(h,!0):null,_=new pw(g,A,T,b,w),P=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=S();y=a.runWebGLProgram(_,E,"float32",P)}else if(U().getBool("WEBGL_CONV_IM2COL"))y=hw({x:r,filter:s,convInfo:g,backend:a,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{let T=h?pd(h,!1):null,_=new dw(g,A,T,b,w),P=S();y=a.runWebGLProgram(_,P,"float32")}let N=pe({inputs:{x:y},backend:a,attrs:{shape:g.outShape}});return x.push(y),x.forEach(T=>a.disposeIntermediateTensorInfo(T)),N}var hj={kernelName:Vr,backendName:"webgl",kernelFunc:cj};function fj(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dilations:l,dimRoundingMode:p,activation:c,leakyreluAlpha:h}=n,f=[],m=l;m==null&&(m=[1,1]),v.assert(C.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);let g=C.computeConv2DInfo(r.shape,s.shape,u,m,d,p,!0),y=U().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=c?pd(c,y):null,A=[r,s],b=i!=null,w=o!=null,S=c==="leakyrelu";if(b&&A.push(i),w&&A.push(o),S){let P=a.makeTensorInfo([],"float32",v.createScalarValue(h,"float32"));A.push(P),f.push(P)}let N;y?N=new gw(g,b,x,w,S):N=new mw(g,b,x,w,S);let T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=a.runWebGLProgram(N,A,"float32",T);return f.forEach(P=>a.disposeIntermediateTensorInfo(P)),_}var mj={kernelName:Ur,backendName:"webgl",kernelFunc:fj},gj=class{constructor(e,t,a,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=a;let r=ut(a.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function yj(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,s=r.shape,i=s[s.length-1],o=v.sizeFromShape(n.shape),[u,d,l,p]=C.prepareAndValidate(n,r),c=pe({inputs:{x:r},backend:a,attrs:{shape:[d,i]}}),h=pe({inputs:{x:n},backend:a,attrs:{shape:[v.sizeFromShape(n.shape)/l,l]}});if(a.shouldExecuteOnCPU([n,r])||n.dtype==="string"){let y=a.readSync(r.dataId),x=a.bufferSync(n),A=AB(y,x,n.dtype,d,i,l,p,n.shape,o);return a.makeTensorInfo(u,n.dtype,A.values)}let f=new gj(i,p,[d,l],n.shape),m=a.runWebGLProgram(f,[h,c],h.dtype),g=pe({inputs:{x:m},backend:a,attrs:{shape:u}});return a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(m),g}var xj={kernelName:Ti,backendName:"webgl",kernelFunc:yj},Aj=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let a=ut(this.rank),n=bj(e);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}};function bj(e,t){let a=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)r===2?n.push("index"):n.push(`${a[r]}`);return n.join()}function Aw(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=n,u=v.parseAxisParam(i,r.shape)[0];if(U().get("DEBUG")){let x=a.readSync(s.dataId),A=r.shape[u];for(let b=0;b<x.length;++b){let w=x[b];v.assert(w<=A-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${A-1}]`)}}let d=C.segment_util.collectGatherOpShapeInfo(r,s,u,o),l=v.sizeFromShape(s.shape),p=[],c=pe({inputs:{x:r},backend:a,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=pe({inputs:{x:s},backend:a,attrs:{shape:[d.batchSize,l/d.batchSize]}});p.push(c),p.push(h);let f=[d.batchSize,d.outerSize,l/d.batchSize,d.sliceSize];if(a.shouldExecuteOnCPU([r,s])||r.dtype==="string"){let x=a.bufferSync(h),A=a.bufferSync(c),b=bB(A,x,f);return p.forEach(w=>a.disposeIntermediateTensorInfo(w)),a.makeTensorInfo(d.outputShape,b.dtype,b.values)}let m=new Aj(c.shape,f),g=a.runWebGLProgram(m,[c,h],c.dtype);p.push(g);let y=pe({inputs:{x:g},backend:a,attrs:{shape:d.outputShape}});return p.forEach(x=>a.disposeIntermediateTensorInfo(x)),y}var vj={kernelName:Dl,backendName:"webgl",kernelFunc:Aw},wj="return float(a > b);",kj=`
  return vec4(greaterThan(a, b));
`,Ij=ta({opSnippet:wj,packedOpSnippet:kj,cpuKernelImpl:vB,dtype:"bool"}),Sj={kernelName:Ri,backendName:"webgl",kernelFunc:Ij},Cj="return float(a >= b);",Nj=`
  return vec4(greaterThanEqual(a, b));
`,Tj=ta({opSnippet:Cj,packedOpSnippet:Nj,dtype:"bool",cpuKernelImpl:wB}),Rj={kernelName:Ei,backendName:"webgl",kernelFunc:Tj};function Ej(e){let{inputs:t,backend:a}=e,{input:n}=t;return xw(n,!0,a)}var _j={kernelName:Ed,backendName:"webgl",kernelFunc:Ej},$j="return float(!isnan(x) && !isinf(x));",Mj=Je({opSnippet:$j,dtype:"bool"}),Fj={kernelName:$i,backendName:"webgl",kernelFunc:Mj},Pj="return float(isinf(x));",Oj=Je({opSnippet:Pj,dtype:"bool"}),Dj={kernelName:Mi,backendName:"webgl",kernelFunc:Oj},zj="return float(isnan(x));",Lj=Je({opSnippet:zj,dtype:"bool"}),Wj={kernelName:Fi,backendName:"webgl",kernelFunc:Lj},Bj="return float(a < b);",Vj=`
  return vec4(lessThan(a, b));
`,Uj=ta({opSnippet:Bj,packedOpSnippet:Vj,cpuKernelImpl:kB,dtype:"bool"}),Gj={kernelName:Oi,backendName:"webgl",kernelFunc:Uj},Hj="return float(a <= b);",jj=`
  return vec4(lessThanEqual(a, b));
`,qj=ta({opSnippet:Hj,packedOpSnippet:jj,cpuKernelImpl:IB,dtype:"bool"}),Xj={kernelName:Di,backendName:"webgl",kernelFunc:qj};function Kj(e){let{backend:t,attrs:a}=e,{start:n,stop:r,num:s}=a,i=SB(n,r,s);return t.makeTensorInfo([i.length],"float32",i)}var Yj={kernelName:zi,backendName:"webgl",kernelFunc:Kj},Zj=fu+`
  return x < 0.0 ? 0./0. : log(x);
`,Jj=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Qj=Je({opSnippet:Zj,packedOpSnippet:Jj,cpuKernelImpl:CB}),eq={kernelName:"Log",backendName:"webgl",kernelFunc:Qj},tq=fu+`
  return log(1.0 + x);
`,aq=Je({opSnippet:tq}),nq={kernelName:Li,backendName:"webgl",kernelFunc:aq},rq="return float(a >= 1.0 && b >= 1.0);",sq=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,iq=ta({opSnippet:rq,packedOpSnippet:sq,dtype:"bool"}),oq={kernelName:Wi,backendName:"webgl",kernelFunc:iq},lq="return float(!(x >= 1.0));",uq=Je({opSnippet:lq}),dq={kernelName:Bi,backendName:"webgl",kernelFunc:uq},pq="return float(a >= 1.0 || b >= 1.0);",cq=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,hq=ta({opSnippet:pq,packedOpSnippet:cq,dtype:"bool"}),fq={kernelName:Vi,backendName:"webgl",kernelFunc:hq},mq=class{constructor(e,t,a,n,r){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${a}) + float(${n}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},gq=class{constructor(e,t,a,n,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${a}) + float(${n}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},yq=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n,d=U().getBool("WEBGL_PACK_NORMALIZATION")?new gq(r.shape,s,i,o,u):new mq(r.shape,s,i,o,u);return a.runWebGLProgram(d,[r],r.dtype)},xq={kernelName:"LRN",backendName:"webgl",kernelFunc:yq},Aq=class{constructor(e,t,a,n,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=a,this.alpha=n,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${a});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},bq=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:d,beta:l}=n,p=new Aq(r.shape,o,u,d,l);return a.runWebGLProgram(p,[r,s,i],r.dtype)},vq={kernelName:zl,backendName:"webgl",kernelFunc:bq};function wq(e,t,a,n){let r=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/r,i=pe({inputs:{x:e},attrs:{shape:[s,r]},backend:n}),o=Mo(i,e.dtype,"max",n),u=pe({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}function bw(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=n,o=r.shape.length,u=v.parseAxisParam(s,r.shape),d=u,l=C.getAxesPermutation(d,o),p=l!=null,c=a.shouldExecuteOnCPU([r]),h=r;if(p){if(c){let x=a.texData.get(h.dataId).values,A=new Array(o);for(let S=0;S<A.length;S++)A[S]=r.shape[l[S]];let b=h2(x,r.shape,r.dtype,l,A);h=a.makeTensorInfo(A,r.dtype);let w=a.texData.get(h.dataId);w.values=b}else h=hh(r,l,a);d=C.getInnerMostAxes(d.length,o)}C.assertAxesAreInnerMostDims("max",d,o);let[f,m]=C.computeOutAndReduceShapes(h.shape,d),g=f;i&&(g=C.expandShapeToKeepDim(f,u));let y;if(c){let x=a.texData.get(h.dataId).values,A=NB(x,v.sizeFromShape(m),g,r.dtype);y=a.makeTensorInfo(g,r.dtype);let b=a.texData.get(y.dataId);b.values=A}else y=wq(h,m,g,a);return p&&a.disposeIntermediateTensorInfo(h),y}var kq={kernelName:"Max",backendName:"webgl",kernelFunc:bw},Iq=f2+`
  return max(a, b);
`,Sq=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+$o+`
  return result;
`,Cq=ta({opSnippet:Iq,packedOpSnippet:Sq,cpuKernelImpl:TB}),Nq={kernelName:Ui,backendName:"webgl",kernelFunc:Cq};function Tq(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;lu(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,d=1;v.assert(C.eitherStridesOrDilationsAreOne(i,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let l=C.computePool2DInfo(r.shape,s,i,d,o,u);if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))return Ga({inputs:{x:r},backend:a});let p=new cd(l,"max",!1);return a.runWebGLProgram(p,[r],r.dtype)}var Rq={kernelName:Gi,backendName:"webgl",kernelFunc:Tq};function Eq(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:d}=n,l=[1,1,1],p=C.computePool3DInfo(r.shape,s,i,l,o,d,u),c=new g2(p,"max",!1);return a.runWebGLProgram(c,[r],r.dtype)}var _q={kernelName:Ll,backendName:"webgl",kernelFunc:Eq},$q=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,a=e.strideWidth,n=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,u=r*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Mq=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,a=e.strideHeight,n=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,l=o-1-e.padInfo.front,p=u-1-e.padInfo.top,c=d-1-e.padInfo.left,h=o*u*d-1;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${p}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Fq(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:d,dimRoundingMode:l}=n,p=[1,1,1],c=C.computePool3DInfo(i.shape,o,u,p,d,l),h=new g2(c,"max",!0),f=a.runWebGLProgram(h,[i],i.dtype),m=new Mq(c),g=a.runWebGLProgram(m,[r,f],i.dtype);return a.disposeIntermediateTensorInfo(f),g}var Pq={kernelName:Md,backendName:"webgl",kernelFunc:Fq};function Oq(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s,output:i}=t,o=s;lu([s,i],"maxPoolGrad");let{filterSize:u,strides:d,pad:l,dimRoundingMode:p}=n,c=C.computePool2DInfo(o.shape,u,d,1,l,p),h=!0,f=new cd(c,"max",h),m=a.runWebGLProgram(f,[o],o.dtype),g=new $q(c),y=a.runWebGLProgram(g,[r,m],o.dtype);return a.disposeIntermediateTensorInfo(m),y}var Dq={kernelName:$d,backendName:"webgl",kernelFunc:Oq};function zq(e,t,a,n){let r=new cd(a,"max",!1),s=n.runWebGLProgram(r,[e],"float32");r=new cd(a,"max",!0,!0,t);let i=n.runWebGLProgram(r,[e],"float32");return[s,i]}var Lq={kernelName:Wl,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,u=a;v.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let d=[1,1];v.assert(C.eitherStridesOrDilationsAreOne(s,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`);let l=C.computePool2DInfo(n.shape,r,s,d,i),[p,c]=zq(n,o,l,u);return[p,c]}};function Wq(e,t,a,n){let r=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/r,i=pe({inputs:{x:e},attrs:{shape:[s,r]},backend:n}),o=Mo(i,"float32","mean",n),u=pe({inputs:{x:o},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}var Bq={kernelName:Hi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{keepDims:r,axis:s}=t,i=a,o=n.shape.length,u=v.parseAxisParam(s,n.shape),d=u,l=C.getAxesPermutation(d,o),p=l!=null,c=i.shouldExecuteOnCPU([n]),h=[],f=n;if(p){if(c){let A=i.texData.get(f.dataId).values,b=new Array(o);for(let N=0;N<b.length;N++)b[N]=n.shape[l[N]];let w=h2(A,n.shape,n.dtype,l,b);f=i.makeTensorInfo(b,n.dtype);let S=i.texData.get(f.dataId);S.values=w}else f=hh(n,l,i);h.push(f),d=C.getInnerMostAxes(d.length,o)}C.assertAxesAreInnerMostDims("sum",d,o);let[m,g]=C.computeOutAndReduceShapes(f.shape,d),y=m;r&&(y=C.expandShapeToKeepDim(m,u));let x=Wq(f,g,y,i);for(let A of h)i.disposeIntermediateTensorInfo(A);return x}};function Vq(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,u=v.parseAxisParam(s,r.shape),d=u,l=C.getAxesPermutation(d,o),p=r;l!=null&&(p=ha({inputs:{x:r},backend:a,attrs:{perm:l}}),d=C.getInnerMostAxes(d.length,r.shape.length)),C.assertAxesAreInnerMostDims("min",d,o);let[c,h]=C.computeOutAndReduceShapes(p.shape,d),f=v.sizeFromShape(h),m=pe({inputs:{x:p},backend:a,attrs:{shape:[-1,f]}}),g=Mo(m,m.dtype,"min",a),y;if(i){let x=C.expandShapeToKeepDim(c,u);y=pe({inputs:{x:g},backend:a,attrs:{shape:x}})}else y=pe({inputs:{x:g},backend:a,attrs:{shape:c}});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l!=null&&a.disposeIntermediateTensorInfo(p),y}var Uq={kernelName:"Min",backendName:"webgl",kernelFunc:Vq},Gq=f2+`
  return min(a, b);
`,Hq=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+$o+`
  return result;
`,jq=ta({opSnippet:Gq,packedOpSnippet:Hq,cpuKernelImpl:RB}),qq={kernelName:ji,backendName:"webgl",kernelFunc:jq},Xq=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=t.map((d,l)=>d[0]+e[l]+d[1]);let n=e.length,r=ut(n),s=t.map(d=>d[0]).join(","),i=t.map((d,l)=>d[0]+e[l]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u=a==="reflect"?0:1;if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},Kq=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let n=e.length,r=ut(n),s=t.map(h=>h[0]).join(","),i=t.map((h,f)=>h[0]+e[f]).join(","),o=ca("rc",n),u=ca("source",n),d=`${o[n-1]} < ${this.outputShape[n-1]}`,l=n===1?"source":`vec2(${u.slice(-2).join()})`,p=a==="reflect"?0:1,c="";if(n===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;c=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[n-1]} += 1;
        if(${d}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;c=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[n-1]} += 1;
        if(${d}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
        rc = outputLoc;
        ${o[n-2]} += 1;
        if(${o[n-2]} < ${this.outputShape[n-2]}) {
          ${h}
          result[2] = getChannel(getX(${u.join()}), ${l});
          ${o[n-1]} += 1;
          if(${d}) {
            ${h}
            result[3] = getChannel(getX(${u.join()}), ${l});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},Yq=({inputs:e,backend:t,attrs:a})=>{let{x:n}=e,{paddings:r,mode:s}=a,i=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kq(n.shape,r,s):new Xq(n.shape,r,s);return t.runWebGLProgram(i,[n],n.dtype)},Zq={kernelName:qi,backendName:"webgl",kernelFunc:Yq},Jq=`if (b == 0.0) return NAN;
  return mod(a, b);`,Qq=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+$o+`
  return result;
`,eX=ta({opSnippet:Jq,packedOpSnippet:Qq}),tX={kernelName:"Mod",backendName:"webgl",kernelFunc:eX},aX=class{constructor(e,t,a){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,a],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},nX=`
if (a == b) {
  return 1.0;
};
return a / b;`,rX=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,vw=ta({opSnippet:nX,packedOpSnippet:rX,checkOutOfBounds:!0}),sX={kernelName:vi,backendName:"webgl",kernelFunc:vw},Zg="return a - b;",ww=ta({opSnippet:Zg,packedOpSnippet:Zg,supportsComplex:!0,cpuKernelImpl:YB}),iX={kernelName:"Sub",backendName:"webgl",kernelFunc:ww};function kw(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:s}=n,i=v.parseAxisParam([s],r.shape),o=bw({inputs:{x:r},backend:a,attrs:{reductionIndices:i,keepDims:!1}}),u=C.expandShapeToKeepDim(o.shape,i),d=pe({inputs:{x:o},backend:a,attrs:{shape:u}}),l=ww({inputs:{a:r,b:d},backend:a}),p=yw({inputs:{x:l},backend:a}),c=fh({inputs:{x:p},backend:a,attrs:{axis:i,keepDims:!1}}),h=pe({inputs:{x:c},backend:a,attrs:{shape:u}}),f=vw({inputs:{a:p,b:h},backend:a});return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(h),f}var oX={kernelName:vo,backendName:"webgl",kernelFunc:kw};function lX(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=n,u=o?r:kw({inputs:{logits:r},backend:a,attrs:{dim:r.shape.length-1}}),d=u.shape[0],l=u.shape[1],p=new aX(d,l,s),c=[[i]],h=a.runWebGLProgram(p,[u],"int32",c);return o||a.disposeIntermediateTensorInfo(u),h}var uX={kernelName:Xi,backendName:"webgl",kernelFunc:lX},dX=xn+`
  return -x;
`,pX=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function cX(e){let{inputs:t,backend:a}=e,{x:n}=t;if(a.shouldExecuteOnCPU([n])){let s=a.texData.get(n.dataId),[i,o]=_B(s.values,n.shape,n.dtype);return a.makeTensorInfo(o,n.dtype,i)}let r;return U().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Mr(n.shape,pX):r=new Wn(n.shape,dX),a.runWebGLProgram(r,[n],n.dtype)}var hX={kernelName:"Neg",backendName:"webgl",kernelFunc:cX},fX=yn.nonMaxSuppressionV3Impl;function mX(e){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=n,d=a.readSync(r.dataId),l=a.readSync(s.dataId),{selectedIndices:p}=fX(d,l,i,o,u);return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var gX={kernelName:Zi,backendName:"webgl",kernelFunc:mX},yX=yn.nonMaxSuppressionV4Impl;function xX(e){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:d}=n,l=a.readSync(r.dataId),p=a.readSync(s.dataId),{selectedIndices:c,validOutputs:h}=yX(l,p,i,o,u,d);return[a.makeTensorInfo([c.length],"int32",new Int32Array(c)),a.makeTensorInfo([],"int32",new Int32Array([h]))]}var AX={kernelName:Bl,backendName:"webgl",kernelFunc:xX},bX=yn.nonMaxSuppressionV5Impl;function vX(e){C.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:d}=n,l=a.readSync(r.dataId),p=a.readSync(s.dataId),c=i,h=o,f=u,m=d,{selectedIndices:g,selectedScores:y}=bX(l,p,c,h,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var wX={kernelName:Ji,backendName:"webgl",kernelFunc:vX},kX=class{constructor(e,t,a,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${a}),
                      float(index == coords.y)));
      }
    `}},IX=e=>{let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:u}=n,d=v.sizeFromShape(r.shape),l=new kX(d,i,o,u),p=pe({inputs:{x:r},backend:a,attrs:{shape:[d]}}),c=a.runWebGLProgram(l,[p],s);a.disposeIntermediateTensorInfo(p);let h=[...r.shape,i],f=pe({inputs:{x:c},backend:a,attrs:{shape:h}});return a.disposeIntermediateTensorInfo(c),f},SX={kernelName:Qi,backendName:"webgl",kernelFunc:IX};function Nc(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="complex64"){let r=rp({inputs:{input:n},backend:a}),s=Nc({inputs:{x:r},backend:a}),i=mh({inputs:{input:n},backend:a}),o=Nc({inputs:{x:i},backend:a}),u=ss({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}else return sp({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:a})}var CX={kernelName:nu,backendName:"webgl",kernelFunc:Nc};function Iw(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let r=rp({inputs:{input:n},backend:a}),s=Iw({inputs:{x:r},backend:a}),i=mh({inputs:{input:n},backend:a}),o=Nc({inputs:{x:i},backend:a}),u=ss({inputs:{real:s,imag:o},backend:a});return a.disposeIntermediateTensorInfo(r),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(o),u}else return sp({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:a})}var NX={kernelName:Vl,backendName:"webgl",kernelFunc:Iw};function TX(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return i0({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{v.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let p=i0({inputs:{input:l},backend:a,attrs:{dim:r}});return o.push(p),p}),d=uw({inputs:u,backend:a,attrs:{axis:r}});return o.forEach(l=>a.disposeIntermediateTensorInfo(l)),d}var RX={kernelName:Ul,backendName:"webgl",kernelFunc:TX},EX=class{constructor(e,t,a){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);let n=e.length,r=ut(n),s=t.map(u=>u[0]).join(","),i=t.map((u,d)=>u[0]+e[d]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(n===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${s});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},_X=class{constructor(e,t,a){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let n=e.length,r=ut(n),s=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=ca("rc",n),u=ca("source",n),d=`${o[n-1]} < ${this.outputShape[n-1]}`,l=n===1?"source":`vec2(${u.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[n-1]} += 1;
       if(${d}) {
      `,n===1?"":`}
       rc = outputLoc;
       ${o[n-2]} += 1;
       if(${o[n-2]} < ${this.outputShape[n-2]}) {`,n===1?"":`  ${o[n-1]} += 1;
         if(${d}) {`],c=n===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=n===1?2:4;f<m;f++)h+=`
        ${p[f]}
        if (${c}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${l});
        }
      `;h+=n===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${s});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},Sw=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,constantValue:i}=n;if(v.sizeFromShape(r.shape)===0){let d=s.map((l,p)=>l[0]+r.shape[p]+l[1]);return sp({backend:a,attrs:{shape:d,value:i,dtype:r.dtype}})}let o=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _X(r.shape,s,i):new EX(r.shape,s,i),u=[[i]];return a.runWebGLProgram(o,[r],r.dtype,u)},$X={kernelName:eo,backendName:"webgl",kernelFunc:Sw},MX=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,FX=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+$o+`
  return result;
`,PX=ta({opSnippet:MX,packedOpSnippet:FX}),OX={kernelName:"Pow",backendName:"webgl",kernelFunc:PX};function DX(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n,o=r.shape.length,u=[],d=v.parseAxisParam(s,r.shape),l=d,p=C.getAxesPermutation(l,o),c=r;p!=null&&(c=ha({inputs:{x:r},backend:a,attrs:{perm:p}}),l=C.getInnerMostAxes(l.length,o),u.push(c)),C.assertAxesAreInnerMostDims("prod",l,o);let h;if(a.shouldExecuteOnCPU([c])){let f=a.texData.get(c.dataId).values,{outVals:m,outShape:g,outDtype:y}=MB(c.shape,c.dtype,f,l);h=a.makeTensorInfo(g,y,m)}else{let[f,m]=C.computeOutAndReduceShapes(c.shape,l),g=v.sizeFromShape(m),y=pe({inputs:{x:c},backend:a,attrs:{shape:[-1,g]}}),x=Gd(r.dtype),A=Mo(y,x,"prod",a);h=pe({inputs:{x:A},backend:a,attrs:{shape:f}}),u.push(y),u.push(A)}if(i){u.push(h);let f=C.expandShapeToKeepDim(h.shape,d);h=pe({inputs:{x:h},backend:a,attrs:{shape:f}})}return u.forEach(f=>a.disposeIntermediateTensorInfo(f)),h}var zX={kernelName:ao,backendName:"webgl",kernelFunc:DX};function LX(e){let{inputs:t,backend:a,attrs:n}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,u=r.map(y=>a.readSync(y.dataId)),d=r.map(y=>y.shape),l=a.readSync(s.dataId),p=a.readSync(i.dataId),[c,h,f]=FB(u,d,l,s.shape,s.dtype,p,i.shape,o),m=c.map(y=>a.makeTensorInfo([y.length],"int32",y)),g=a.makeTensorInfo(f,s.dtype,h);return m.concat([g])}var WX={kernelName:zc,backendName:"webgl",kernelFunc:LX};function BX(e){let{inputs:t,backend:a}=e,{starts:n,limits:r,deltas:s}=t,i=a.readSync(n.dataId),o=a.readSync(r.dataId),u=a.readSync(s.dataId),[d,l]=PB(i,n.shape,n.dtype,o,r.shape,u,s.shape),p=a.makeTensorInfo([d.length],"int32",d),c=a.makeTensorInfo([l.length],n.dtype,l);return[p,c]}var VX={kernelName:Lc,backendName:"webgl",kernelFunc:BX};function UX(e){let{inputs:t,backend:a,attrs:n}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=n,d=a.readSync(r.dataId),l=a.readSync(s.dataId),p=a.readSync(i.dataId),c=o.map(g=>a.readSync(g.dataId)),h=o.map(g=>g.shape),[f,m]=OB(d,r.shape,l,s.shape,s.dtype,p,i.shape,c,h,u);return a.makeTensorInfo(f,s.dtype,m)}var GX={kernelName:Wc,backendName:"webgl",kernelFunc:UX},Cw=e=>{let{backend:t,attrs:a}=e,{start:n,stop:r,step:s,dtype:i}=a,o=DB(n,r,s,i);return t.makeTensorInfo([o.length],i,o)},HX={kernelName:Gl,backendName:"webgl",kernelFunc:Cw},jX="return 1.0 / x;",qX=Je({opSnippet:jX}),XX={kernelName:no,backendName:"webgl",kernelFunc:qX},KX=xn+`
  return (x < 0.0) ? 0.0 : x;
`,YX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ZX=Je({opSnippet:KX,packedOpSnippet:YX}),JX={kernelName:ro,backendName:"webgl",kernelFunc:ZX},QX=xn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,eK=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tK=Je({opSnippet:QX,packedOpSnippet:eK}),aK={kernelName:oo,backendName:"webgl",kernelFunc:tK},nK=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,a,u];let d=[n&&t>1?i-1:i,n&&a>1?o-1:o],l=[n&&t>1?t-1:t,n&&a>1?a-1:a],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/l[0]},
          ${d[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},rK=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,a,u];let d=[n&&t>1?i-1:i,n&&a>1?o-1:o],l=[n&&t>1?t-1:t,n&&a>1?a-1:a],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/l[0]},
          ${d[1]/l[1]},
          ${d[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${a-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function sK(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,d]=o,l=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new rK(r.shape,u,d,s,i):new nK(r.shape,u,d,s,i);return a.runWebGLProgram(l,[r],"float32")}var iK={kernelName:io,backendName:"webgl",kernelFunc:sK},oK=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,r]=t,[,s,i]=e,o=[a&&s>1?n-1:n,a&&i>1?r-1:r],u=[a&&s>1?s-1:s,a&&i>1?i-1:i],d=o[0]/u[0],l=o[1]/u[1],p=1/d,c=1/l,h=Math.ceil(p)*2+2,f=Math.ceil(c)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${l});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${c});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function lK(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,o=new oK(s.shape,r.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var uK={kernelName:ql,backendName:"webgl",kernelFunc:lK},dK=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,a,u];let d=[n&&t>1?i-1:i,n&&a>1?o-1:o],l=[n&&t>1?t-1:t,n&&a>1?a-1:a],p=n?"0.5":"0.0",c;r?c="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":c="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/l[0]},
          ${d[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${c};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},pK=class{constructor(e,t,a,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,a,u];let d=[n&&t>1?i-1:i,n&&a>1?o-1:o],l=[n&&t>1?t-1:t,n&&a>1?a-1:a],p=n?"0.5":"0.0",c;r?c="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":c="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/l[0]},
          ${d[1]/l[1]},
          ${d[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${c};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${a-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function cK(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,d]=o,l=U().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new pK(r.shape,u,d,s,i):new dK(r.shape,u,d,s,i);return a.runWebGLProgram(l,[r],r.dtype)}var hK={kernelName:so,backendName:"webgl",kernelFunc:cK},fK=class{constructor(e,t,a){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,r]=t,[,s,i]=e,o=[a&&s>1?n-1:n,a&&i>1?r-1:r],u=[a&&s>1?s-1:s,a&&i>1?i-1:i],d=o[0]/u[0],l=o[1]/u[1],p=1/d,c=1/l,h=Math.ceil(p)*2+2,f=Math.ceil(c)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${l});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${c});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${a} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${a} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function mK(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,o=new fK(s.shape,r.shape,i);return a.runWebGLProgram(o,[s],s.dtype)}var gK={kernelName:jl,backendName:"webgl",kernelFunc:mK},yK=class{constructor(e,t){this.variableNames=["x"];let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);if(this.outputShape=e,a===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>n(o)).join(","),s=ut(a);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},xK=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let a=e.length;if(a>4)throw new Error(`WebGL backend: Reverse of rank-${a} tensor is not yet supported`);this.outputShape=e;let n=ca("rc",a),r=`${n[a-1]} + 1 < ${this.outputShape[a-1]}`,s=`${n[a-2]} + 1 < ${this.outputShape[a-2]}`,i=ut(a);a===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(n.slice())};
          if(${r}){
            result.g = ${u(n.slice())};
          }
          if(${s}) {
            result.b = ${d(n.slice())};
            if(${r}) {
              result.a = ${l(n.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return p(h)}function u(h){return h[a-1]="("+h[a-1]+" + 1)",p(h)}function d(h){return h[a-2]="("+h[a-2]+" + 1)",p(h)}function l(h){return h[a-1]="("+h[a-1]+" + 1)",h[a-2]="("+h[a-2]+" + 1)",p(h)}function p(h){let f=e.map((y,x)=>c(x,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function c(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function AK(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:s}=n,i=r.shape.length,o=v.parseAxisParam(s,r.shape);if(i===0)return Ga({inputs:{x:r},backend:a});let u=U().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xK(r.shape,o):new yK(r.shape,o);return a.runWebGLProgram(u,[r],r.dtype)}var bK={kernelName:lo,backendName:"webgl",kernelFunc:AK},vK=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let a=e[1],n=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${a}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},wK={kernelName:To,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:s,center:i}=t,o=a,u=new vK(n.shape,s),[d,l]=C.getImageCenter(i,n.shape[1],n.shape[2]),p=[[d,l,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[n],n.dtype,p)}},kK=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,IK=Je({opSnippet:kK}),SK={kernelName:uo,backendName:"webgl",kernelFunc:IK},CK="return inversesqrt(x);",NK=Je({opSnippet:CK,cpuKernelImpl:zB}),TK={kernelName:po,backendName:"webgl",kernelFunc:NK},y2=class{constructor(e,t,a,n,r,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let u=ut(r.length),d=ut(s.length),l="";a===1?l="i":a===2&&(l="i, j");let p=`getIndices(${l})`,c="";n===1?c="i":n===2&&(c="i, coords[1]");let h=`getUpdates(${c})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${d} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}},RK=class{constructor(e,t,a,n,r,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let u=ut(r.length),d=ut(s.length),l="";a===1?l="i":a===2&&(l="i, j");let p=`getIndices(${l})`,c="";n===1?c="i":n===2&&(c="i, coords[1]");let h=`getUpdates(${c})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${r});

        void main() {
          ${d} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${p});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${h};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}};function EK(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:u,sliceSize:d,strides:l,outputSize:p}=C.calculateShapes(s,r,i),c=[p/d,d];if(p===0)return a.makeTensorInfo(i,r.dtype);let h=pe({inputs:{x:r},backend:a,attrs:{shape:[u,o]}}),f=pe({inputs:{x:s},backend:a,attrs:{shape:[u,d]}}),m=a.makeTensorInfo([],"float32",new Float32Array([0])),g;U().getBool("WEBGL_PACK")?g=new RK(u,o,h.shape.length,f.shape.length,l,c):g=new y2(u,o,h.shape.length,f.shape.length,l,c);let y=a.runWebGLProgram(g,[f,h,m],f.dtype),x=pe({inputs:{x:y},backend:a,attrs:{shape:i}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(m),x}var _K={kernelName:co,backendName:"webgl",kernelFunc:EK},$K=class{constructor(e,t,a,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,a];let r="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=U().getNumber("WEBGL_VERSION")===2?r:s,o=n==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function MK(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:s}=t,{side:i}=n,o=new $K(r.shape[0],r.shape[1],s.shape[1],i),u=[[r.shape[1]]];return a.runWebGLProgram(o,[r,s],"int32",u)}var FK={kernelName:fo,backendName:"webgl",kernelFunc:MK},PK=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.outputShape=t;let n,r;if(a>4)throw Error(`Where for rank ${a} is not yet supported`);if(a===1)r="resRC",n="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],u=[];for(let d=0;d<t.length;d++)u.push(`${i[d]}`),d<e&&o.push(`${i[d]}`);n=o.join(),r=u.join()}let s=ut(a);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function OK(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t,i=new PK(n.shape.length,r.shape,r.shape.length);return a.runWebGLProgram(i,[n,r,s],ea(r.dtype,s.dtype))}var DK={kernelName:Xl,backendName:"webgl",kernelFunc:OK},zK=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${C.SELU_SCALEALPHA};
  float scale = ${C.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,LK=Je({opSnippet:zK}),WK={kernelName:mo,backendName:"webgl",kernelFunc:LK},BK=fu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,VK=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,UK=Je({opSnippet:BK,packedOpSnippet:VK,cpuKernelImpl:WB}),GK={kernelName:xo,backendName:"webgl",kernelFunc:UK},HK=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,jK=Je({opSnippet:HK}),qK={kernelName:yo,backendName:"webgl",kernelFunc:jK},XK=fu+`
  return sin(x);
`,KK=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${$o}
  return result;
`,YK=Je({opSnippet:XK,packedOpSnippet:KK}),ZK={kernelName:"Sin",backendName:"webgl",kernelFunc:YK},JK=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,QK=Je({opSnippet:JK}),eY={kernelName:go,backendName:"webgl",kernelFunc:QK},tY=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,aY=Je({opSnippet:tY}),nY={kernelName:Ao,backendName:"webgl",kernelFunc:aY},rY=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,x)=>y*x),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<r.shape.length;++y)u.push([0,0]);let d=[],l=Sw({inputs:{x:r},backend:a,attrs:{paddings:u,constantValue:0}}),p=C.getReshaped(l.shape,s,o,!1),c=C.getPermuted(p.length,s.length,!1),h=C.getReshapedPermuted(l.shape,s,o,!1),f=pe({inputs:{x:l},backend:a,attrs:{shape:p}}),m=ha({inputs:{x:f},backend:a,attrs:{perm:c}}),g=pe({inputs:{x:m},backend:a,attrs:{shape:h}});return d.push(l),d.push(f),d.push(m),d.forEach(y=>a.disposeIntermediateTensorInfo(y)),g},sY={kernelName:Yl,backendName:"webgl",kernelFunc:rY};function iY(e){let{inputs:t,backend:a}=e,{indices:n,values:r,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=a.readSync(n.dataId),u=a.readSync(r.dataId),d=a.readSync(s.dataId),l=a.readSync(i.dataId)[0],[p,c,h,f,m]=VB(o,n.shape,n.dtype,u,r.dtype,d,l);return[a.makeTensorInfo(c,n.dtype,p),a.makeTensorInfo([c[0]],r.dtype,h),a.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),a.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}var oY={kernelName:Pd,backendName:"webgl",kernelFunc:iY};function lY(e){let{inputs:t,backend:a}=e,{inputIndices:n,inputShape:r,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(a.readSync(r.dataId)),o=a.readSync(n.dataId),u=Array.from(a.readSync(s.dataId)),[d,l,p]=UB(o,n.shape,n.dtype,i,u);return[a.makeTensorInfo(l,n.dtype,d),a.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var uY={kernelName:Jl,backendName:"webgl",kernelFunc:lY};function dY(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=a.readSync(n.dataId),o=a.readSync(r.dataId),u=a.readSync(s.dataId),[d,l]=X5(i,n.shape,n.dtype,o,u,!0);return a.makeTensorInfo(l,n.dtype,d)}var pY={kernelName:Ql,backendName:"webgl",kernelFunc:dY};function cY(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=a.readSync(n.dataId),o=a.readSync(r.dataId),u=a.readSync(s.dataId),[d,l]=X5(i,n.shape,n.dtype,o,u);return a.makeTensorInfo(l,n.dtype,d)}var hY={kernelName:eu,backendName:"webgl",kernelFunc:cY};function fY(e){let{inputs:t,backend:a,attrs:n}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:u,numUpdates:d,sliceSize:l,strides:p,outputSize:c}=C.calculateShapes(s,r,o),h=!1;if(s.dtype==="string"){let y=a.bufferSync(r),x=a.bufferSync(s),A=v.decodeString(a.readSync(i.dataId)[0]),b=LB(y,x,o,c,l,d,u,p,A,h);return a.makeTensorInfo(o,b.dtype,b.values)}let f=new y2(d,u,r.shape.length,s.shape.length,p,[c,1],h),m=a.runWebGLProgram(f,[s,r,i],s.dtype),g=pe({inputs:{x:m},backend:a,attrs:{shape:o}});return a.disposeIntermediateTensorInfo(m),g}var mY={kernelName:wo,backendName:"webgl",kernelFunc:fY};function gY(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,s,o),d=r.shape.length,l=new Array(d).fill(0),p=r.shape.slice();return u.map(c=>{let h=[...p];h[o]=c;let f=mu({inputs:{x:r},backend:a,attrs:{begin:l,size:h}});return l[o]+=c,f})}var yY={kernelName:Zl,backendName:"webgl",kernelFunc:gY},Jg="return sqrt(x);",xY=Je({opSnippet:Jg,packedOpSnippet:Jg,cpuKernelImpl:GB}),AY={kernelName:bo,backendName:"webgl",kernelFunc:xY},bY="return x * x;",vY=Je({opSnippet:bY}),wY={kernelName:Od,backendName:"webgl",kernelFunc:vY},Qg="return (a - b) * (a - b);",kY=ta({opSnippet:Qg,packedOpSnippet:Qg}),IY={kernelName:ko,backendName:"webgl",kernelFunc:kY};function SY(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");let s=a.readSync(r.dataId),i=C.fromUint8ToStringArray(s),o=HB(i,"string",n);return a.makeTensorInfo(r.shape,"string",o)}var CY={kernelName:Dd,backendName:"webgl",kernelFunc:SY};function NY({inputs:e,attrs:t,backend:a}){let{x:n}=e,r=xn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Wn(n.shape,r);return a.runWebGLProgram(s,[n],n.dtype)}var TY={kernelName:ts,backendName:"webgl",kernelFunc:NY},RY=class{constructor(e,t,a){this.variableNames=["x"],this.outputShape=a;let n=a.length,r=ut(a.length),s=ut(a.length),i="";if(n===1)i="coords * strides + begin";else{let o=0;i=a.map((u,d)=>(o++,a.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${o-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function EY(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:d,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:c}=n,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=wt.sliceInfo(r.shape,s,i,o,u,d,l,p,c),w;if(m)w=pe({inputs:{x:r},backend:a,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let N=wt.computeOutShape(x,A,b),T=mu({inputs:{x:r},backend:a,attrs:{begin:x,size:N}});w=pe({inputs:{x:T},backend:a,attrs:{shape:f}}),a.disposeIntermediateTensorInfo(T)}else if(a.shouldExecuteOnCPU([r])){let N=a.readSync(r.dataId),T=$e(r.shape,r.dtype,N),_=jB(h,T,b,x);w=a.makeTensorInfo(f,r.dtype,_.values)}else{let N=new RY(x,b,h);w=a.runWebGLProgram(N,[r],r.dtype)}let S=pe({inputs:{x:w},backend:a,attrs:{shape:f}});return a.disposeIntermediateTensorInfo(w),S}var _Y={kernelName:Io,backendName:"webgl",kernelFunc:EY};function $Y(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:d}=n,{data:l,dataSplits:p}=t,c=a.readSync(l.dataId),h=a.readSync(p.dataId),[f,m]=qB(c,h,r,s,i,o,u,d);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var MY={kernelName:tu,backendName:"webgl",kernelFunc:$Y};function FY(e){let{inputs:t,backend:a,attrs:n}=e,{skipEmpty:r}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=a.readSync(s.dataId),u=a.readSync(i.dataId)[0],[d,l,p]=XB(o,u,r),c=l.length;return[a.makeTensorInfo([c,2],"int32",d),a.makeTensorInfo([c],"string",l),a.makeTensorInfo([2],"int32",new Int32Array(p))]}var PY={kernelName:zd,backendName:"webgl",kernelFunc:FY};function OY(e){let{inputs:t,backend:a,attrs:n}=e,{numBuckets:r}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=a.readSync(s.dataId),o=KB(i,r);return a.makeTensorInfo(s.shape,"int32",o)}var DY={kernelName:Ld,backendName:"webgl",kernelFunc:OY},zY="return tan(x);",LY=Je({opSnippet:zY}),WY={kernelName:"Tan",backendName:"webgl",kernelFunc:LY},BY=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,VY=Je({opSnippet:BY}),UY={kernelName:So,backendName:"webgl",kernelFunc:VY};function GY(e){let{inputs:t,backend:a,attrs:n}=e,{tensor:r,indices:s,updates:i}=t,{sliceRank:o,numUpdates:u,sliceSize:d,strides:l,outputSize:p}=C.calculateShapes(i,s,r.shape),c=[p/d,d];if(p===0)return a.makeTensorInfo(r.shape,s.dtype);let h=pe({inputs:{x:s},backend:a,attrs:{shape:[u,o]}}),f=pe({inputs:{x:i},backend:a,attrs:{shape:[u,d]}}),m=pe({inputs:{x:r},backend:a,attrs:{shape:c}}),g=new y2(u,o,h.shape.length,f.shape.length,l,c,!1,!0),y=a.runWebGLProgram(g,[f,h,m],m.dtype),x=pe({inputs:{x:y},backend:a,attrs:{shape:r.shape}});return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(y),x}var HY={kernelName:ho,backendName:"webgl",kernelFunc:GY},jY=class{constructor(e,t){this.variableNames=["A"];let a=new Array(e.length);for(let s=0;s<a.length;s++)a[s]=e[s]*t[s];this.outputShape=a,this.rank=a.length;let n=ut(this.rank),r=qY(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function qY(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let a=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let r=0;r<e.length;r++)n.push(`imod(${a[r]}, ${e[r]})`);return n.join()}function Nw(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:s}=n;if(r.dtype==="string"||r.shape.length>5){let o=a.readSync(r.dataId),u=r.dtype==="string"?o.map(p=>v.decodeString(p)):o,d=$e(r.shape,r.dtype,u),l=ZB(d,s);return a.makeTensorInfo(l.shape,l.dtype,l.values)}let i=new jY(r.shape,s);return a.runWebGLProgram(i,[r],r.dtype)}var XY={kernelName:es,backendName:"webgl",kernelFunc:Nw},KY=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},YY=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function fs(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function ey(e){let t=1;for(;t<e;)t*=2;return t}function ZY(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:s,sorted:i}=n,o=U().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=U().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),d=r.shape,l=d[d.length-1];if(a.shouldExecuteOnCPU([r])||l<o||s>u){let _=a.readSync(r.dataId),[P,E]=JB(_,d,r.dtype,s,i);return[a.makeTensorInfo(P.shape,P.dtype,P.values),a.makeTensorInfo(E.shape,E.dtype,E.values)]}if(s===0)return d[d.length-1]=0,[a.makeTensorInfo(d,r.dtype,[]),a.makeTensorInfo(d,"int32",[])];if(l===1)return[r,sp({attrs:{shape:d,dtype:"int32",value:0},backend:a})];let p=a.texData.get(r.dataId),c=p!==null&&p.isPacked,h=c?a.unpackTensor(r):r,f=v.sizeFromShape(d)/l,m=pe({inputs:{x:h},attrs:{shape:[f,l]},backend:a});c&&fs(a,h);let g=ey(s),y=ey(l),x=null,A=()=>x===null?[m,m]:[m,x],b=(_,P,E)=>{let I=A(),F=new KY(E),$=[[l],[x===null?1:0],[Number.NEGATIVE_INFINITY],[_],[P]],z=x;x=a.runWebGLProgram(F,I,"int32",$),fs(a,z)};for(let _=1;_<g;_*=2){let P=_*2;for(let E=_;E>=1;E/=2)b(P,E,[f,y])}for(let _=y;_>g;_/=2){let P=A(),E=new YY([f,_/2]),I=[[l],[x===null?1:0],[g]],F=x;x=a.runWebGLProgram(E,P,"int32",I),fs(a,F);let $=g/2,z=$*2;for(let M=$;M>=1;M/=2)b(z,M,x.shape)}let w=x;x=mu({inputs:{x},backend:a,attrs:{begin:0,size:[f,s]}}),fs(a,w);let S=Aw({inputs:{x:m,indices:x},backend:a,attrs:{axis:1,batchDims:1}});fs(a,m);let N=d.slice(0,-1);N.push(s),w=x,x=pe({inputs:{x},attrs:{shape:N},backend:a}),fs(a,w);let T=S;return S=pe({inputs:{x:S},attrs:{shape:N},backend:a}),fs(a,T),[S,x]}var JY={kernelName:Co,backendName:"webgl",kernelFunc:ZY},QY=class{constructor(e,t,a,n,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=a==="nearest"?1:2,o;switch(n){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function eZ(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:d}=n,[l,p,c,h]=r.shape,[f,m]=d??[p,c],g=[l,f,m,h],y=new QY(p,c,i,o,u,g);return a.runWebGLProgram(y,[r,s],"float32")}var tZ={kernelName:No,backendName:"webgl",kernelFunc:eZ};function aZ(e){let{inputs:t,attrs:a,backend:n}=e,{axis:r}=a,{x:s}=t;lu(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:o,outputShape:u,indices:d}=QB(i,r,s.shape,s.dtype);return[n.makeTensorInfo(u,s.dtype,o),n.makeTensorInfo([d.length],"int32",d)]}var nZ={kernelName:Wd,backendName:"webgl",kernelFunc:aZ};function rZ(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[s],d=new Array(o-1),l=0;for(let m=0;m<o;m++)m!==s&&(d[l++]=i.shape[m]);let p=[],c=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let f=new Array(u);for(let m=0;m<f.length;m++){c[s]=m;let g=mu({inputs:{x:i},backend:a,attrs:{begin:c,size:h}}),y=pe({inputs:{x:g},backend:a,attrs:{shape:d}});f[m]=y,p.push(g)}return p.forEach(m=>a.disposeIntermediateTensorInfo(m)),f}var sZ={kernelName:au,backendName:"webgl",kernelFunc:rZ},iZ=class{constructor(e,t){this.variableNames=["x","segmentIds"];let a=e.windowSize,n=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/a);this.outputShape=[n,i];let o="0.0",u="sumValue",d=Math.floor(a/4)*4,l=a%4,p=`
        sumValue += dot(values, segFilter);
    `,c="";r%a>0&&(c=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%a>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${a}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${d};
        if (${l===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${u});
      }
    `}};function oZ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,segmentIds:s}=t,{numSegments:i}=n,o=r.shape.length,u=[],d=0,l=C.getAxesPermutation([d],o),p=r;l!=null&&(p=ha({inputs:{x:r},backend:a,attrs:{perm:l}}),u.push(p),d=C.getInnerMostAxes(1,o)[0]);let c=C.segment_util.computeOutShape(p.shape,d,i),h=v.sizeFromShape([p.shape[d]]),f=pe({inputs:{x:p},backend:a,attrs:{shape:[-1,h]}});u.push(f);let m=Gd(r.dtype),g=(b,w,S,N,T)=>{let _=b.shape[0],P=b.shape[1],E=C.segment_util.segOpComputeOptimalWindowSize(P,T),I={windowSize:E,inSize:P,batchSize:_,numSegments:T},F=new iZ(I,w),$=a.compileAndRun(F,[b,S],N);if(u.push($),$.shape[1]===T)return $;let z=Cw({backend:a,attrs:{start:0,stop:T,step:1,dtype:"float32"}}),M=Nw({inputs:{x:z},backend:a,attrs:{reps:[P/E]}});return u.push(z),u.push(M),g($,w,M,N,T)},y=g(f,"unsortedSegmentSum",s,m,i),x=pe({inputs:{x:y},backend:a,attrs:{shape:c}}),A=x;if(l!=null){u.push(x);let b=C.getUndoAxesPermutation(l);A=ha({inputs:{x:A},backend:a,attrs:{perm:b}})}return u.forEach(b=>a.disposeIntermediateTensorInfo(b)),A}var lZ={kernelName:Bd,backendName:"webgl",kernelFunc:oZ},uZ=[jV,XV,ZV,eU,aU,sU,oU,uU,hU,mU,xU,vU,IU,TU,_U,MU,PU,LU,BU,UU,qU,eG,aG,iG,lG,fG,gG,bG,RV,kG,TG,$G,zG,BG,UG,HG,qG,ZG,eH,nH,sH,oH,uH,cH,fH,xH,bH,kH,CH,TH,$H,OH,WH,UH,jH,qH,KH,ZH,QH,tj,nj,oj,dj,hj,mj,xj,vj,Sj,Rj,TV,_j,CG,Fj,Dj,Wj,_V,Gj,Xj,Yj,eq,nq,oq,dq,fq,xq,vq,kq,Nq,Rq,_q,Pq,Dq,Lq,Bq,Uq,qq,Zq,tX,uX,FV,hX,gX,AX,wX,dG,SX,NX,RX,$X,OX,MV,zX,WX,VX,GX,HX,pG,sX,XX,JX,aK,OV,iK,uK,hK,gK,bK,wK,SK,TK,_K,FK,DK,WK,GK,qK,ZK,eY,JU,oX,nY,sY,oY,uY,pY,hY,mY,yY,AY,wY,IY,CY,TY,_Y,MY,PY,DY,iX,UV,WY,UY,HY,XY,JY,tZ,GV,nZ,sZ,lZ,CX];for(let e of uZ)Sn(e);var et;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(et||(et={}));var fd;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(fd||(fd={}));var Tw;function dZ(e){Tw=e.wasm.cwrap(Br,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function pZ(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:d,activation:l,leakyreluAlpha:p}=n,c=a.dataIdMap.get(r.dataId).id,h=a.dataIdMap.get(s.dataId).id,f=0;if(i!=null){let T=a.dataIdMap.get(i.dataId);if(T.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${T.shape.length}.`);f=T.id}let m=o==null?0:a.dataIdMap.get(o.dataId).id,g=fd[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?r.shape[2]:r.shape[1],x=d?s.shape[1]:s.shape[2],A=Ro.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)),b=a.makeOutput([...A,y,x],r.dtype),w=a.dataIdMap.get(b.dataId).id,S=new Uint8Array(new Int32Array(r.shape).buffer),N=new Uint8Array(new Int32Array(s.shape).buffer);return Tw(c,S,r.shape.length,h,N,s.shape.length,u,d,g,f,m,p||0,w),b}var cZ={kernelName:Br,backendName:"wasm",setupFunc:dZ,kernelFunc:pZ};function Ke(e,t){let a;function n(s){a=s.wasm.cwrap(e,null,["number","number","number"])}function r(s){let{backend:i,inputs:{x:o}}=s,u=i.dataIdMap.get(o.dataId).id,d=i.makeOutput(o.shape,t||o.dtype),l=i.dataIdMap.get(d.dataId).id;return v.sizeFromShape(d.shape)===0||a(u,et[o.dtype],l),d}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var hZ=Ke("Abs"),fZ=Ke(Zs),mZ=Ke(Js);function Pt(e,t,a){let n;function r(i){n=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:u}=i,{a:d,b:l}=u,p=o.dataIdMap.get(d.dataId).id,c=o.dataIdMap.get(l.dataId).id,h=a??d.dtype,f=C.assertAndGetBroadcastShape(d.shape,l.shape),m=o.makeOutput(f,h);if(v.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(d.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),x=o.dataIdMap.get(m.dataId).id;return n(p,g,d.shape.length,c,y,l.shape.length,et[d.dtype],x),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:s}}var gZ=Pt("Add"),Rw;function yZ(e){Rw=e.wasm.cwrap(Qs,null,["array","number","number","number"])}function xZ(e){let{inputs:t,backend:a}=e,n=a.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(n.shape)===0)return n;let r=t.map(o=>a.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(r).buffer),i=a.dataIdMap.get(n.dataId).id;return Rw(s,r.length,et[n.dtype],i),n}var AZ={kernelName:Qs,backendName:"wasm",setupFunc:yZ,kernelFunc:xZ};function gh(e){let{inputs:{x:t},backend:a}=e;if(t.dtype==="string")return He(a.readSync(t.dataId),t.shape,t.dtype);let n=a.makeOutput(t.shape,t.dtype),r=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(n).set(r),n}var bZ={kernelName:_i,backendName:"wasm",kernelFunc:gh},Ew;function vZ(e){Ew=e.wasm.cwrap(rr,null,["number","array","number","number","number","array","number"])}function Yr(e){let{inputs:t,backend:a,attrs:n}=e,[r,s]=kZ(t.x.shape,n.perm),i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);let o=wZ(t.x.shape,n.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let f=gh({inputs:t,backend:a});return f.shape=o,f}let d=a.makeOutput(o,u.dtype),l=a.dataIdMap.get(u.dataId).id,p=a.dataIdMap.get(d.dataId).id,c=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(u.shape).buffer);return Ew(l,h,u.shape.length,et[u.dtype],p,c,s.length),d}function wZ(e,t){let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];return a}function kZ(e,t){let a=[],n=[];for(let r=0;r<e.length;++r)e[r]!==1&&a.push(e[r]),e[t[r]]!==1&&n.push(t[r]);for(let r=0;r<n.length;++r){let s=-1;for(let i=0;i<n.length;++i)n[i]>=r&&(s===-1||n[s]>n[i])&&(s=i);n[s]=r}return[a,n]}var IZ={kernelName:rr,backendName:"wasm",kernelFunc:Yr,setupFunc:vZ};function is(e,t,a){let n=e.shape,r=e.shape.length,s=v.parseAxisParam(t,n),i=s,o=C.getAxesPermutation(i,r),u=null,d=!1;if(o!=null){let l=new Array(r);for(let c=0;c<l.length;c++)l[c]=n[o[c]];i=C.getInnerMostAxes(i.length,r),u=Yr({inputs:{x:e},attrs:{perm:o},backend:a});let p=a.dataIdMap.get(e.dataId).id;a.dataIdMap.get(u.dataId).id!==p&&(d=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:d}}var _w;function SZ(e){_w=e.wasm.cwrap("All",null,["number, number, number"])}function CZ(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:d,axes:l,originalAxes:p,inputWasTransposed:c}=is(i,r,t);if(c){let x=t.dataIdMap.get(d.dataId).id;u=d,o=x}let h=u.shape.length;C.assertAxesAreInnerMostDims("all",l,h);let[f,m]=C.computeOutAndReduceShapes(u.shape,l),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(y.dataId).id;_w(o,g,x)}if(c&&t.disposeData(d.dataId),s){let x=C.expandShapeToKeepDim(y.shape,p);y.shape=x}return y}var NZ={kernelName:"All",backendName:"wasm",setupFunc:SZ,kernelFunc:CZ},$w;function TZ(e){$w=e.wasm.cwrap("Any",null,["number, number, number"])}function RZ(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:d,axes:l,originalAxes:p,inputWasTransposed:c}=is(i,r,t);if(c){let x=t.dataIdMap.get(d.dataId).id;u=d,o=x}let h=u.shape.length;C.assertAxesAreInnerMostDims("any",l,h);let[f,m]=C.computeOutAndReduceShapes(u.shape,l),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(y.dataId).id;$w(o,g,x)}if(c&&t.disposeData(d.dataId),s){let x=C.expandShapeToKeepDim(y.shape,p);y.shape=x}return y}var EZ={kernelName:"Any",backendName:"wasm",setupFunc:TZ,kernelFunc:RZ};function Mw(e){let t;function a(r){t=r.wasm.cwrap(e,null,["number","number","number","number","number"])}function n(r){let{backend:s,inputs:i,attrs:o}=r,{axis:u}=o,{x:d}=i,l=s.dataIdMap.get(d.dataId).id,p=l,c=d,{transposed:h,axes:f,inputWasTransposed:m}=is(d,u,s);if(m){let w=s.dataIdMap.get(h.dataId).id;w!==l&&(c=h,p=w)}let g=c.shape.slice(0,-1),y=s.makeOutput(g,"int32"),x=s.dataIdMap.get(y.dataId).id,A=v.sizeFromShape(y.shape),b=c.shape[f[0]];return t(p,et[c.dtype],A,b,x),m&&s.disposeData(h.dataId),y}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:n}}var _Z=Mw(Il),$Z=Mw(Sl),MZ=Ke(ei),FZ=Ke(ti),PZ=Ke(ai),OZ=Pt(ri),DZ=Ke(ni),Fw;function zZ(e){Fw=e.wasm.cwrap(si,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function LZ(e){let{inputs:t,attrs:a,backend:n}=e,r=t.x,s=n.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:d}=a,l=C.computePool2DInfo(r.shape,i,o,1,u,d),p=l.filterHeight,c=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,x=l.strideWidth,A=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let b=n.makeOutput(l.outShape,"float32"),w=n.dataIdMap.get(b.dataId).id;return Fw(s,r.shape[0],r.shape[1],r.shape[2],p,c,h,f,m,g,y,x,A,w),b}var WZ={kernelName:si,backendName:"wasm",setupFunc:zZ,kernelFunc:LZ},Pw;function BZ(e){Pw=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function VZ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:d}=n,l=C.computePool3DInfo(r.shape,s,i,1,o,u,d),p=a.makeOutput(l.outShape,r.dtype);return Pw(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(p.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),p}var UZ={kernelName:Cl,backendName:"wasm",setupFunc:BZ,kernelFunc:VZ},Ow;function GZ(e){Ow=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function HZ(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:d}=n,l=C.computePool3DInfo(s.shape,i,o,1,u,d),p=a.makeOutput(s.shape,s.dtype);return Ow(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(p.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),p}var jZ={kernelName:wd,backendName:"wasm",setupFunc:GZ,kernelFunc:HZ},Dw;function qZ(e){Dw=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function XZ(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u}=n,d=C.computePool2DInfo(s.shape,i,o,1,u),l=a.makeOutput(s.shape,s.dtype);return Dw(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(l.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left,d.filterHeight,d.filterWidth),l}var KZ={kernelName:vd,backendName:"wasm",setupFunc:qZ,kernelFunc:XZ};function Ra(e){let{inputs:t,attrs:a}=e,{x:n}=t,{shape:r}=a,s=v.sizeFromShape(n.shape),i=v.inferFromImplicitShape(r,s);return v.assert(s===v.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${n.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var YZ={kernelName:Hl,backendName:"wasm",kernelFunc:Ra},zw;function ZZ(e){zw=e.wasm.cwrap(ii,null,["number","array","number","number","array","number","number","number","number"])}function JZ(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;if(r.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=r.shape.length,d=s.shape.length,l=i?r.shape[u-2]:r.shape[u-1],p=o?s.shape[d-1]:s.shape[d-2],c=i?r.shape[u-1]:r.shape[u-2],h=o?s.shape[d-2]:s.shape[d-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=v.sizeFromShape(f),y=v.sizeFromShape(m),x=Ro.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([c,h]);v.assert(l===p,()=>`Error in matMul: inner shapes (${l}) and (${p}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let A=i?[g,l,c]:[g,c,l],b=o?[y,h,p]:[y,p,h],w=Ra({inputs:{x:r},backend:a,attrs:{shape:A}}),S=Ra({inputs:{x:s},backend:a,attrs:{shape:b}}),N=a.dataIdMap.get(w.dataId).id,T=a.dataIdMap.get(S.dataId).id,_=i?w.shape[2]:w.shape[1],P=o?S.shape[1]:S.shape[2],E=Math.max(g,y),I=a.makeOutput([E,_,P],w.dtype),F=a.dataIdMap.get(I.dataId).id,$=new Uint8Array(new Int32Array(w.shape).buffer),z=new Uint8Array(new Int32Array(S.shape).buffer);return zw(N,$,w.shape.length,T,z,S.shape.length,i,o,F),a.disposeData(w.dataId),a.disposeData(S.dataId),I.shape=x,I}var QZ={kernelName:ii,backendName:"wasm",setupFunc:ZZ,kernelFunc:JZ};function qs(e){let{inputs:{x:t},attrs:{begin:a,size:n},backend:r}=e,[s,i]=wt.parseSliceParams(t,a,n),o=wt.isSliceContinous(t.shape,s,i),u=r.readSync(t.dataId),d=r.makeOutput(i,t.dtype),l=v.computeStrides(t.shape),p=r.dataIdMap.get(d.dataId);if(o){let f=wt.computeFlatOffset(s,l);return t.dtype==="string"?p.stringBytes=u.slice(f,f+v.sizeFromShape(i)):r.typedArrayFromHeap(d).set(u.subarray(f,f+v.sizeFromShape(i))),d}if(t.dtype==="string"){let f=vc(u,s,i,t.shape,t.dtype);return p.stringBytes=f,d}let c=r.typedArrayFromHeap(d),h=t.shape.length;if(h===2)eJ(u,l[0],c,s,i);else if(h===3)tJ(u,l[0],l[1],c,s,i);else if(h===4)aJ(u,l[0],l[1],l[2],c,s,i);else{let f=vc(u,s,i,t.shape,t.dtype);c.set(f)}return d}function eJ(e,t,a,n,r){let s=0,i=n[0],o=n[1],u=i+r[0];for(let d=i;d<u;d++){let l=d*t+o;a.set(e.subarray(l,l+r[1]),s),s+=r[1]}}function tJ(e,t,a,n,r,s){let i=0,o=r[0],u=r[1],d=r[2],l=o+s[0],p=u+s[1];for(let c=o;c<l;c++)for(let h=u;h<p;h++){let f=c*t+h*a+d;n.set(e.subarray(f,f+s[2]),i),i+=s[2]}}function aJ(e,t,a,n,r,s,i){let o=0,u=s[0],d=s[1],l=s[2],p=u+i[0],c=d+i[1],h=l+i[2],f=s[3];for(let m=u;m<p;m++)for(let g=d;g<c;g++)for(let y=l;y<h;y++){let x=m*t+g*a+y*n+f;r.set(e.subarray(x,x+i[3]),o),o+=i[3]}}var nJ={kernelName:Kl,backendName:"wasm",kernelFunc:qs};function rJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n,o=s.reduce((y,x)=>y*x),u=C.getReshaped(r.shape,s,o),d=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(r.shape,s,o),p=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),h=Ra({inputs:{x:r},backend:a,attrs:{shape:u}}),f=Yr({inputs:{x:h},backend:a,attrs:{perm:d}}),m=Ra({inputs:{x:f},backend:a,attrs:{shape:l}}),g=qs({inputs:{x:m},backend:a,attrs:{begin:p,size:c}});return a.disposeData(h.dataId),a.disposeData(f.dataId),a.disposeData(m.dataId),g}var sJ={kernelName:Nl,backendName:"wasm",kernelFunc:rJ},Lw;function iJ(e){Lw=e.wasm.cwrap(oi,null,["number","number","boolean","number","number","number"])}function oJ(e){let{backend:t,inputs:a,attrs:n}=e,{x:r,weights:s}=a,{size:i}=n,o=s.shape.reduce((p,c)=>p*c,1)!==0,u=r.shape.length===1?[i]:[r.shape[0],i],d=t.makeOutput(u,s.dtype);function l(p){return t.dataIdMap.get(p.dataId).id}return Lw(l(r),i,o,l(s),et[s.dtype],l(d)),d}var lJ={kernelName:oi,backendName:"wasm",setupFunc:iJ,kernelFunc:oJ},uJ=Pt(Tl);function dJ(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t,s=a.typedArrayFromHeap(n),i=a.typedArrayFromHeap(r),o=C.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return a.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var pJ={kernelName:Rl,backendName:"wasm",kernelFunc:dJ};function os(e){let{inputs:{x:t},attrs:{dtype:a},backend:n}=e,r=n.makeOutput(t.shape,a),s=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(s),r}var cJ={kernelName:li,backendName:"wasm",kernelFunc:os},hJ=Ke(ui),Ww;function fJ(e){Ww=e.wasm.cwrap(Qr,null,["number","number","number","number"])}function mJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=n,o=a.dataIdMap.get(r.dataId).id,u=a.makeOutput(r.shape,r.dtype),d=a.dataIdMap.get(u.dataId).id;return Ww(o,s,i,d),u}var gJ={kernelName:Qr,backendName:"wasm",setupFunc:fJ,kernelFunc:mJ};function Bw(e){let{inputs:t,backend:a}=e,n=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=t.map(h=>h.shape);C.assertParamsConsistent(r,n);let s=C.computeOutShape(t.map(h=>h.shape),n),i=t.filter(h=>v.sizeFromShape(h.shape)>0);if(i.length===1)return gh({inputs:{x:i[0]},backend:a});let o=a.makeOutput(s,t[0].dtype);if(v.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let h=i.map(A=>{let b=[-1,v.sizeFromShape(A.shape.slice(n))];return Ra({inputs:{x:A},backend:a,attrs:{shape:b}})}),f=h.map(A=>({vals:a.readSync(A.dataId),shape:A.shape}));s=C.computeOutShape(h.map(A=>A.shape),1);let m=h[0].shape[0]===1,g=Um(f,s,t[0].dtype,m),y=C.computeOutShape(i.map(A=>A.shape),n);o.shape=y;let x=a.dataIdMap.get(o.dataId);return x.stringBytes=C.fromStringArrayToUint8(g),h.forEach(A=>a.disposeData(A.dataId)),o}let u=v.sizeFromShape(i[0].shape.slice(0,n)),d=0,l=i.map(h=>{let f=v.sizeFromShape(h.shape.slice(n));return d+=f,f}),p=i.map(h=>a.typedArrayFromHeap(h)),c=a.typedArrayFromHeap(o);for(let h=0;h<u;h++){let f=h*d;for(let m=0;m<p.length;m++){let g=l[m],y=h*g,x=p[m].subarray(y,y+g);c.set(x,f),f+=g}}return o}var yJ={kernelName:El,backendName:"wasm",kernelFunc:Bw},Vw;function xJ(e){Vw=e.wasm.cwrap(di,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function AJ(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:d,pad:l,dimRoundingMode:p,dataFormat:c}=a,h=C.convertConv2DDataFormat(c),f=C.computeConv2DInfo(r.shape,s.shape,u,d,l,p,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,x=f.padInfo.right,A=f.padInfo.bottom,b=f.padInfo.left,w=f.dilationHeight,S=f.dilationWidth,N=f.strideHeight,T=f.strideWidth,_=f.inChannels,P=f.outChannels,E=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let I=n.makeOutput(f.outShape,"float32"),F=n.dataIdMap.get(I.dataId).id;return Vw(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,y,x,A,b,E,w,S,N,T,_,P,F),I}var bJ={kernelName:di,backendName:"wasm",setupFunc:xJ,kernelFunc:AJ},Uw;function vJ(e){Uw=e.wasm.cwrap(pi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wJ(e){let{backend:t,inputs:a,attrs:n}=e,{dy:r,filter:s}=a,{strides:i,pad:o,dataFormat:u,dimRoundingMode:d,inputShape:l}=n,p=1,c=C.convertConv2DDataFormat(u),h=C.computeConv2DInfo(l,s.shape,i,p,o,d,!1,c),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:x,inWidth:A,outChannels:b,outHeight:w,outWidth:S,strideHeight:N,strideWidth:T}=h,_=m-1-h.padInfo.top,P=g-1-h.padInfo.left,E=h.dataFormat==="channelsLast",I=v.computeStrides(h.inShape),F=v.computeStrides(r.shape),[$,z,M]=v.computeStrides(s.shape),H=I[0],V=E?I[1]:I[2],q=E?I[2]:1,G=E?1:I[1],B=F[0],K=E?F[1]:F[2],X=E?F[2]:1,J=E?1:F[1],ee=t.makeOutput(h.inShape,"float32"),ye=t.dataIdMap.get(ee.dataId).id,xe=t.dataIdMap.get(r.dataId).id,le=t.dataIdMap.get(s.dataId).id;return Uw(xe,le,f,m,g,x,A,y,w,S,b,N,T,_,P,$,z,M,H,V,q,G,B,K,X,J,ye),ee}var kJ={kernelName:pi,backendName:"wasm",setupFunc:vJ,kernelFunc:wJ},Gw;function IJ(e){Gw=e.wasm.cwrap(ci,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function SJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n;if(r.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let d=C.computeConv3DInfo(r.shape,s.shape,i,u,o),l=a.makeOutput(d.outShape,r.dtype);return Gw(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(l.dataId).id,d.batchSize,d.inDepth,d.inHeight,d.inWidth,d.inChannels,d.outDepth,d.outHeight,d.outWidth,d.outChannels,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.filterDepth,d.filterHeight,d.filterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),l}var CJ={kernelName:ci,backendName:"wasm",setupFunc:IJ,kernelFunc:SJ},Hw;function NJ(e){Hw=e.wasm.cwrap(_l,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function TJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=n;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let d=C.computeConv3DInfo(r.shape,u,i,1,o),l=a.makeOutput(d.filterShape,s.dtype);return Hw(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(l.dataId).id,d.batchSize,d.inDepth,d.inHeight,d.inWidth,d.inChannels,d.outDepth,d.outHeight,d.outWidth,d.outChannels,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.filterDepth,d.filterHeight,d.filterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),l}var RJ={kernelName:_l,backendName:"wasm",setupFunc:NJ,kernelFunc:TJ},jw;function EJ(e){jw=e.wasm.cwrap(hi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _J(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:u}=n;if(r.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let d=C.computeConv3DInfo(u,s.shape,o,1,i),l=a.makeOutput(d.inShape,r.dtype);return jw(a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(l.dataId).id,d.batchSize,d.inDepth,d.inHeight,d.inWidth,d.inChannels,d.outDepth,d.outHeight,d.outWidth,d.outChannels,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.filterDepth,d.filterHeight,d.filterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),l}var $J={kernelName:hi,backendName:"wasm",setupFunc:EJ,kernelFunc:_J},MJ=Ke("Cos"),FJ=Ke(fi),o0;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(o0||(o0={}));var qw;function PJ(e){qw=e.wasm.cwrap(yi,null,["number","number","number","number","array","number","number","number","number","number"])}function OJ(e){let{backend:t,inputs:a,attrs:n}=e,{method:r,extrapolationValue:s,cropSize:i}=n,{image:o,boxes:u,boxInd:d}=a,l=u.shape[0],[p,c]=i,h=[l,p,c,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=os({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,y=t.dataIdMap.get(u.dataId).id,x=t.dataIdMap.get(d.dataId).id,A=t.makeOutput(h,"float32"),b=t.dataIdMap.get(A.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return qw(g,y,x,l,w,p,c,o0[r],s,b),m!=null&&t.disposeData(m.dataId),A}var DJ={kernelName:yi,backendName:"wasm",setupFunc:PJ,kernelFunc:OJ},Xw;function zJ(e){Xw=e.wasm.cwrap(mi,null,["number","number","number","number","number","number"])}function LJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n,u=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let d=C.getAxesPermutation([s],u),l=r;d!==null&&(l=Yr({inputs:{x:r},attrs:{perm:d},backend:a}));let p=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumprod",[p],u);let c=a.makeOutput(l.shape,l.dtype),h=l.shape[p],f=a.dataIdMap.get(l.dataId).id,m=a.dataIdMap.get(c.dataId).id;Xw(f,i?1:0,o?1:0,h,m,et[r.dtype]);let g=c;if(d!==null){let y=C.getUndoAxesPermutation(d);g=Yr({inputs:{x:c},attrs:{perm:y},backend:a}),a.disposeData(l.dataId),a.disposeData(c.dataId)}return g}var WJ={kernelName:mi,backendName:"wasm",setupFunc:zJ,kernelFunc:LJ},Kw;function BJ(e){Kw=e.wasm.cwrap(gi,null,["number","number","number","number","number","number"])}function VJ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n,u=r.shape.length;v.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let d=C.getAxesPermutation([s],u),l=r;d!==null&&(l=Yr({inputs:{x:r},attrs:{perm:d},backend:a}));let p=C.getInnerMostAxes(1,u)[0];C.assertAxesAreInnerMostDims("cumsum",[p],u);let c=a.makeOutput(l.shape,l.dtype),h=l.shape[p],f=a.dataIdMap.get(l.dataId).id,m=a.dataIdMap.get(c.dataId).id;Kw(f,i?1:0,o?1:0,h,m,et[r.dtype]);let g=c;if(d!==null){let y=C.getUndoAxesPermutation(d);g=Yr({inputs:{x:c},attrs:{perm:y},backend:a}),a.disposeData(l.dataId),a.disposeData(c.dataId)}return g}var UJ={kernelName:gi,backendName:"wasm",setupFunc:BJ,kernelFunc:VJ},Yw;function GJ(e){Yw=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function HJ(e){let{backend:t,inputs:a,attrs:n}=e,{x:r,weights:s}=a,{size:i,binaryOutput:o}=n,u=s.shape.reduce((c,h)=>c*h,1)!==0,d=r.shape.length===1?[i]:[r.shape[0],i],l=t.makeOutput(d,s.dtype);function p(c){return t.dataIdMap.get(c.dataId).id}return Yw(p(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,i,u,p(s),et[s.dtype],o,p(l)),l}var jJ={kernelName:$l,backendName:"wasm",setupFunc:GJ,kernelFunc:HJ},Zw;function qJ(e){Zw=e.wasm.cwrap(xi,null,["number","number","number","array","number","array","array","number","number"])}function XJ(e){let{backend:t,inputs:a,attrs:n}=e,{x:r}=a,{blockSize:s,dataFormat:i}=n,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],d=i==="NHWC"?r.shape[2]:r.shape[3],l=i==="NHWC"?r.shape[3]:r.shape[1],p=u*s,c=d*s,h=l/(s*s),f=i==="NHWC"?[o,p,c,h]:[o,h,p,c],m=t.makeOutput(f,"float32"),g=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=new Uint8Array(new Int32Array(f).buffer),A=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer),b=t.dataIdMap.get(m.dataId).id;return Zw(g,s,i==="NHWC"?1:0,y,r.shape.length-1,x,A,f.length,b),m}var KJ={kernelName:xi,backendName:"wasm",setupFunc:qJ,kernelFunc:XJ},Jw;function YJ(e){Jw=e.wasm.cwrap(Ai,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function ZJ(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(s.dataId).id,{strides:u,dilations:d,pad:l,dimRoundingMode:p}=a,c=d??[1,1],h=C.computeConv2DInfo(r.shape,s.shape,u,c,l,p,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,x=h.padInfo.bottom,A=h.padInfo.left,b=h.dilationHeight,w=h.dilationWidth,S=h.strideHeight,N=h.strideWidth,T=h.inChannels,_=h.outChannels,P=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let E=n.makeOutput(h.outShape,"float32"),I=n.dataIdMap.get(E.dataId).id;return Jw(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,y,x,A,P,b,w,S,N,T,_,I),E}var JJ={kernelName:Ai,backendName:"wasm",setupFunc:YJ,kernelFunc:ZJ},Qw;function QJ(e){Qw=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function eQ(e){let{inputs:t,backend:a}=e,{x:n}=t,r=v.sizeFromShape(n.shape),s=a.makeOutput([...n.shape,...n.shape],n.dtype);return Qw(a.dataIdMap.get(n.dataId).id,et[n.dtype],r,a.dataIdMap.get(s.dataId).id),s}var tQ={kernelName:Ml,backendName:"wasm",setupFunc:QJ,kernelFunc:eQ},ek;function aQ(e){ek=e.wasm.cwrap(bi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nQ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n;if(r.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${s.dtype}`);let d=C.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u),l=a.makeOutput(d.outShape,r.dtype);return ek(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(l.dataId).id,et[r.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),l}var rQ={kernelName:bi,backendName:"wasm",setupFunc:aQ,kernelFunc:nQ},tk;function sQ(e){tk=e.wasm.cwrap(ul,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function iQ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:d}=n;if(r.dtype!==s.dtype||r.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${s.dtype}, and ${i.dtype}`);let l=C.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",d),p=a.makeOutput(s.shape,s.dtype);return tk(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(p.dataId).id,et[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),p}var oQ={kernelName:ul,backendName:"wasm",setupFunc:sQ,kernelFunc:iQ},ak;function lQ(e){ak=e.wasm.cwrap(ll,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function uQ(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:d}=n;if(r.dtype!==s.dtype||r.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${s.dtype}, and ${i.dtype}`);let l=C.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",d),p=a.makeOutput(r.shape,r.dtype);return ak(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(p.dataId).id,et[r.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),p}var dQ={kernelName:ll,backendName:"wasm",setupFunc:lQ,kernelFunc:uQ},pQ=Ke("Elu"),nk;function cQ(e){nk=e.wasm.cwrap(Fl,null,["number","number","number"])}function hQ(e){let{inputs:t,backend:a}=e,{dy:n,y:r}=t,s=a.makeOutput(r.shape,"float32"),i=o=>a.dataIdMap.get(o.dataId).id;return nk(i(r),i(n),i(s)),s}var fQ={kernelName:Fl,backendName:"wasm",setupFunc:cQ,kernelFunc:hQ},mQ=!1,gQ=Pt(wi,mQ,"bool"),yQ=Ke("Erf"),xQ=Ke("Exp","float32");function l0(e){let{inputs:t,attrs:a,backend:n}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice(),u=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),Ra({inputs:{x:r},backend:n,attrs:{shape:o}})}var AQ={kernelName:Pl,backendName:"wasm",kernelFunc:l0},bQ=Ke(ki,"float32");function rk(e){let{attrs:{shape:t,value:a},backend:n}=e,{attrs:{dtype:r}}=e;r=r||v.inferDtype(a);let s=n.makeOutput(t,r);return n.typedArrayFromHeap(s).fill(a),s}var vQ={kernelName:Ol,backendName:"wasm",kernelFunc:rk},sk;function wQ(e){sk=e.wasm.cwrap(Ii,null,["number","number","number","number","number","number"])}function kQ(e){let{inputs:t,backend:a}=e,{image:n}=t,r=a.makeOutput(n.shape,n.dtype),s=a.dataIdMap.get(n.dataId).id,i=a.dataIdMap.get(r.dataId).id,[o,u,d,l]=n.shape;return sk(s,o,u,d,l,i),r}var IQ={kernelName:Ii,backendName:"wasm",kernelFunc:kQ,setupFunc:wQ},SQ=Ke(Si),CQ=Pt(Ci),ik;function NQ(e){ik=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number"])}function TQ(e){let{backend:t,inputs:a,attrs:n}=e,{varianceEpsilon:r}=n,{x:s,mean:i,variance:o,offset:u,scale:d}=a,l=t.dataIdMap.get(s.dataId).id,p=t.dataIdMap.get(i.dataId).id,c=t.dataIdMap.get(o.dataId).id,h=u!=null?t.dataIdMap.get(u.dataId).id:0,f=d!=null?t.dataIdMap.get(d.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(v.sizeFromShape(s.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return ik(l,p,c,h,f,r,g),m}var RQ={kernelName:Ni,backendName:"wasm",setupFunc:NQ,kernelFunc:TQ},ok;function EQ(e){ok=e.wasm.cwrap(Vr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _Q(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dilations:l,dataFormat:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=a,m=C.computeConv2DInfo(r.shape,s.shape,u,l,d,c),g=fd[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let y=n.dataIdMap.get(r.dataId).id,x=n.dataIdMap.get(s.dataId).id,A=m.outChannels,b=0;if(i!=null){let X=n.dataIdMap.get(i.dataId);if(X.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${X.shape.length}.`);if(X.shape[0]!==A)throw new Error(`FusedConv2D bias shape (${X.shape}) does not match the number of output channels (${A})`);b=X.id}let w=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,T=m.padInfo.right,_=m.padInfo.bottom,P=m.padInfo.left,E=m.dilationHeight,I=m.dilationWidth,F=m.strideHeight,$=m.strideWidth,z=m.inChannels,M=m.padInfo.type==="SAME"?1:0,H=m.batchSize,V=m.inHeight,q=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let G=n.makeOutput(m.outShape,"float32"),B=n.dataIdMap.get(G.dataId).id,K=o==null?0:n.dataIdMap.get(o.dataId).id;return ok(y,H,V,q,x,w,S,b,N,T,_,P,M,E,I,F,$,z,A,g,K,f||0,B),G}var $Q={kernelName:Vr,backendName:"wasm",setupFunc:EQ,kernelFunc:_Q},lk;function MQ(e){lk=e.wasm.cwrap(Ur,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function FQ(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dilations:l,dataFormat:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=a,m=C.computeConv2DInfo(r.shape,s.shape,u,l,d,c,!0),g=fd[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=n.dataIdMap.get(r.dataId).id,x=n.dataIdMap.get(s.dataId).id,A=m.outChannels,b=0;if(i!=null){let X=n.dataIdMap.get(i.dataId);if(X.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${X.shape.length}.`);if(X.shape[0]!==A)throw new Error(`FusedDepthwiseConv2D bias shape (${X.shape}) does not match the number of output channels (${A})`);b=X.id}let w=m.filterHeight,S=m.filterWidth,N=m.padInfo.top,T=m.padInfo.right,_=m.padInfo.bottom,P=m.padInfo.left,E=m.dilationHeight,I=m.dilationWidth,F=m.strideHeight,$=m.strideWidth,z=m.inChannels,M=m.padInfo.type==="SAME"?1:0,H=m.batchSize,V=m.inHeight,q=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let G=n.makeOutput(m.outShape,"float32"),B=n.dataIdMap.get(G.dataId).id,K=o==null?0:n.dataIdMap.get(o.dataId).id;return lk(y,H,V,q,x,w,S,b,N,T,_,P,M,E,I,F,$,z,A,g,K,f||0,B),G}var PQ={kernelName:Ur,backendName:"wasm",setupFunc:MQ,kernelFunc:FQ},uk;function OQ(e){uk=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","array","number"])}function DQ(e){let{backend:t,inputs:a}=e,{params:n,indices:r}=a,[s,i,o,u]=Om.prepareAndValidate(n,r),d=t.makeOutput(s,n.dtype);if(i===0)return d;let l=r.shape,p=l[l.length-1],c=t.dataIdMap.get(n.dataId).id,h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(d.dataId).id;return uk(c,et[n.dtype],h,i,p,o,f,m),d}var zQ={kernelName:Ti,backendName:"wasm",setupFunc:OQ,kernelFunc:DQ},dk;function LQ(e){dk=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function WQ(e){let{backend:t,inputs:a,attrs:n}=e,{x:r,indices:s}=a,{axis:i,batchDims:o}=n,u=v.parseAxisParam(i,r.shape)[0],d=t.readSync(s.dataId),l=r.shape[u];for(let N=0;N<d.length;++N){let T=d[N];v.assert(T<=l-1&&T>=0,()=>`GatherV2: the index value ${T} is not in [0, ${l-1}]`)}let p=C.segment_util.collectGatherOpShapeInfo(r,s,u,o),c=Ra({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=v.sizeFromShape(s.shape),f=Ra({inputs:{x:s},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(v.sizeFromShape(r.shape)===0)return g;let y=c.shape.length-1,x=t.dataIdMap.get(c.dataId).id,A=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(v.computeStrides(c.shape)).buffer),S=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer);return dk(x,et[r.dtype],w,y,A,p.batchSize,S,b),t.disposeData(c.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var BQ={kernelName:Dl,backendName:"wasm",setupFunc:LQ,kernelFunc:WQ},VQ=!1,UQ=Pt(Ri,VQ,"bool"),GQ=!1,HQ=Pt(Ei,GQ,"bool"),jQ=Ke($i,"bool"),qQ=Ke(Mi,"bool"),XQ=Ke(Fi,"bool"),pk;function KQ(e){pk=e.wasm.cwrap(Pi,null,["number","number","number","number"])}function YQ(e){let{inputs:{x:t},attrs:{alpha:a},backend:n}=e,r=n.dataIdMap.get(t.dataId).id,s=n.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let i=n.dataIdMap.get(s.dataId).id;pk(r,et[t.dtype],a,i)}return s}var ZQ={kernelName:Pi,backendName:"wasm",setupFunc:KQ,kernelFunc:YQ},JQ=!1,QQ=Pt(Oi,JQ,"bool"),eee=!1,tee=Pt(Di,eee,"bool"),ck;function aee(e){ck=e.wasm.cwrap(zi,null,["number","number","number","number"])}function nee(e){let{attrs:t,backend:a}=e,{start:n,stop:r,num:s}=t,i=Math.floor(s),o=a.makeOutput([i],"float32");return ck(a.dataIdMap.get(o.dataId).id,n,r,i),o}var ree={kernelName:zi,backendName:"wasm",setupFunc:aee,kernelFunc:nee},see=Ke("Log"),iee=Ke(Li),oee=!1,lee=Pt(Wi,oee,"bool"),uee=Ke(Bi),dee=!1,pee=Pt(Vi,dee,"bool"),cee=!1,hee=Pt(sA,cee,"bool"),hk;function fee(e){hk=e.wasm.cwrap("LRN",null,["number","number","number","number","number","number","number"])}function mee(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;if(r.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let d=a.makeOutput(r.shape,r.dtype);return hk(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(d.dataId).id,r.shape[3],s,i,o,u),d}var gee={kernelName:"LRN",backendName:"wasm",setupFunc:fee,kernelFunc:mee},fk;function yee(e){fk=e.wasm.cwrap(zl,null,["number","number","number","number","number","number","number","number","number"])}function xee(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:d,beta:l}=n;if(r.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let p=a.makeOutput(r.shape,r.dtype);return fk(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(p.dataId).id,i.shape[3],o,u,d,l),p}var Aee={kernelName:zl,backendName:"wasm",setupFunc:yee,kernelFunc:xee},mk;function bee(e){mk=e.wasm.cwrap("Max",null,["number","number","number","number"])}function vee(e){let{backend:t,inputs:a,attrs:n}=e,{reductionIndices:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:d,axes:l,originalAxes:p,inputWasTransposed:c}=is(i,r,t);if(c){let x=t.dataIdMap.get(d.dataId).id;u=d,o=x}let h=u.shape.length;C.assertAxesAreInnerMostDims("max",l,h);let[f,m]=C.computeOutAndReduceShapes(u.shape,l),g=v.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(v.sizeFromShape(u.shape)!==0){let x=t.dataIdMap.get(y.dataId).id;mk(o,et[i.dtype],g,x)}if(c&&t.disposeData(d.dataId),s){let x=C.expandShapeToKeepDim(y.shape,p);y.shape=x}return y}var wee={kernelName:"Max",backendName:"wasm",setupFunc:bee,kernelFunc:vee},kee=Pt(Ui),gk;function Iee(e){gk=e.wasm.cwrap(Gi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function See(e){let{inputs:t,attrs:a,backend:n}=e,r=t.x,s=n.dataIdMap.get(r.dataId).id;v.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:i,strides:o,pad:u,dimRoundingMode:d}=a,l=C.computePool2DInfo(r.shape,i,o,1,u,d),p=l.filterHeight,c=l.filterWidth,h=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,x=l.dilationWidth,A=l.strideHeight,b=l.strideWidth,w=l.inChannels,S=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let N=n.makeOutput(l.outShape,"float32"),T=n.dataIdMap.get(N.dataId).id;return gk(s,r.shape[0],r.shape[1],r.shape[2],p,c,h,f,m,g,y,x,A,b,w,S,T),N}var Cee={kernelName:Gi,backendName:"wasm",setupFunc:Iee,kernelFunc:See},yk;function Nee(e){yk=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tee(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:d}=n,l=C.computePool3DInfo(r.shape,s,i,1,o,u,d),p=a.makeOutput(l.outShape,r.dtype);return yk(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(p.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),p}var Ree={kernelName:Ll,backendName:"wasm",setupFunc:Nee,kernelFunc:Tee},xk;function Eee(e){xk=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function _ee(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:d}=n,l=C.computePool3DInfo(s.shape,i,o,1,u,d),p=a.makeOutput(s.shape,s.dtype);return xk(a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(p.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),p}var $ee={kernelName:Md,backendName:"wasm",setupFunc:Eee,kernelFunc:_ee},Ak;function Mee(e){Ak=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Fee(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:d}=n,l=C.computePool2DInfo(s.shape,i,o,1,u,d),p=a.makeOutput(s.shape,s.dtype);return Ak(a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(p.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),p}var Pee={kernelName:$d,backendName:"wasm",setupFunc:Mee,kernelFunc:Fee},bk;function Oee(e){bk=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Dee(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=n;v.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let d=[1,1];v.assert(C.eitherStridesOrDilationsAreOne(i,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let l=C.computePool2DInfo(r.shape,s,i,[1,1],o),p=a.makeOutput(l.outShape,r.dtype),c=a.makeOutput(l.outShape,"int32");return bk(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(p.dataId).id,a.dataIdMap.get(c.dataId).id,et[r.dtype],u,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),[p,c]}var zee={kernelName:Wl,backendName:"wasm",setupFunc:Oee,kernelFunc:Dee},vk;function Lee(e){vk=e.wasm.cwrap(Hi,null,["number, number, number"])}function Wee(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,u=o,d=i,{transposed:l,axes:p,originalAxes:c,inputWasTransposed:h}=is(i,r,t),f=p;if(h){let b=t.dataIdMap.get(l.dataId).id;b!==o&&(d=l,u=b,f=C.getInnerMostAxes(f.length,d.shape.length))}C.assertAxesAreInnerMostDims("mean",f,d.shape.length);let[m,g]=C.computeOutAndReduceShapes(d.shape,f),y=v.sizeFromShape(g),x=d;d.dtype!=="float32"&&(x=os({backend:t,inputs:{x:d},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(x.dataId).id);let A=t.makeOutput(m,"float32");if(v.sizeFromShape(d.shape)!==0){let b=t.dataIdMap.get(A.dataId).id;vk(u,y,b)}if(h&&t.disposeData(l.dataId),s){let b=C.expandShapeToKeepDim(A.shape,c);A.shape=b}return d.dtype!=="float32"&&t.disposeData(x.dataId),A}var Bee={kernelName:Hi,backendName:"wasm",setupFunc:Lee,kernelFunc:Wee},wk;function Vee(e){wk=e.wasm.cwrap("Min",null,["number","number","number","number"])}function Uee(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,u=o,d=i,{transposed:l,axes:p,originalAxes:c,inputWasTransposed:h}=is(i,r,t);if(h){let A=t.dataIdMap.get(l.dataId).id;A!==o&&(d=l,u=A)}let f=d.shape.length;C.assertAxesAreInnerMostDims("min",p,f);let[m,g]=C.computeOutAndReduceShapes(d.shape,p),y=v.sizeFromShape(g),x=t.makeOutput(m,d.dtype);if(v.sizeFromShape(d.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;wk(u,et[i.dtype],y,A)}if(h&&t.disposeData(l.dataId),s){let A=C.expandShapeToKeepDim(x.shape,c);x.shape=A}return x}var Gee={kernelName:"Min",backendName:"wasm",setupFunc:Vee,kernelFunc:Uee},Hee=Pt(ji),u0;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(u0||(u0={}));var kk;function jee(e){kk=e.wasm.cwrap(qi,null,["number","array","number","number","array","array","number","number"])}function qee(e){let{inputs:{x:t},backend:a,attrs:{paddings:n,mode:r}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]),i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),u=a.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),l=n.map(f=>f[0]),p=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),h=new Uint8Array(new Int32Array(p).buffer);return kk(i,d,t.shape.length,et[t.dtype],c,h,u0[r],u),o}var Xee={kernelName:qi,backendName:"wasm",kernelFunc:qee,setupFunc:jee},Ik;function Kee(e){Ik=e.wasm.cwrap(vo,null,["number","number","number","number"])}function Sk(e){let{backend:t,inputs:{logits:a},attrs:{dim:n}}=e,r=t.dataIdMap.get(a.dataId).id,s=t.makeOutput(a.shape,a.dtype),i=t.dataIdMap.get(s.dataId).id,o=a.shape[n],u=v.sizeFromShape(a.shape)/o;return v.sizeFromShape(s.shape)===0||Ik(r,i,o,u),s}var Yee={kernelName:vo,backendName:"wasm",setupFunc:Kee,kernelFunc:Sk},Ck;function Zee(e){Ck=e.wasm.cwrap(Xi,null,["number","number","number","number","number","number"])}function Jee(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=n;if(r.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);let u=o?r:Sk({inputs:{logits:r},backend:a,attrs:{dim:r.shape.length-1}}),[d,l]=u.shape,p=a.makeOutput([d,s],"int32");return Ck(a.dataIdMap.get(u.dataId).id,d,l,s,i,a.dataIdMap.get(p.dataId).id),o||a.disposeData(u.dataId),p}var Qee={kernelName:Xi,backendName:"wasm",setupFunc:Zee,kernelFunc:Jee},ete=Pt("Mod"),tte=Pt(Ki),ate=Ke("Neg");function x2(e,t){let a=new Int32Array(e.wasm.HEAPU8.buffer,t,4),n=a[0],r=a[1],s=a[2],i=a[3];return e.wasm._free(t),{pSelectedIndices:n,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}var Nk;function nte(e){Nk=e.wasm.cwrap(Zi,"number",["number","number","number","number","number"])}function rte(e){let{backend:t,inputs:a,attrs:n}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=n,{boxes:o,scores:u}=a,d=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(u.dataId).id,p=Nk(d,l,s,r,i),{pSelectedIndices:c,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=x2(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",c)}var ste={kernelName:Zi,backendName:"wasm",setupFunc:nte,kernelFunc:rte},Tk;function ite(e){Tk=e.wasm.cwrap(Bl,"number",["number","number","number","number","number","bool"])}function ote(e){let{backend:t,inputs:a,attrs:n}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=n,{boxes:u,scores:d}=a,l=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(d.dataId).id,c=Tk(l,p,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=x2(t,c);t.wasm._free(m);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([],"int32",g);return[y,x]}var lte={kernelName:Bl,backendName:"wasm",setupFunc:ite,kernelFunc:ote},Rk;function ute(e){Rk=e.wasm.cwrap(Ji,"number",["number","number","number","number","number","number"])}function dte(e){let{backend:t,inputs:a,attrs:n}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=n,{boxes:u,scores:d}=a,l=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(d.dataId).id,c=Rk(l,p,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=x2(t,c);t.wasm._free(g);let y=t.makeOutput([f],"int32",h),x=t.makeOutput([f],"float32",m);return[y,x]}var pte={kernelName:Ji,backendName:"wasm",setupFunc:ute,kernelFunc:dte},cte=!1,hte=Pt(Yi,cte,"bool"),Ek;function fte(e){Ek=e.wasm.cwrap(Qi,null,["number","number","number","number","number"])}function mte(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:u}=n,d=a.makeOutput([...r.shape,i],s),l=a.dataIdMap.get(d.dataId).id,p=a.dataIdMap.get(r.dataId).id;return Ek(p,i,o,u,l),d}var gte={kernelName:Qi,backendName:"wasm",setupFunc:fte,kernelFunc:mte};function yte(e){let{inputs:{x:t},backend:a}=e,n=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(n).fill(1),n}var xte={kernelName:Vl,backendName:"wasm",kernelFunc:yte};function Ate(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return l0({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{v.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let p=l0({inputs:{input:l},backend:a,attrs:{dim:r}});return o.push(p),p}),d=Bw({inputs:u,backend:a,attrs:{axis:r}});return o.forEach(l=>a.disposeData(l.dataId)),d}var bte={kernelName:Ul,backendName:"wasm",kernelFunc:Ate},_k;function vte(e){_k=e.wasm.cwrap(eo,null,["number","array","number","number","array","array","number","number"])}function wte(e){let{inputs:{x:t},backend:a,attrs:{paddings:n,constantValue:r}}=e,s=n.map((f,m)=>f[0]+t.shape[m]+f[1]);if(v.sizeFromShape(t.shape)===0)return rk({backend:a,attrs:{shape:s,value:r,dtype:t.dtype}});let i=a.dataIdMap.get(t.dataId).id,o=a.makeOutput(s,t.dtype),u=a.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(t.shape).buffer),l=n.map(f=>f[0]),p=n.map(f=>f[1]),c=new Uint8Array(new Int32Array(l).buffer),h=new Uint8Array(new Int32Array(p).buffer);return _k(i,d,t.shape.length,et[t.dtype],c,h,r,u),o}var $k={kernelName:eo,backendName:"wasm",kernelFunc:wte,setupFunc:vte},kte=Pt("Pow"),Mk;function Ite(e){Mk=e.wasm.cwrap(to,null,["number","number","number"])}function Ste(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t,s=a.dataIdMap.get(n.dataId).id,i=a.dataIdMap.get(r.dataId).id,o=s,u=n,d=u;u.dtype!=="float32"&&(d=os({backend:a,inputs:{x:n},attrs:{dtype:"float32"}}),o=a.dataIdMap.get(d.dataId).id);let l=a.makeOutput(n.shape,"float32"),p=a.dataIdMap.get(l.dataId).id;return Mk(o,i,p),u.dtype!=="float32"&&a.disposeData(d.dataId),l}var Cte={kernelName:to,backendName:"wasm",setupFunc:Ite,kernelFunc:Ste},Fk;function Nte(e){Fk=e.wasm.cwrap(ao,null,["number","number","number","number"])}function Tte(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,u=o,d=i,{transposed:l,axes:p,originalAxes:c,inputWasTransposed:h}=is(i,r,t),f=p;if(h){let A=t.dataIdMap.get(l.dataId).id;A!==o&&(d=l,u=A,f=C.getInnerMostAxes(f.length,d.shape.length))}C.assertAxesAreInnerMostDims("prod",f,d.shape.length);let[m,g]=C.computeOutAndReduceShapes(d.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,d.dtype);if(v.sizeFromShape(d.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;Fk(u,y,et[x.dtype],A)}if(h&&t.disposeData(l.dataId),s){let A=C.expandShapeToKeepDim(x.shape,c);x.shape=A}return x}var Rte={kernelName:ao,backendName:"wasm",setupFunc:Nte,kernelFunc:Tte},Ete=e=>{let{backend:t,attrs:a}=e,{start:n,stop:r,step:s,dtype:i}=a,o=jm(n,r,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u},_te={kernelName:Gl,backendName:"wasm",kernelFunc:Ete},$te=Pt(vi),Mte=Ke(no),Fte=Ke(ro),Pte=Ke(oo),Pk;function Ote(e){Pk=e.wasm.cwrap(io,null,["number","number","number","number","number","number","number","number","number","number"])}function Dte(e){let{backend:t,inputs:a,attrs:n}=e,{images:r}=a,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,d]=o,[l,p,c,h]=r.shape,f=[l,u,d,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=os({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let y=m.id,x=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return x;let A=t.dataIdMap.get(x.dataId).id;return Pk(y,l,p,c,h,u,d,s?1:0,i?1:0,A),g!=null&&t.disposeData(g.dataId),x}var zte={kernelName:io,backendName:"wasm",setupFunc:Ote,kernelFunc:Dte},Ok;function Lte(e){Ok=e.wasm.cwrap(ql,null,["number","number","number","array","array","boolean"])}function Wte(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,o=a.makeOutput(r.shape,"float32"),u=a.dataIdMap.get(r.dataId),d;return u.dtype!=="float32"&&(d=os({backend:a,inputs:{x:r},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(d.dataId)),Ok(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),d!=null&&a.disposeData(d.dataId),o}var Bte={kernelName:ql,backendName:"wasm",setupFunc:Lte,kernelFunc:Wte},Dk;function Vte(e){Dk=e.wasm.cwrap(so,null,["number","number","number","number","number","number","number","number","number","number"])}function Ute(e){let{backend:t,inputs:a,attrs:n}=e,{images:r}=a,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,d]=o,[l,p,c,h]=r.shape,f=[l,u,d,h],m=t.makeOutput(f,"float32");if(v.sizeFromShape(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),y;g.dtype!=="float32"&&(y=os({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let x=g.id,A=t.dataIdMap.get(m.dataId).id;return Dk(x,l,p,c,h,u,d,s?1:0,i?1:0,A),y!=null&&t.disposeData(y.dataId),m}var Gte={kernelName:so,backendName:"wasm",setupFunc:Vte,kernelFunc:Ute},zk;function Hte(e){zk=e.wasm.cwrap(jl,null,["number","number","number","array","array","boolean"])}function jte(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,o=a.makeOutput(r.shape,"float32"),u=a.dataIdMap.get(r.dataId),d;return u.dtype!=="float32"&&(d=os({backend:a,inputs:{x:r},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(d.dataId)),zk(a.dataIdMap.get(r.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(r.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),d!=null&&a.disposeData(d.dataId),o}var qte={kernelName:jl,backendName:"wasm",setupFunc:Hte,kernelFunc:jte},Lk;function Xte(e){Lk=e.wasm.cwrap(lo,null,["number","array","number","array","number","number"])}function Kte(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:s}=n,i=v.parseAxisParam(s,r.shape);if(r.shape.length===0)return gh({inputs:{x:r},backend:a});let o=a.makeOutput(r.shape,r.dtype),u=a.dataIdMap.get(r.dataId).id,d=a.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);Lk(u,l,i.length,p,r.shape.length,d);let c=Ra({inputs:{x:o},attrs:{shape:r.shape},backend:a});return a.disposeData(o.dataId),c}var Yte={kernelName:lo,backendName:"wasm",kernelFunc:Kte,setupFunc:Xte},Wk;function Zte(e){Wk=e.wasm.cwrap(To,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Jte(e){let{inputs:t,backend:a,attrs:n}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=n,u=a.makeOutput(r.shape,r.dtype),d=a.dataIdMap.get(r.dataId).id,l=a.dataIdMap.get(u.dataId).id,[p,c,h,f]=r.shape,[m,g]=C.getImageCenter(o,c,h),y=i===0,x=255,A=typeof i=="number"?[i,i,i,y?0:x]:[...i,x],b=new Uint8Array(new Int32Array(A).buffer);return Wk(d,p,c,h,f,s,m,g,b,A.length,l),u}var Qte={kernelName:To,backendName:"wasm",kernelFunc:Jte,setupFunc:Zte},eae=Ke(uo),tae=Ke(po),Bk;function aae(e){Bk=e.wasm.cwrap(co,null,["number","number","number","number","number","number","array","number","number"])}function nae(e){let{backend:t,inputs:a,attrs:n}=e,{indices:r,updates:s}=a,{shape:i}=n,o=t.makeOutput(i,s.dtype);if(v.sizeFromShape(i)===0)return o;let{sliceRank:u,numUpdates:d,sliceSize:l,strides:p,outputSize:c}=Qc.calculateShapes(s,r,i),h=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return Bk(h,f,et[s.dtype],u,d,l,m,c,g),o}var rae={kernelName:co,backendName:"wasm",setupFunc:aae,kernelFunc:nae},Vk;function sae(e){Vk=e.wasm.cwrap(fo,null,["number","number","number","number","number","number","bool","number"])}function iae(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:s}=t,{side:i}=n;if(r.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${s.dtype}`);let o=a.makeOutput(s.shape,"int32");function u(d){return a.dataIdMap.get(d.dataId).id}return Vk(u(r),u(s),r.shape[0],r.shape[1],s.shape[1],et[r.dtype],i==="left",u(o)),o}var oae={kernelName:fo,backendName:"wasm",setupFunc:sae,kernelFunc:iae},Uk;function lae(e){Uk=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function uae(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t,i=a.dataIdMap.get(n.dataId).id,o=a.dataIdMap.get(r.dataId).id,u=a.dataIdMap.get(s.dataId).id,d=a.makeOutput(r.shape,r.dtype),l=a.dataIdMap.get(d.dataId).id,p=n.shape.length,c=r.shape.length,h=p===0||p>1||c===1?1:v.sizeFromShape(r.shape.slice(1));return Uk(i,o,u,h,l),d}var dae={kernelName:Xl,backendName:"wasm",kernelFunc:uae,setupFunc:lae},pae=Ke(mo),Gk;function cae(e){Gk=e.wasm.cwrap(xo,null,["number","number"])}function hae(e){let{backend:t,inputs:{x:a}}=e,n=t.dataIdMap.get(a.dataId).id,r=t.makeOutput(a.shape,a.dtype),s=t.dataIdMap.get(r.dataId).id;return v.sizeFromShape(r.shape)===0||Gk(n,s),r}var fae={kernelName:"Sigmoid",backendName:"wasm",setupFunc:cae,kernelFunc:hae},mae=Ke(yo),gae=Ke("Sin"),yae=Ke(go),xae=Ke(Ao);function Aae(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n,o=v.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let g=1+s.length;g<r.shape.length;++g)u.push([0,0]);let d=$k.kernelFunc({inputs:{x:r},backend:a,attrs:{paddings:u,constantValue:0}}),l=C.getReshaped(d.shape,s,o,!1),p=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(d.shape,s,o,!1),h=Ra({inputs:{x:d},backend:a,attrs:{shape:l}}),f=Yr({inputs:{x:h},backend:a,attrs:{perm:p}}),m=Ra({inputs:{x:f},backend:a,attrs:{shape:c}});return a.disposeData(d.dataId),a.disposeData(h.dataId),a.disposeData(f.dataId),m}var bae={kernelName:Yl,backendName:"wasm",kernelFunc:Aae},Hk;function vae(e){Hk=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function wae(e){let{backend:t,inputs:a}=e,{indices:n,values:r,denseShape:s,defaultValue:i}=a,o=n.shape[0],u=n.shape[1],d=t.readSync(s.dataId)[0],l=[o+d,u],p=t.dataIdMap.get(n.dataId).id,c=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(l,n.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(l.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,x=t.makeOutput([d],"bool"),A=t.dataIdMap.get(x.dataId).id,b=t.makeOutput([o],n.dtype),w=t.dataIdMap.get(b.dataId).id,S=t.makeOutput([4],"int32"),N=t.dataIdMap.get(S.dataId).id,T=Hk(p,c,et[r.dtype],o,d,u,h,m,y,A,w,N),_=t.readSync(S.dataId),P;switch(_[0]){case 1:{P=C.getSparseFillEmptyRowsIndicesDenseShapeMismatch(_[1]);break}case 2:{P=C.getSparseFillEmptyRowsNegativeIndexErrorMessage(_[1],_[2]);break}case 3:P=C.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(_[1],_[2],_[3]);break;default:P=""}if(t.disposeData(S.dataId),P)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),new Error(P);let E=f,I=g;return T!==l[0]&&(E=qs({inputs:{x:f},attrs:{begin:0,size:[T,u]},backend:t}),I=qs({inputs:{x:g},attrs:{begin:0,size:T},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[E,I,x,b]}var kae={kernelName:Pd,backendName:"wasm",setupFunc:vae,kernelFunc:wae},jk;function Iae(e){jk=e.wasm.cwrap(Jl,null,["number","number","number","number","number","number","number"])}function Sae(e){let{backend:t,inputs:a}=e,{inputIndices:n,inputShape:r,newShape:s}=a;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(n.dataId).id,o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(s.dataId).id,d=n.shape[0],l=v.sizeFromShape(s.shape),p=t.makeOutput([d,l],n.dtype),c=t.dataIdMap.get(p.dataId).id,h=t.makeOutput([l],s.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;jk(i,o,u,d,c,f,g);let y=t.readSync(m.dataId),x;switch(y[0]){case 0:{x=C.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{x=C.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:x=C.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=C.getSparseReshapeInputOutputMultipleErrorMessage(A,b);break}case 4:{let A=Array.from(t.readSync(r.dataId)),b=Array.from(t.readSync(h.dataId));x=C.getSparseReshapeInputOutputMismatchErrorMessage(A,b);break}default:x=""}if(t.disposeData(m.dataId),x)throw t.disposeData(p.dataId),t.disposeData(h.dataId),new Error(x);return[p,h]}var Cae={kernelName:Jl,backendName:"wasm",setupFunc:Iae,kernelFunc:Sae},qk;function Xk(e){qk=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Kk(e,t){let{backend:a,inputs:n}=e,{data:r,indices:s,segmentIds:i}=n,o=s.shape[0],u=a.readSync(i.dataId,o-1,o)[0],d=o>0?u+1:0;if(d<0)throw new Error(C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let l=r.shape.slice();l[0]=d;let p=a.dataIdMap.get(r.dataId).id,c=a.dataIdMap.get(s.dataId).id,h=a.dataIdMap.get(i.dataId).id,f=a.makeOutput(l,r.dtype),m=a.dataIdMap.get(f.dataId).id,g=a.makeOutput([4],"int32"),y=a.dataIdMap.get(g.dataId).id;qk(p,et[r.dtype],r.shape[0],c,h,m,y,t,0);let x=a.readSync(g.dataId),A;switch(x[0]){case 0:{A=C.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{A=C.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:A=C.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:A=C.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:A=""}if(a.disposeData(g.dataId),A)throw a.disposeData(f.dataId),new Error(A);return f}function Nae(e){return Kk(e,!0)}var Tae={kernelName:Ql,backendName:"wasm",setupFunc:Xk,kernelFunc:Nae};function Rae(e){return Kk(e,!1)}var Eae={kernelName:eu,backendName:"wasm",setupFunc:Xk,kernelFunc:Rae},Yk;function _ae(e){Yk=e.wasm.cwrap(wo,null,["number","number","number","number","number","number","number","number","array","number","number"])}function $ae(e){let{backend:t,inputs:a,attrs:n}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=a,{outputShape:o}=n,u=t.makeOutput(o,i.dtype);if(v.sizeFromShape(o)===0)return u;let{sliceRank:d,numUpdates:l,sliceSize:p,strides:c,outputSize:h}=C.calculateShapes(s,r,o),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(c).buffer),x=t.dataIdMap.get(u.dataId).id;return Yk(f,m,s.shape.length,g,et[i.dtype],d,l,p,y,h,x),u}var Mae={kernelName:wo,backendName:"wasm",setupFunc:_ae,kernelFunc:$ae};function Fae(e){let{inputs:t,attrs:a,backend:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=v.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,s,o),d=new Array(r.shape.length).fill(0),l=r.shape.slice();return u.map(p=>{let c=[...l];c[o]=p;let h=qs({inputs:{x:r},attrs:{begin:d,size:c},backend:n});return d[o]+=p,h})}var Pae={kernelName:Zl,backendName:"wasm",kernelFunc:Fae},Oae=Ke(bo),Dae=Ke(Od),zae=Pt(ko),Zk;function Lae(e){Zk=e.wasm.cwrap(ts,null,["number","number","number","number"])}function Wae(e){let{backend:t,inputs:a,attrs:n}=e,{alpha:r}=n,{x:s}=a,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return Zk(i,r,et[s.dtype],u),o}var Bae={kernelName:ts,backendName:"wasm",setupFunc:Lae,kernelFunc:Wae},Jk;function Vae(e){Jk=e.wasm.cwrap(Io,null,["number","array","number","array","array","array","array","array","number","number"])}function Uae(e){let{backend:t,inputs:a,attrs:n}=e,{x:r}=a,{begin:s,end:i,strides:o,beginMask:u,endMask:d,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:c}=n,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=wt.sliceInfo(r.shape,s,i,o,u,d,l,p,c),w;if(m)w=Ra({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=wt.computeOutShape(x,A,b),N=qs({inputs:{x:r},backend:t,attrs:{begin:x,size:S}});w=Ra({inputs:{x:N},backend:t,attrs:{shape:f}}),t.disposeData(N.dataId)}else{let S=t.makeOutput(h,"float32"),N=t.dataIdMap.get(r.dataId).id,T=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),_=new Uint8Array(new Int32Array(x).buffer),P=new Uint8Array(new Int32Array(A).buffer),E=new Uint8Array(new Int32Array(b).buffer),I=new Uint8Array(new Int32Array(h).buffer),F=new Uint8Array(new Int32Array(v.computeStrides(h)).buffer),$=t.dataIdMap.get(S.dataId).id;Jk(N,T,r.shape.length,_,P,E,I,F,h.length,$),w=Ra({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeData(S.dataId)}return w}var Gae={kernelName:Io,backendName:"wasm",setupFunc:Vae,kernelFunc:Uae};function Hae(e){let{backend:t,inputs:a,attrs:n}=e,{data:r,dataSplits:s}=a,{separator:i,nGramWidths:o,leftPad:u,rightPad:d,padWidth:l,preserveShortSequences:p}=n,c=t.readSync(r.dataId),h=t.readSync(s.dataId),[f,m]=Xm(c,h,i,o,u,d,l,p),g=t.makeOutput([f.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=f;let x=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(x).set(m),[g,x]}var jae={kernelName:tu,backendName:"wasm",kernelFunc:Hae};function qae(e){let{backend:t,inputs:a,attrs:n}=e,{input:r,delimiter:s}=a,{skipEmpty:i}=n,o=t.readSync(r.dataId),u=t.readSync(s.dataId),[d,l,p]=Km(o,u[0],i),c=l.length,h=t.makeOutput([c,2],"int32");t.typedArrayFromHeap(h).set(d);let f=t.makeOutput([c],"string"),m=t.dataIdMap.get(f.dataId);m.stringBytes=l;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(p),[h,f,g]}var Xae={kernelName:zd,backendName:"wasm",kernelFunc:qae};function Kae(e){let{backend:t,inputs:a,attrs:n}=e,{input:r}=a,{numBuckets:s}=n,i=t.readSync(r.dataId),o=Ym(i,s),u=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(u).set(o),u}var Yae={kernelName:Ld,backendName:"wasm",kernelFunc:Kae},Zae=Pt("Sub"),Qk;function Jae(e){Qk=e.wasm.cwrap("Sum",null,["number","number","number","number"])}function Qae(e){let{backend:t,inputs:a,attrs:n}=e,{axis:r,keepDims:s}=n,{x:i}=a,o=t.dataIdMap.get(i.dataId).id,u=o,d=i,{transposed:l,axes:p,originalAxes:c,inputWasTransposed:h}=is(i,r,t),f=p;if(h){let A=t.dataIdMap.get(l.dataId).id;A!==o&&(d=l,u=A,f=C.getInnerMostAxes(f.length,d.shape.length))}C.assertAxesAreInnerMostDims("sum",f,d.shape.length);let[m,g]=C.computeOutAndReduceShapes(d.shape,f),y=v.sizeFromShape(g),x=t.makeOutput(m,d.dtype);if(v.sizeFromShape(d.shape)!==0){let A=t.dataIdMap.get(x.dataId).id;Qk(u,y,et[x.dtype],A)}if(h&&t.disposeData(l.dataId),s){let A=C.expandShapeToKeepDim(x.shape,c);x.shape=A}return x}var ene={kernelName:"Sum",backendName:"wasm",setupFunc:Jae,kernelFunc:Qae},tne=Ke("Tan"),ane=Ke(So),e7;function nne(e){e7=e.wasm.cwrap(ho,null,["number","number","number","number","number","number","array","number","number","number"])}function rne(e){let{backend:t,inputs:a,attrs:n}=e,{tensor:r,indices:s,updates:i}=a,o=t.makeOutput(r.shape,r.dtype);if(v.sizeFromShape(r.shape)===0)return o;let{sliceRank:u,numUpdates:d,sliceSize:l,strides:p,outputSize:c}=Qc.calculateShapes(i,s,r.shape),h=t.dataIdMap.get(s.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return e7(h,f,et[i.dtype],u,d,l,g,c,y,m),o}var sne={kernelName:ho,backendName:"wasm",setupFunc:nne,kernelFunc:rne},t7;function ine(e){t7=e.wasm.cwrap(es,null,["number","array","number","array","number","number"])}function one(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,s=a.dataIdMap.get(r.dataId).id,{reps:i}=n,o=new Array(r.shape.length);for(let c=0;c<o.length;c++)o[c]=r.shape[c]*i[c];let u=new Uint8Array(new Int32Array(r.shape).buffer),d=new Uint8Array(new Int32Array(o).buffer),l=a.makeOutput(o,r.dtype),p=a.dataIdMap.get(l.dataId).id;return t7(s,u,r.shape.length,d,o.length,et[l.dtype],p),l}var lne={kernelName:es,backendName:"wasm",setupFunc:ine,kernelFunc:one},a7;function une(e){a7=e.wasm.cwrap(Co,null,["number","array","number","number","number","bool","number","number"])}var dne=({inputs:e,backend:t,attrs:a})=>{let{x:n}=e,{k:r,sorted:s}=a,i=t.dataIdMap.get(n.dataId).id,o=new Uint8Array(new Int32Array(n.shape).buffer),u=n.shape.slice();u[u.length-1]=r;let d=t.makeOutput(u,n.dtype),l=t.dataIdMap.get(d.dataId).id,p=t.makeOutput(u,"int32"),c=t.dataIdMap.get(p.dataId).id;return a7(i,o,n.shape.length,et[n.dtype],r,s,l,c),[d,p]},pne={kernelName:Co,backendName:"wasm",setupFunc:une,kernelFunc:dne},n7;function cne(e){n7=e.wasm.cwrap(No,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function hne(e){let{backend:t,inputs:a,attrs:n}=e,{image:r,transforms:s}=a,{interpolation:i,fillMode:o,fillValue:u,outputShape:d}=n,[l,p,c,h]=r.shape,[f,m]=d??[p,c],g=[l,f,m,h],y=new Uint8Array(new Int32Array(v.computeStrides(r.shape)).buffer),x=new Uint8Array(new Int32Array(v.computeStrides(g)).buffer),A=t.makeOutput(g,r.dtype),b=t.dataIdMap.get(A.dataId).id,w=t.dataIdMap.get(r.dataId).id,S=t.dataIdMap.get(s.dataId).id,N=i==="nearest"?1:2,T;switch(o){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}return n7(w,S,s.shape[0]>1,l,f,m,h,c,p,y,r.shape.length-1,x,g.length-1,N,T,u,b),A}var fne={kernelName:No,backendName:"wasm",setupFunc:cne,kernelFunc:hne};function mne(e){let{inputs:t,attrs:a,backend:n}=e,{axis:r}=a,{x:s}=t,{outputValues:i,outputShape:o,indices:u}=Jm(n.readSync(s.dataId),r,s.shape,s.dtype);return[n.makeOutput(o,s.dtype,void 0,i),n.makeOutput([u.length],"int32",void 0,u)]}var gne={kernelName:Wd,backendName:"wasm",kernelFunc:mne};function yne(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r.shape[s],o=r.shape.length,u=new Array(o-1),d=0;for(let h=0;h<o;h++)h!==s&&(u[d++]=r.shape[h]);let l=new Array(i),p=new Array(o).fill(0),c=r.shape.slice();c[s]=1;for(let h=0;h<l.length;h++)p[s]=h,l[h]=qs({inputs:{x:r},attrs:{begin:p,size:c},backend:a});return l.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:u}))}var xne={kernelName:au,backendName:"wasm",kernelFunc:yne};function Ane(e){let{inputs:{x:t},backend:a}=e,n=a.makeOutput(t.shape,t.dtype);return a.typedArrayFromHeap(n).fill(0),n}var bne={kernelName:nu,backendName:"wasm",kernelFunc:Ane},vne=[cZ,hZ,fZ,mZ,gZ,AZ,NZ,EZ,_Z,$Z,MZ,FZ,PZ,OZ,DZ,WZ,KZ,UZ,jZ,QZ,sJ,lJ,uJ,pJ,cJ,hJ,gJ,yJ,bJ,kJ,CJ,RJ,$J,MJ,FJ,DJ,WJ,UJ,jJ,KJ,JJ,tQ,rQ,oQ,dQ,pQ,fQ,gQ,yQ,xQ,AQ,bQ,vQ,IQ,SQ,CQ,RQ,$Q,PQ,zQ,BQ,UQ,HQ,bZ,jQ,qQ,XQ,ZQ,QQ,tee,ree,iee,see,lee,uee,pee,hee,gee,Aee,wee,kee,Cee,Ree,$ee,Pee,zee,Bee,Gee,Hee,Xee,Qee,ete,tte,ate,ste,lte,pte,hte,gte,xte,bte,$k,kte,Cte,Rte,_te,$te,Mte,Fte,Pte,YZ,zte,Bte,Gte,qte,Yte,Qte,eae,tae,rae,oae,dae,pae,fae,mae,gae,yae,nJ,Yee,xae,bae,kae,Cae,Tae,Eae,Mae,Pae,Oae,Dae,zae,Bae,Gae,jae,Xae,Yae,Zae,ene,tne,ane,sne,lne,pne,fne,IZ,gne,xne,bne];for(let e of vne)Sn(e);var d0=U();d0.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});d0.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(d0.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var ty=vl(fI()),wne=vl(mI()),ay=vl(gI()),ny=ty.default||ty,kne=ay.default||ay,r7=class extends wl{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(s7),c0=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new xd(this,$t())}write(e,t,a){let n={id:this.dataIdNextNumber++};return this.move(n,e,t,a,1),n}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,a,n,r){let s=this.dataIdNextNumber++;if(n==="string"){let d=t;this.dataIdMap.set(e,{id:s,stringBytes:d,shape:a,dtype:n,memoryOffset:null,refCount:r});return}let i=v.sizeFromShape(a),o=i*v.bytesPerElement(n),u=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:a,dtype:n,refCount:r}),this.wasm.tfjs.registerTensor(s,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,a){let{memoryOffset:n,dtype:r,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(a==null||a>=i.length)?i:i.slice(t,a);t=t||0,a=a||v.sizeFromShape(s);let o=v.bytesPerElement(r),u=this.wasm.HEAPU8.slice(n+t*o,n+a*o);return Cne(u.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let a=this.dataIdMap.get(e);if(a.refCount--,!t&&a.refCount>0)return!1;this.wasm._free(a.memoryOffset),this.wasm.tfjs.disposeData(a.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,a,n){let r;if(a==null)r=this.write(n??null,e,t);else{let s=this.dataIdNextNumber++;r={id:s},this.dataIdMap.set(r,{id:s,memoryOffset:a,shape:e,dtype:t,refCount:1});let i=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,a)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:a}){let n=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(a),s=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(n,r,s);case"int32":return new Int32Array(n,r,s);case"bool":return new Uint8Array(n,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Ine(e){return(t,a)=>(v.fetch(e,{credentials:"same-origin"}).then(n=>{n.ok||t.env.a(`failed to load wasm binary file at '${e}'`),n.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(s=>{a(s.instance,s.module)})})}),{})}function ry(e,t,a){if(Tc!=null)return Tc;let n="tfjs-backend-wasm.wasm";return e&&t?n="tfjs-backend-wasm-threaded-simd.wasm":e&&(n="tfjs-backend-wasm-simd.wasm"),ju!=null&&ju[n]!=null?ju[n]:a+n}async function Sne(){let[e,t]=await Promise.all([U().getAsync("WASM_HAS_SIMD_SUPPORT"),U().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((a,n)=>{let r={};r.locateFile=(o,u)=>{if(o.endsWith(".worker.js")){let d=wne.wasmWorkerContents.replace(/\n/g,"\\n"),l=new Blob([d],{type:"application/javascript"});return URL.createObjectURL(l)}return o.endsWith(".wasm")?ry(e,t,Ou??u):u+o},A2&&(r.instantiateWasm=Ine(ry(e,t,Ou??"")));let s=!1;r.onAbort=()=>{s||qu||(qu=!0,n({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Tc==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+ny.toString()],{type:"text/javascript"}),i=ny(r)):i=kne(r),i.then(o=>{s=!0,qu=!1;let u=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",u,["number"]),dispose:o.cwrap("dispose",u,[])},a({wasm:o})}).catch(n)})}function Cne(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Nne=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Tc=null,Ou=null,ju={},qu=!1,A2=!1;function Tne(e,t=!1){if(vA("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),qu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Tc=e,A2=t}function p0(e,t=!1){if(qu)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")Ou=e;else{ju=e;let a=Nne.filter(n=>ju[n]==null);if(a.length>0)throw new Error(`There were no entries found for the following binaries: ${a.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}A2=t}var s7=-1,c0=-1;function Rne(e){s7=e}function Ene(){if(c0===-1)throw new Error("WASM backend not initialized.");return c0}var _ne="4.22.0",$ne=2;ru("wasm",async()=>{let{wasm:e}=await Sne();return new r7(e)},$ne);var nn=U();nn.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);nn.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);nn.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);nn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);nn.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);nn.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);nn.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);nn.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);nn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);nn.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);nn.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);nn.registerFlag("WEBGPU_PRINT_SHADER",()=>"");nn.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var Mne=class{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}},Fne=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,a=!1,n=!0){let r,s=sy(e,t);return n?(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).length>0?(r=this.freeBuffers.get(s).pop(),this.numFreeBuffers--):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e)):(r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.usedBuffers.get(s).push(r),this.numUsedBuffers++,this.numBytesUsed+=e,r}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;let a=e.size,n=e.usage,r=sy(a,n),s=this.usedBuffers.get(r),i=s.indexOf(e);if(i<0)throw new Error("Cannot find the buffer in buffer manager");s[i]=s[s.length-1],s.pop(),this.numUsedBuffers--,this.numBytesUsed-=a,t?(this.freeBuffers.get(r).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=a)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function sy(e,t){return`${e}_${t}`}var Pne=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,a,n){let r=oy(a),s=e*t*r,i=iy(e,t,a,n);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=s,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=s;let o=this.device.createTexture({size:[e,t],format:a,usage:n});return this.usedTextures.get(i).push(o),o}releaseTexture(e){if(this.freeTextures.size===0)return;let t=e.width,a=e.height,n=e.format,r=e.usage,s=iy(t,a,n,r);this.freeTextures.has(s)||this.freeTextures.set(s,[]),this.freeTextures.get(s).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(s),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1);let u=oy(n),d=t*a*u;this.numBytesUsed-=d}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(a=>{a.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function iy(e,t,a,n){return`${e}_${t}_${a}_${n}`}function oy(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}function One(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let a=e.length,n="xyzwuv",r=e.map(i=>`${t}.${n[i]}`),s=new Array(a-1);s[a-2]=r[a-1];for(let i=a-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}var ls=(e,t,a)=>a==="int32"?`atomicAdd(${e}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`,Al;(function(e){e[e.FROM_PIXELS=0]="FROM_PIXELS",e[e.DRAW=1]="DRAW"})(Al||(Al={}));var Dne=(e,t,a,n,r)=>{let s={dtype:n.dtype,shape:n.shape},i=Lne(a,s,t),o=e.createShaderModule({code:i,label:t.constructor.name}),u=U().get("WEBGPU_PRINT_SHADER");if(u!==""){u=u.toLowerCase();let d=u.split(",");(u==="all"||d.some(l=>t.shaderKey.toLowerCase().includes(l)))&&(console.group(t.shaderKey),console.debug(i),console.groupEnd())}return r?e.createComputePipelineAsync({compute:{module:o,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:o,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},Ve=(e,t="f32")=>{switch(e){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component ${t} is not supported.`)}};function Tt(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ir(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function oe(...e){let t;switch(e.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${e[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function ly(e,t){let a;return a=`
     ${zne(t)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${e?"main(getGlobalIndex());":"main();"};
      }
    `,a}function zne(e){return`
  @compute @workgroup_size(${e.workgroupSize[0]}, ${e.workgroupSize[1]}, ${e.workgroupSize[2]})
`}function Lne(e,t,a){let n=[],r=a.workgroupSize[0]*a.workgroupSize[1]*a.workgroupSize[2];if(a.outputComponent=a.outputComponent?a.outputComponent:1,n.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${i7(a)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),a.pixelsOpType!=null){let h=a.pixelsOpType===Al.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Is(t.dtype,a.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Is(e[0].dtype,a.outputComponent)}>;`,f=t.shape.length===3?"vec2<i32>":"i32";n.push(`
        struct Uniform {
          outShapeStrides : ${f},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${h}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let m=dy(a);return[uy,n.join(`
`),tc(t.shape),a.getUserCode(),ly(m,a)].join(`
`)}let s,i,o="struct Uniforms { NAN : f32, INFINITY : f32, ";a.variableNames.forEach((h,f)=>{let m=Tt(e[f].shape.length);o+=`${h.charAt(0).toLowerCase()+h.slice(1)}Shape : ${m}, `,s=e[f].shape.length-1,i=Tt(s),o+=`${h.charAt(0).toLowerCase()+h.slice(1)}ShapeStrides: ${i}, `});let u=Tt(t.shape.length);o+=`outShape : ${u}, `,s=t.shape.length-1,i=Tt(s),o+=`
         outShapeStrides: ${i}, `,a.size&&(o+="size : i32, "),a.uniforms&&(o+=a.uniforms),o+="};",o=Xne(o),n.push(o),a.atomic?n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):n.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Is(t.dtype,a.outputComponent)}>;
    `),a.variableNames.forEach((h,f)=>{n.push(`
      @group(0) @binding(${1+f}) var<storage, read> ${h}: array<${a.variableComponents?Is(e[f].dtype,a.variableComponents[f]):Is(e[f].dtype,a.outputComponent)}>;
        `)}),o!==""&&n.push(`
      @group(0) @binding(${1+a.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let d=Hne(t.shape,a.dispatchLayout),l=[uy,n.join(`
`)+Bne,tc(t.shape),d,jne(t.shape.length)];a.atomic||l.push(qne(t.shape,t.dtype,a.outputComponent)),a.variableNames.forEach((h,f)=>{l.push(`${tc(e[f].shape,h)}`)});let p=e.map((h,f)=>Gne(h,t.shape,a.variableComponents?a.variableComponents[f]:a.outputComponent,a.dispatchLayout.x.length===t.shape.length)).join(`
`);l.push(p),l.push(a.getUserCode());let c=dy(a);return l.push(ly(c,a)),l.join(`
`)}function Wne(e,t,a){let n=e.shaderKey;if(e.pixelsOpType!=null)return n;let r=[],s=[];t.forEach(l=>{r.push(l.shape),s.push(l.dtype)}),r.push(a.shape),s.push(a.dtype);let i=t.map(l=>C.getBroadcastDims(l.shape,a.shape)),o=t.map(l=>v.arraysEqual(l.shape,a.shape)).join("_"),u=i.map(l=>l.join("_")).join(";"),d=i7(e)?"flatDispatch":"";return n+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+r.map(l=>l.length).join(",")+s.join(",")+e.variableNames.join(",")+u+o+d,n}var uy=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Bne=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function tc(e,t=""){let a=e.length,n=t!==""?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=t!==""?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(a<=1)return`fn ${n}(index : i32) -> i32 { return index; }`;let s=v.computeStrides(e),i=Tt(a),o=[];for(let d=0;d<a;d++)o.push(`d${d}`);if(s.length===1)return`    fn ${n}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let u;return u="var index2 = index;"+s.map((d,l)=>{let p=`let ${o[l]} = index2 / uniforms.${r}.${ir(l)}`,c=l===s.length-1?`let ${o[l+1]} = index2 - ${o[l]} * uniforms.${r}.${ir(l)}`:`index2 = index2 - ${o[l]} * uniforms.${r}.${ir(l)}`;return`${p}; ${c};`}).join(""),`
    fn ${n}(index : i32) -> ${i} {
      ${u}
      return ${i}(${o.join(",")});
    }
  `}function Vne(e,t){let a=e.name,n=e.shape.length,r=Tt(n),s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,n),o=i.map(l=>`${l} : i32`).join(", ");if(n<1)return`
      fn ${s}() -> ${Ve(t)} {
        return ${Ve(t)}(${a}[0]);
      }
    `;let u=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,d=`${n}D`;return n===0&&(d="1D"),`
    fn ${s}(${o}) -> ${Ve(t)} {
      return ${Ve(t)}(${a}[getIndexFromCoords${d}(${r}(${i.join(",")}),
        ${u})${t===1?"":` / ${t}`}]);
    }
   `}function Une(e,t,a,n){let r=e.name,s=r.charAt(0).toUpperCase()+r.slice(1),i="get"+s+"ByOutput",o=e.shape.length,u=t.length,d=Tt(u);if(v.arraysEqual(e.shape,t)&&n)return`
    fn ${i}Index(globalIndex : i32) -> ${Ve(a)} {
      return ${Ve(a)}(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${d}) -> ${Ve(a)} {
      return ${Ve(a)}(${r}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}${a===1?"":` / ${a}`}]);
    }
    `;let l=C.getBroadcastDims(e.shape,t),p=u-o,c="";if(o===0)return`
    fn ${i}Index(globalIndex : i32) -> ${Ve(a)}{
      return get${s}();
    }

    fn ${i}Coords(coords : ${d}) -> ${Ve(a)}{
      return get${s}();
    }
  `;u<2&&l.length>=1?c="coords = 0;":c=l.map(g=>`coords.${ir(g+p)} = 0;`).join(`
`);let h="";if(u<2&&o>0)h="coords";else if(u>1){let g=Tt(o),y=e.shape.map((x,A)=>`coords.${ir(A+p)}`).join(", ");h=`${g}(${y})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return`
  fn ${i}Index(globalIndex : i32) -> ${Ve(a)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${c}
    return ${Ve(a)}(${r}[getIndexFromCoords${m}(${h}, ${f})${a===1?"":` / ${a}`}]);
  }

  fn ${i}Coords(coordsIn : ${d}) -> ${Ve(a)} {
    var coords = coordsIn;
    ${c}
    return ${Ve(a)}(${r}[getIndexFromCoords${m}(${h}, ${f})${a===1?"":` / ${a}`}]);
  }
`}function Gne(e,t,a,n){let r=Vne(e,a);return e.shape.length<=t.length&&(r+=Une(e,t,a,n)),r}function Hne(e,t){let{x:a,y:n=[],z:r=[]}=t,s=e.length,i=a.length+n.length+r.length;if(i!==s)return"";if(a.length===s)return`fn getOutputCoords() -> ${Tt(s)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let o="",u=[a,n,r];for(let c=0;c<u.length;c++){let h=u[c];if(h.length!==0)if(h.length===1)o+=`let d${h[0]} = i32(globalId[${c}]);`;else{let f=One(h,"uniforms.outShape");o+=`var index${c} = i32(globalId[${c}]);`;for(let m=0;m<f.length;m++)o+=`let d${h[m]} = index${c} / ${f[m]};`,m===f.length-1?o+=`let d${h[m+1]} = index${c} - d${h[m]} * ${f[m]};`:o+=`index${c} = index${c} - d${h[m]} * ${f[m]};`}}let d=[];for(let c=0;c<i;c++)d.push(`d${c}`);let l=Tt(i),p=`fn getOutputCoords() -> ${l} {
  ${o}
`;return d.length===0?p+=`return ${l}(0); }`:p+=`return ${l}(${d.join(",")}); }`,p}function jne(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:v.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function i7(e){return e.dispatch[1]===1&&e.dispatch[2]===1}function Is(e,t=1){if(e==="float32")return Ve(t,"f32");if(e==="int32"||e==="bool")return Ve(t,"i32");throw new Error(`type ${e} is not supported.`)}function qne(e,t,a){let n=e.length,r=Is(t,a),s=`fn setOutputAtIndex(flatIndex : i32, value : ${Ve(a)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${Ve(a,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(n>=2){let i=["d0","d1","d2","d3","d4","d5"].slice(0,n),o=Tt(n);s+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : ${Ve(a)}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex${a===1?"":` / ${a}`}, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : ${Ve(a,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex${a===1?"":` / ${a}`}, value);
      }
    `}return s}function Xne(e){let t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,n=>"@align(16) "+n);let a=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(a,(n,r,s)=>`vec${r}, @align(16) ${s}`),e}function dy(e){return!(e.dispatchLayout.hasOwnProperty("y")&&e.dispatchLayout.y.length!==0||e.dispatchLayout.hasOwnProperty("z")&&e.dispatchLayout.z.length!==0)}var o7={};je(o7,{GPUBytesPerElement:()=>h0,MatMulProgramType:()=>vn,assertNotComplex:()=>k2,computeDispatch:()=>ue,computeWorkPerThreadForConv2d:()=>v2,computeWorkgroupInfoForMatMul:()=>l7,computeWorkgroupSizeForConv2d:()=>b2,flatDispatchLayout:()=>fe,isWebGPUSupported:()=>w2,tilesFitEvenlyIntoShape:()=>Kne});var Os=e=>{let t=1;for(let a=0;a<e.length;a++)t*=e[a];return t};function Kne(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((a,n)=>a%e[n]===0)}function ue(e,t,a=[1,1,1],n=[1,1,1]){let[r,s,i]=[Math.ceil(Os(e.x.map(o=>t[o]))/(a[0]*n[0])),e.y?Math.ceil(Os(e.y.map(o=>t[o]))/(a[1]*n[1])):1,e.z?Math.ceil(Os(e.z.map(o=>t[o]))/(a[2]*n[2])):1];return[r,s,i]}function l7(e,t,a,n=!1){let r=[8,8,1],s=[4,4,1];return n||(e<=8&&(s[1]=1),t<=16&&a<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:s}}function b2(e,t,a=!1){if(a)return[8,8,1];let n=Os(e.x.map(s=>t[s])),r=Os(e.y.map(s=>t[s]));return n<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function v2(e,t,a=!1){if(a)return[4,4,1];let n=Os(e.x.map(s=>t[s])),r=Os(e.y.map(s=>t[s]));return n<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function fe(e){return{x:e.map((t,a)=>a)}}function h0(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function w2(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function k2(e,t){Array.isArray(e)||(e=[e]),e.forEach(a=>{a!=null&&v.assert(a.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}var vn;(function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"})(vn||(vn={}));var Yne=U().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Zne=(e,t)=>{let a=e.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,r=t.dispatch;if(r.every(i=>i<=a))return r;v.assert(r[0]>a&&n.y===void 0&&n.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let s=Math.ceil(Math.sqrt(r[0]));return s>a?(s=Math.ceil(Math.cbrt(r[0])),v.assert(s<=a,()=>"Total dispatch size exceeds WebGPU maximum."),[s,s,s]):[s,s,1]},I2=class u7 extends wl{nextDataId(){return u7.nextDataId++}constructor(t,a){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!w2())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=t,this.queue=t.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new Mne(a),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new Fne(this.device),this.textureManager=new Pne(this.device),this.tensorMap=new xd(this,$t()),U().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:t,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(t,a=!1){if(!this.tensorMap.has(t))return!0;let n=this.tensorMap.get(t);return a?n.refCount=0:n.refCount--,n.refCount>0?!1:(n.complexTensorInfos!=null&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(t)?(this.tensorDataPendingDisposal.push(t),!0):(this.releaseResource(t),this.tensorMap.delete(t),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(t){let a=this.tensorMap.get(t);if(!(!a||!a.resource)){if(a.external){a.resource=null;return}a.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(a.resource):a.resource instanceof GPUTexture&&this.textureManager.releaseTexture(a.resource),a.resource=null}}refCount(t){return this.tensorMap.has(t)?this.tensorMap.get(t).refCount:0}incRef(t){let a=this.tensorMap.get(t);a.refCount++}decRef(t){if(this.tensorMap.has(t)){let a=this.tensorMap.get(t);a.refCount--}}write(t,a,n){if(n==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:n,shape:a,values:t,refCount:1}),r}move(t,a,n,r,s){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(t,{dtype:r,shape:n,values:a,refCount:s})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(t=>{this.releaseResource(t),this.tensorMap.delete(t)}),this.uniformPendingDisposal.forEach(t=>this.bufferManager.releaseBuffer(t)),this.stagingPendingDisposal.forEach(t=>this.bufferManager.releaseBuffer(t,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let t;try{t=await Promise.all(Object.values(this.pipelineCache))}catch(a){throw new Error(a.message)}Object.keys(this.pipelineCache).map((a,n)=>{this.pipelineCache[a]=t[n]})}async getBufferData(t){if(U().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let a=t.size,n=this.bufferManager.acquireBuffer(a,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(t,0,n,0,a),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let r=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n),U().getBool("WEBGPU_USE_PROFILE_TOOL")&&(v.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(t,a){let n=this.tensorMap.get(t);return n.values=a,n.values}readSync(t){let a=this.tensorMap.get(t),{values:n,complexTensorInfos:r}=a;if(n!=null||a.dtype==="string")return n;if(a.dtype==="complex64"){let m=this.readSync(r.real.dataId),g=this.readSync(r.imag.dataId),y=v.convertBackendValuesAndArrayBuffer(C.mergeRealAndImagArrays(m,g).buffer,"float32");return this.convertAndCacheOnCPU(t,y),y}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let s=["opaque","premultiplied"],i=a.resource,o=i.size;v.assert(o%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let u=o/4,d=new ArrayBuffer(o),l=256,p=256,c=s.map(m=>new OffscreenCanvas(l,p)),h=new OffscreenCanvas(l,p);this.endComputePassEncoder(),c.map((m,g)=>{let y=m.getContext("webgpu");return y.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:s[g]}),y.getCurrentTexture()}).map((m,g)=>{let y=l*4,x=(T,_,P)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:y,offset:P},{texture:m},{width:T,height:_}),this.submitQueue();let E=h.getContext("2d",{willReadFrequently:!0});E.clearRect(0,0,T,_),E.drawImage(c[g],0,0);let I=E.getImageData(0,0,T,_).data,F=s[g],$=new Uint8ClampedArray(d,P,T*_*4);for(let z=0;z<$.length;z+=4)if(F==="premultiplied")$[z+3]=I[z+3];else{let M=I[z];$[z]=I[z+2],$[z+1]=I[z+1],$[z+2]=M}},A=Math.floor(u/(l*p)),b=l,w=p,S=0;for(let T=0;T<A;T++)x(b,w,S),S+=l*p*4;let N=u%(l*p);w=Math.floor(N/l),w>0&&(x(b,w,S),S+=w*(l*4)),b=N%l,b>0&&x(b,1,S)});let f=v.convertBackendValuesAndArrayBuffer(d,a.dtype);return this.convertAndCacheOnCPU(t,f),f}async read(t){if(!this.tensorMap.has(t))throw new Error(`Tensor ${t} was not registered!`);let a=this.tensorMap.get(t),{values:n}=a;if(n!=null)return n;let r;if(a.dtype==="complex64"){let s=await Promise.all([this.read(a.complexTensorInfos.real.dataId),this.read(a.complexTensorInfos.imag.dataId)]),i=s[0],o=s[1];r=C.mergeRealAndImagArrays(i,o)}else{let s=await this.getBufferData(a.resource);r=v.convertBackendValuesAndArrayBuffer(s,a.dtype)}return this.convertAndCacheOnCPU(t,r),r}copyBuffer(t){let a=t.size,n=t.usage,r=this.bufferManager.acquireBuffer(a,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(t,0,r,0,a),this.submitQueue(),r}createTensorFromGPUData(t,a,n){let r=t.buffer;if(n==="complex64")throw new Error("Cannot write to a complex64 dtype. ");let s={id:this.nextDataId()};this.tensorMap.set(s,{dtype:n,shape:a,values:null,refCount:1,external:t.zeroCopy});let i=this.tensorMap.get(s),o=h0(i.dtype)*v.sizeFromShape(i.shape);if(t.buffer.size<o)throw new Error(`GPUBuffer size(${t.buffer.size}) is smaller than tensor size(${o})!`);if((t.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return t.zeroCopy!==!0&&(r=this.copyBuffer(r)),i.resource=r,$t().makeTensorFromDataId(s,a,n,this)}readToGPU(t){let a=this.tensorMap.get(t),{values:n,dtype:r,shape:s,resource:i}=a;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(i==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let o=i,u=o.size,d=o.usage,l=this.bufferManager.acquireBuffer(u,d);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,l,0,u),this.submitQueue();let p=this.makeTensorInfo(s,r),c=$t().makeTensorFromTensorInfo(p),h=this.tensorMap.get(p.dataId);return h.resource=l,{tensorRef:c,buffer:l}}bufferSync(t){let a=this.readSync(t.dataId);if(t.dtype==="string")try{let n=a.map(r=>v.decodeString(r));return $e(t.shape,t.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return $e(t.shape,t.dtype,a)}async time(t){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let a=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();let s=v.flatten(this.activeTimers.map(d=>d.query)).filter(d=>d!=null),i=v.flatten(this.activeTimers.map(d=>d.name)).filter(d=>d!=null);this.activeTimers=a,r&&(this.programTimersStack=null);let o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(s);return o.kernelMs=v.sum(u),o.getExtraProfileInfo=()=>u.map((d,l)=>({name:i[l],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,o}makeTensorInfo(t,a,n){return a==="string"&&n!=null&&n.length>0&&v.isString(n[0])&&(n=n.map(r=>v.encodeString(r))),{dataId:this.write(n,t,a),shape:t,dtype:a}}tensorToBinding(t){if(!t)return null;let a=this.tensorMap.get(t.dataId).resource;return a instanceof GPUBuffer?{buffer:a}:a instanceof GPUTexture?a.createView():a}uploadToGPU(t){let a=this.tensorMap.get(t);if(a.resource!=null)return;let n=h0(a.dtype)*v.sizeFromShape(a.shape),r,s=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(a.values){if(r=this.bufferManager.acquireBuffer(n,s,!0),r.mapState==="unmapped"){let i=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),o=i.getMappedRange();a.dtype==="int32"||a.dtype==="bool"?new Int32Array(o).set(a.values):new Float32Array(o).set(a.values),i.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,r,0,n),this.stagingPendingDisposal.push(i)}else{let i=r.getMappedRange();a.dtype==="int32"||a.dtype==="bool"?new Int32Array(i).set(a.values):new Float32Array(i).set(a.values),r.unmap()}a.values=null}else r=this.bufferManager.acquireBuffer(n,s);a.resource=r}makeUniforms(t){let a=0,n=0,r=[],s=1;t.forEach(u=>{u.data.length===0&&(u.data=[1]);let d;switch(u.data.length){case 1:d=4;break;case 2:d=8;break;case 3:d=16;break;case 4:d=16;break;case 5:d=16;break;case 6:d=16;break;default:v.assert(!1,()=>`Unsupported ${u.data.length}D shape`)}(n===5||n===6)&&(d=16),d>s&&(s=d),a=Math.ceil(a/d)*d,n=u.data.length,r.push(a),a+=u.data.length*4}),a=Math.ceil(a/s)*s;let i=new ArrayBuffer(a);t.forEach((u,d)=>{let l=r[d];u.type==="int32"?new Int32Array(i,l,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(i,l,u.data.length).set(u.data):new Float32Array(i,l,u.data.length).set(u.data)});let o=this.bufferManager.acquireBuffer(a,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(o,0,i,0,a),this.uniformPendingDisposal.push(o),{offset:0,size:a,buffer:o}}runWebGPUProgram(t,a,n,r,s){if(s||(s=this.makeTensorInfo(t.outputShape,n)),v.sizeFromShape(s.shape)===0)return this.tensorMap.get(s.dataId).values=v.getTypedArrayFromDType(s.dtype,0),s;this.uploadToGPU(s.dataId),t.dispatch=Zne(this.device,t);let i=a.map((u,d)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:t.variableNames[d]}});t.shaderKey=Wne(t,i,s);let o=U().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return t.shaderKey in this.pipelineCache||(this.pipelineCache[t.shaderKey]=Dne(this.device,t,i,s,o)),t.pipeline=this.pipelineCache[t.shaderKey],o||this.recordAndSubmit(t,s,a,r),s}recordAndSubmit(t,a,n,r){if(t.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let s=[],i=[],o="int32";if(t.pixelsOpType==null){s.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=n.concat(a).map(h=>h.shape);let c="int32";i.map(h=>{s.push({type:c,data:h});let f=v.computeStrides(h);s.push({type:c,data:f})})}else{let c=v.computeStrides(a.shape);s.push({type:o,data:c})}if(t.size){let c=v.sizeFromShape(t.outputShape);s.push({type:o,data:[t.outputComponent?c/t.outputComponent:c]})}r&&(s=[...s,...r]);let u=[this.tensorToBinding(a),...n.map(c=>this.tensorToBinding(c)),this.makeUniforms(s)];n.forEach(c=>{this.commandQueueOwnedIds.add(c.dataId)}),this.commandQueueOwnedIds.add(a.dataId);let d=this.device.createBindGroup({layout:t.pipeline.getBindGroupLayout(0),entries:u.map((c,h)=>({binding:h,resource:c}))}),l=this.activeTimers!=null;this.ensureCommandEncoderReady();let p={};l&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),p.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(p)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(p)),this.computePassEncoder.setPipeline(t.pipeline),this.computePassEncoder.setBindGroup(0,d),this.computePassEncoder.dispatchWorkgroups(t.dispatch[0],t.dispatch[1],t.dispatch[2]),this.dispatchCountInPass++,(l||U().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||t.pixelsOpType===Al.DRAW)&&(this.endComputePassEncoder(),l?this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let t=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.querySetCount*8),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);let a=new BigUint64Array(t.getMappedRange()),n=Number(a[1]-a[0])/1e6;return t.unmap(),this.bufferManager.releaseBuffer(t),n}shouldExecuteOnCPU(t,a=Yne){return U().getBool("WEBGPU_CPU_FORWARD")&&t.every(n=>this.tensorMap.get(n.dataId).resource==null&&v.sizeFromShape(n.shape)<a)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};I2.nextDataId=0;w2()&&ru("webgpu",async()=>{let e={powerPreference:U().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),a={},n=[];t.features.has("timestamp-query")&&n.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&n.push(["bgra8unorm-storage"]),a.requiredFeatures=n;let r=t.limits;a.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};let s=await t.requestDevice(a),i="info"in t?t.info:"requestAdapterInfo"in t?await t.requestAdapterInfo():void 0;return new I2(s,i)},3);var _e;(function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.FLOOR_DIV=7]="FLOOR_DIV",e[e.GREATER=8]="GREATER",e[e.GREATER_EQUAL=9]="GREATER_EQUAL",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"})(_e||(_e={}));var Jne="let resultTemp = a + b;",Qne="let resultTemp = atan2(a, b);",ere="let resultTemp = areal * breal - aimag * bimag;",tre="let resultTemp = areal * bimag + aimag * breal;",are="let resultTemp = a / b;",nre="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",rre=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,sre=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,ire=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,ore=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,lre=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,ure=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,dre="return f32(a >= 1.0 && b >= 1.0);",pre=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,cre="return f32(a >= 1.0 || b >= 1.0);",hre=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,fre="let resultTemp = max(a, b);",mre="let resultTemp = min(a, b);",gre=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,yre=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,xre="let resultTemp = a * b;",Are=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,bre=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,vre=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,wre=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,kre="if (a < 0.0) { return b * a; }  return a;",Ire=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Sre="let resultTemp = (a - b) * (a - b);",Cre="let resultTemp = a - b;";function S2(e,t){let a;do{switch(e){case _e.ATAN2:a=Qne;break;case _e.MAX:a=fre;break;case _e.MIN:a=mre;break;case _e.MOD:a=t?yre:gre;break;case _e.NOT_EQUAL:a=t?bre:Are;break;case _e.POW:a=t?wre:vre;break;default:continue}let n,r,s;return t?(n="isnanVec4",r="vec4<f32>",s="vec4<bool>"):(n="isnan",r="f32",s="bool"),`
      let aIsNaN = ${n}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${n}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${a}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${s}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(e){case _e.ADD:a=Jne;break;case _e.COMPLEX_MULTIPLY_IMAG:a=tre;break;case _e.COMPLEX_MULTIPLY_REAL:a=ere;break;case _e.DIV:a=are;break;case _e.ELU_DER:a=nre;break;case _e.EQUAL:a=rre;break;case _e.FLOOR_DIV:a=sre;break;case _e.GREATER:a=ire;break;case _e.GREATER_EQUAL:a=ore;break;case _e.LESS:a=lre;break;case _e.LESS_EQUAL:a=ure;break;case _e.LOGICAL_AND:return t?pre:dre;case _e.LOGICAL_OR:return t?hre:cre;case _e.MUL:a=xre;break;case _e.PRELU:return t?Ire:kre;case _e.SQUARED_DIFFERENCE:a=Sre;break;case _e.SUB:a=Cre;break}return`
    ${a}
    return resultTemp;
  `}var ie;(function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"})(ie||(ie={}));var Nre="return abs(a);",Tre=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,Rre=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,Ere=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,_re="return asinh(a);",$re=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,Mre=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,Fre="return ceil(a);",Pre="return cos(a);",Ore=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Dre="return exp(a) - 1.0;",zre="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Lre=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Wre=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${C.ERF_P};
  let a1 = ${C.ERF_A1};
  let a2 = ${C.ERF_A2};
  let a3 = ${C.ERF_A3};
  let a4 = ${C.ERF_A4};
  let a5 = ${C.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,Bre="return exp(a);",Vre="return floor(a);",Ure="return f32(!isnan(a) && !isinf(a));",Gre="return f32(isinf(a));",Hre="return f32(isnan(a));",jre="return a;",qre=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,Xre=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,Kre="return f32(!(a >= 1.0));",Yre="return -a;",Zre="if (a < 0.0) { return uniforms.alpha * a; } return a;",Jre=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Qre="return 1.0 / a;",ese="return select(a, 0.0, a < 0.0);",tse="return clamp(a, 0.0, 6.0);",ase="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",nse=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,rse="return round(a);",sse="return inverseSqrt(a);",ise=`
  if (a >= 0.0) {
    return ${C.SELU_SCALE} * a;
  } else {
    return ${C.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,ose="return 1.0 / (1.0 + exp(-1.0 * a));",lse="return sign(a);",use="return sin(a);",dse=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,pse=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,cse="return sqrt(a);",hse="return a * a;",fse=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,mse="return tan(a);",gse=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,yse="return f32(i32((a)));";function xs(e,t){switch(e){case ie.ABS:return Nre;case ie.ACOS:return Tre;case ie.ACOSH:return Rre;case ie.ASIN:return Ere;case ie.ASINH:return _re;case ie.ATAN:return $re;case ie.ATANH:return Mre;case ie.COS:return Pre;case ie.COSH:return Ore;case ie.CEIL:return Fre;case ie.ELU:return t?Lre:zre;case ie.ERF:return Wre;case ie.EXP:return Bre;case ie.EXPM1:return Dre;case ie.FLOOR:return Vre;case ie.IS_FINITE:return Ure;case ie.IS_INF:return Gre;case ie.IS_NAN:return Hre;case ie.LINEAR:return jre;case ie.LOG:return qre;case ie.LOG1P:return Xre;case ie.LOGICAL_NOT:return Kre;case ie.NEG:return Yre;case ie.LEAKYRELU:return t?Jre:Zre;case ie.RECIPROCAL:return Qre;case ie.RELU:return t?nse:ese;case ie.RELU6:return t?ase:tse;case ie.ROUND:return rse;case ie.RSQRT:return sse;case ie.SELU:return ise;case ie.SIGMOID:return ose;case ie.SIGN:return lse;case ie.SIN:return use;case ie.SINH:return dse;case ie.SOFTPLUS:return pse;case ie.SQRT:return cse;case ie.SQUARE:return hse;case ie.STEP:return fse;case ie.TAN:return mse;case ie.TANH:return gse;case ie.TO_INT:return yse;default:throw new Error(`BinaryType ${e} is not implemented!`)}}function gr(e,t=!1,a=!1,n=3){if(e===null)return"";let r="";if(e==="linear")r=xs(ie.LINEAR);else if(e==="relu")r=xs(ie.RELU,a);else if(e==="elu")r=xs(ie.ELU,a);else if(e==="relu6")r=xs(ie.RELU6,a);else if(e==="prelu")r=S2(_e.PRELU,a);else if(e==="sigmoid")r=xs(ie.SIGMOID,a);else if(e==="leakyrelu")r=xs(ie.LEAKYRELU,a);else throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let s=Ve(a?4:1),i="";return t?i=`
      fn activation(a : ${s}, coords : vec${n}<i32>) -> ${s} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:i=`
      fn activation(a : ${s}, coords : vec${n}<i32>) -> ${s} {
        ${r}
      }`,i}function Fo(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function d7(e,t,a=!1,n=!1,r=!1,s=1){v.assert(e&&s===1||!e,()=>`transposeA ${e} is not compatible with component size ${s}`);let i=`
      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,o=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${Ve(s)} {
    var value = ${Ve(s)}(0.0);
    ${a&&r?i:`
    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${i}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${Ve(s)} {
    var value = ${Ve(s)}(0.0);
    ${o}
    return value;
  }
  `}function C2(e,t,a,n,r=!1,s=!1,i=!1,o=1){return`
  ${d7(a,n,r,s,i,o)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${Ve(o)}) {
    ${r&&s?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Fo(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var xse=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,Ase=(e,t,a,n)=>{if(e)return`
      for (var k = 0; k < ${n}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${a}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",s="";for(let i=0;i<t;i++)r+=`let BCached${i} = mm_Bsub[k * ${t} + ${i}][tileCol];`,s+=`acc[i] = fma(BCached${i}, vec4<f32>(ACached[${i}]), acc[i]);`;return`
      for (var k = 0; k < ${n/t}; k++) {
        ${r}
        for (var i = 0; i < ${a}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${s}
        }
      }`}};function yh(e,t,a=!1,n=32,r=!1,s=32,i=!1){let o=t[1]*e[1],u=t[0]*e[0],d=a?o:n,l=a?n:o,p=d/t[0],c=n/t[1],h=e[1],f=e[0];return v.assert((a&&p===4&&e[1]===4||!a&&(p===3||p===4))&&d%t[0]===0&&n%t[1]===0&&e[0]===4,()=>`If transposeA ${a} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.
          Otherwise, innerElementSize ${p} must be 3 or 4.
      tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${d/p}>, ${l}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${n}>;

  ${oe()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${h};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${h};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!i?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!i?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${r?`${Math.ceil(s/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${s}`:"0"};

    var acc: array<vec4<f32>, ${h}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${c};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${h}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${xse(a,p)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${Ase(a,p,h,n)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var py=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,bse=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function xh(e,t,a=!1,n=32,r=!1,s=32,i=!1,o=!1){let u=e[1]*t[1],d=e[0]*t[0],l=a?u:n,p=a?n:u;v.assert(p%t[1]===0&&l%t[0]===0&&n%t[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}, tileInner ${n} must be divisible by workgroupSize[1]${t[1]}`);let c=p/t[1],h=l/t[0],f=n/t[1],m=e[1],g=e[0],y=i?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${u};
      let globalColStart = i32(workgroupId.x) * ${d};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
            ${py(a)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${n}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${u};

  let tileRowA = i32(localId.y) * ${c};
  let tileColA = i32(localId.x) * ${h};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${c}; innerRow++) {
      for (var innerCol = 0; innerCol < ${h}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${py(a)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${n};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${n}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${bse(a)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${l}>, ${p}>;
    var<workgroup> mm_Bsub : array<array<f32, ${d}>, ${n}>;

    ${oe()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(s/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${s}`:"0"};

      var acc : array<array<f32, ${g}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}var vse=e=>e?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function wse(e,t=!1){v.assert(e[1]===1&&e[2]===1,()=>`A linear work group size is required. But got ${e}.`);let a=e[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${oe()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${a} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${a} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${vse(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${a/4}; k++) {
          let rowB = t * ${a} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var kse=class{constructor(e,t,a=!1,n=!1,r=null,s=null,i=null,o=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=a?e[1]:e[2];if(this.isVec4=(u%4===0&&!a||t[1]%4===0&&a)&&t[2]%4===0&&!n,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!a,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let p=l7(t[1],u,t[2],a);this.workgroupSize=p.workgroupSize,this.elementsPerThread=p.elementsPerThread}this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let d=r!=null,l=i!=null;d&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=o,this.transposeA=a,this.transposeB=n,this.addBias=d,this.activation=s,this.hasPreluActivationWeights=l,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${a}_${n}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,a){let n=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=r;let s=e%n===0,i=t%r===0,o=a%this.tileInner===0;return[s,i,o]}getUserCode(){return`
      ${gr(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${C2(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?yh(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?wse(this.workgroupSize,this.transposeA):xh(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}};function Ise(e){return`
    var<workgroup> sumValues : array<f32, ${e}>;
    ${oe()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${e}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${e/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Sse=class{constructor(e,t=!1,a=!1,n=null,r=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize);let i=n!=null,o=s!=null;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=a,this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${a}`}getUserCode(){return`
      ${gr(this.activation,this.hasPreluActivationWeights)}
      ${C2(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Ise(this.workgroupSize[0])}
    `}};function Cse(e){let t=e[1],a=e[0],n=t>a?t:a;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${a}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${oe()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var Nse=class{constructor(e,t,a,n=!1,r=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=a,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(a[2]/this.workgroupSize[0]),Math.ceil(a[1]/this.workgroupSize[1]),a[0]];let u=s!=null;u&&this.variableNames.push("bias");let d=o!=null;d&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=d,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${n}_${r}`}getUserCode(){return`
      ${gr(this.activation,this.hasPreluActivationWeights)}
      ${C2(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${Cse(this.workgroupSize)}
    `}},Tse=class{constructor(e,t,a=!1,n=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,v.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let r=(a&&this.outputShape[1]%4===0||!a&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=ue(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=a,this.transposeB=n,this.shaderKey=`matMulSplitK_${a}_${n}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let e=this.outputComponent;return`
      ${d7(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${Ve(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${ls("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?yh(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):xh(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}},Rse=class{constructor(e,t=null,a=null,n=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=n!=null,this.activation=a,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${a}`}getUserCode(){return`
    ${gr(this.activation,this.hasPreluActivationWeights)}
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Fo(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},Ese=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Ea(e){let{backend:t,attrs:a}=e,{shape:n,value:r}=a,{dtype:s}=a;if(s=s||v.inferDtype(r),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(n));return i.fill(r),t.makeTensorInfo(n,s,i)}else{let i=new Ese(n),o=[{type:"float32",data:[r]}];return t.runWebGPUProgram(i,[],s,o)}}var _se={kernelName:Ol,backendName:"webgpu",kernelFunc:Ea};function be(e){let{inputs:t,attrs:a}=e,{x:n}=t,{shape:r}=a,s=v.sizeFromShape(n.shape),i=v.inferFromImplicitShape(r,s),o=v.sizeFromShape(i);return v.assert(s===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${n.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:i,dtype:n.dtype}}var $se={kernelName:Hl,backendName:"webgpu",kernelFunc:be};function Ah({a:e,b:t,transposeA:a,transposeB:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let d=e.shape.length,l=t.shape.length,p=a?e.shape[d-2]:e.shape[d-1],c=n?t.shape[l-1]:t.shape[l-2],h=a?e.shape[d-1]:e.shape[d-2],f=n?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(m),x=v.sizeFromShape(g),A=Ro.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);v.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${a} and transposeB=${n} must match.`);let b=a?[y,p,h]:[y,h,p],w=n?[x,f,c]:[x,c,f],S=be({inputs:{x:e},backend:r,attrs:{shape:b}}),N=be({inputs:{x:t},backend:r,attrs:{shape:w}}),T=[S,N],_=Math.max(y,x),P=[S,N],E=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[p]}],I,F,$=[_,h,f],z=U().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(z<0){let H=U().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),V=H>0?H:r.thresholdToIncreaseWorkgroups,q=_*Math.ceil(h/32)*Math.ceil(f/32);q<=V||h<=8&&q<=V*2?_*h*f<=128?z=vn.MatMulReduceProgram:_===1&&c>=2e3?z=vn.MatMulSplitKProgram:z=vn.MatMulSmallOutputSizeProgram:z=vn.MatMulPackedProgram}switch(z){case vn.MatMulReduceProgram:I=new Sse($,a,n,s,u,i);break;case vn.MatMulSplitKProgram:{if(F=Ea({backend:r,attrs:{shape:$,value:0,dtype:e.dtype}}),I=new Tse($,c,a,n),s||u){F=r.runWebGPUProgram(I,P,e.dtype,E,F);let V=new Rse(F.shape,s,u,i),q=null,G=[F];s&&G.push(s),i&&G.push(i),u==="leakyrelu"&&(q=[{type:"float32",data:[o]}],V.uniforms+=" alpha : f32,");let B=r.runWebGPUProgram(V,G,F.dtype,q);T.push(F);let K=be({inputs:{x:B},backend:r,attrs:{shape:A}});T.push(B);for(let X of T)r.disposeData(X.dataId);return K}break}case vn.MatMulSmallOutputSizeProgram:I=new Nse(b,w,$,a,n,s,u,i);break;case vn.MatMulPackedProgram:let H=r.adapterInfo.isIntel();I=new kse(b,$,a,n,s,u,i,H);break;default:throw new Error(`Unsupported MatMulProgramType ${z}.`)}s&&P.push(s),i&&P.push(i),u==="leakyrelu"&&(E.push({type:"float32",data:[o]}),I.uniforms+=" alpha : f32,"),F=r.runWebGPUProgram(I,P,e.dtype,E,F);let M=be({inputs:{x:F},backend:r,attrs:{shape:A}});T.push(F);for(let H of T)r.disposeData(H.dataId);return M}function Mse(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:d,activation:l,leakyreluAlpha:p}=n;return Ah({a:r,b:s,transposeA:u,transposeB:d,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:l})}var Fse={kernelName:Br,backendName:"webgpu",kernelFunc:Mse},cy=class{constructor(e,t,a){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=C.assertAndGetBroadcastShape(t,a),this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${S2(this.op,!1)}
      }

      ${oe("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Rc=class{constructor(e,t,a){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=C.assertAndGetBroadcastShape(t,a),this.dispatchLayout=fe(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&a.length>1&&t[0]<128,this.useSharedMemoryWithB=a.length<=1&&t.length>1&&a[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?a[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let n=t.length>0&&t[t.length-1]%4===0,r=a.length>0&&a[a.length-1]%4===0;n&&r?(this.outputComponent=4,this.variableComponents=[4,4]):n&&(v.isScalarShape(a)||a[a.length-1]===1)||r&&(v.isScalarShape(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=n?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e,t=this.outputComponent===4?"vec4<f32>":"f32",a=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${S2(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){let n=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",r=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${n}];`:`let a = sharedBuf[${n}];
          let b = getBByOutputIndex(index);`;e=`
        ${a}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${oe("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${r}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${a}
       ${oe("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}};function Ha(e){let{inputs:t}=e,{x:a}=t;return e.backend.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var Pse={kernelName:_i,backendName:"webgpu",kernelFunc:Ha};function Po(e){let{inputs:t,backend:a}=e,{real:n,imag:r}=t,s=a.makeTensorInfo(n.shape,"complex64"),i=a.tensorMap.get(s.dataId),o=Ha({inputs:{x:n},backend:a}),u=Ha({inputs:{x:r},backend:a});return i.complexTensorInfos={real:o,imag:u},s}var Ose={kernelName:kd,backendName:"webgpu",kernelFunc:Po},gu=class{constructor(e,t,a=""){this.variableNames=["A"],this.size=!0;let n=128;this.workgroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,a!==""&&(this.uniforms=a),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${xs(this.op,!1)}
      }
      ${oe("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function Qe({opType:e,cpuKernelImpl:t,dtype:a}){return({inputs:n,backend:r})=>{let{x:s}=n,i=r,o=a||s.dtype;if(i.shouldExecuteOnCPU([s])&&t!=null){let d=i.tensorMap.get(s.dataId),l=t(d.values,o);return i.makeTensorInfo(s.shape,o,l)}let u=new gu(s.shape,e);return i.runWebGPUProgram(u,[s],o)}}function qt({opType:e,cpuKernelImpl:t,supportsComplex:a=!1,dtype:n}){return({inputs:r,backend:s})=>{let{a:i,b:o}=r,u=s;if(a&&i.dtype==="complex64"){let p=u.tensorMap.get(i.dataId),c=u.tensorMap.get(o.dataId),h,f;if(e!==_e.MUL)[h,f]=[[p.complexTensorInfos.real,c.complexTensorInfos.real],[p.complexTensorInfos.imag,c.complexTensorInfos.imag]].map(g=>{let[y,x]=g,A={dataId:y.dataId,dtype:y.dtype,shape:i.shape},b={dataId:x.dataId,dtype:x.dtype,shape:o.shape},w=new Rc(e,i.shape,o.shape);return u.runWebGPUProgram(w,[A,b],ea(y.dtype,x.dtype))});else{let g=new cy(_e.COMPLEX_MULTIPLY_REAL,i.shape,o.shape),y=new cy(_e.COMPLEX_MULTIPLY_IMAG,i.shape,o.shape),x=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:o.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:o.shape}];h=u.runWebGPUProgram(g,x,"float32"),f=u.runWebGPUProgram(y,x,"float32")}let m=Po({inputs:{real:h,imag:f},backend:u});return u.disposeData(h.dataId),u.disposeData(f.dataId),m}let d=n||ea(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||u.shouldExecuteOnCPU([i,o]))&&t!=null){let p=u.tensorMap.get(i.dataId).values,c=u.tensorMap.get(o.dataId).values,h=i.dtype==="string"?C.fromUint8ToStringArray(p):p,f=i.dtype==="string"?C.fromUint8ToStringArray(c):c,[m,g]=t(i.shape,o.shape,h,f,d);return u.makeTensorInfo(g,d,m)}let l=new Rc(e,i.shape,o.shape);return u.runWebGPUProgram(l,[i,o],d)}}var{addImpl:Dse,castImpl:zse,ceilImpl:Lse,concatImpl:Wse,equalImpl:Bse,expImpl:Vse,expm1Impl:Use,floorImpl:Gse,floorDivImpl:Hse,gatherNdImpl:jse,gatherV2Impl:qse,greaterEqualImpl:Xse,greaterImpl:Kse,lessEqualImpl:Yse,lessImpl:Zse,logImpl:Jse,maxImpl:Qse,maximumImpl:eie,minimumImpl:tie,multiplyImpl:aie,negImpl:nie,notEqualImpl:rie,prodImpl:sie,rangeImpl:iie,rsqrtImpl:oie,scatterImpl:lie,simpleAbsImpl:uie,sliceImpl:die,stridedSliceImpl:pie,stringNGramsImpl:cie,subImpl:hie,tileImpl:fie,topKImpl:mie,transposeImpl:gie,uniqueImpl:Lme}=uh,yie=Qe({opType:ie.ABS,cpuKernelImpl:uie}),xie={kernelName:"Abs",backendName:"webgpu",kernelFunc:yie},Aie=Qe({opType:ie.ACOS}),bie={kernelName:Zs,backendName:"webgpu",kernelFunc:Aie},vie=Qe({opType:ie.ACOSH}),wie={kernelName:Js,backendName:"webgpu",kernelFunc:vie},kie=qt({opType:_e.ADD,cpuKernelImpl:Dse,supportsComplex:!0}),Iie={kernelName:"Add",backendName:"webgpu",kernelFunc:kie},Sie=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(a=>{e.push(`let v${a} = get${a}ByOutputCoords(coords);`)});let t=this.variableNames.map(a=>`v${a}`).join(" + ");return`
      ${oe("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function Cie(e){let{inputs:t,backend:a}=e,n=t;if(n.length===1)return Ha({inputs:{x:n[0]},backend:a});let r=n.map(o=>o.dtype).reduce((o,u)=>ea(o,u)),s=n.map(o=>o.shape),i=new Sie(s);return a.runWebGPUProgram(i,n,r)}var Nie={kernelName:Qs,backendName:"webgpu",kernelFunc:Cie},Tie=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];this.outputShape=a,this.dispatchLayout={x:[0],y:[1]},this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){v.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${oe()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},Rie=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[t[n]];this.outputShape=a,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Tt(this.outputShape.length),t=p7(this.newDim);return`
      ${oe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function p7(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let a=new Array(t);for(let n=0;n<e.length;n++)a[e[n]]=`coords.${ir(n)}`;return a.join()}function Hn(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{perm:s}=n,i=a,o=r.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=r.shape[s[l]];if(a.shouldExecuteOnCPU([r])){let l=i.tensorMap.get(r.dataId).values,p=gie(l,r.shape,r.dtype,s,u);return a.makeTensorInfo(u,r.dtype,p)}if(r.shape.length===2&&v.arraysEqual(s,[1,0])){let l=new Tie(r.shape,s);return i.runWebGPUProgram(l,[r],r.dtype)}let d=new Rie(r.shape,s);return i.runWebGPUProgram(d,[r],r.dtype)}var Eie={kernelName:rr,backendName:"webgpu",kernelFunc:Hn},_ie=class{constructor(e,t,a){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=C.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,e.inSize>=32768&&a>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0",a=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${a}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${oe("index")} {
         let outputIndex = index / ${a};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${a}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${a}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${a}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}},$ie={mean:"float32",all:"bool",any:"bool"};function Oo(e,t,a,n,r){let s=e.shape.length,i=[],o=v.parseAxisParam(t,e.shape),u=o,d=C.getAxesPermutation(u,s),l=e;d!=null&&(l=Hn({inputs:{x:e},attrs:{perm:d},backend:r}),u=C.getInnerMostAxes(u.length,s),i.push(l)),C.assertAxesAreInnerMostDims(n,u,s);let[p,c]=C.computeOutAndReduceShapes(l.shape,u),h=p;a&&(h=C.expandShapeToKeepDim(p,o));let f;if((n==="max"||n==="prod")&&r.shouldExecuteOnCPU([l])){let m=r.tensorMap.get(l.dataId).values;switch(n){case"max":let g=Qse(m,v.sizeFromShape(c),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:y,outShape:x,outDtype:A}=sie(l.shape,l.dtype,m,u);f=r.makeTensorInfo(x,A,y);break;default:throw new Error(`${n} CPU implementation is not yet supported.`)}}else{let m=v.sizeFromShape(c),g=v.sizeFromShape(l.shape)/m,y={windowSize:m,inSize:m,batchSize:g,outSize:1},x=$ie[n]||Gd(e.dtype),A=[{type:"int32",data:[m]}],b=new _ie(y,n,r.device.limits.maxComputeWorkgroupSizeX),w=r.runWebGPUProgram(b,[l],x,A);i.push(w),f=be({inputs:{x:w},attrs:{shape:h},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}function Mie(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{keepDims:s,axis:i}=n;return Oo(r,i,s,"all",a)}var Fie={kernelName:"All",backendName:"webgpu",kernelFunc:Mie};function Pie(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{keepDims:s,axis:i}=n;return Oo(r,i,s,"any",a)}var Oie={kernelName:"Any",backendName:"webgpu",kernelFunc:Pie},c7=class{constructor(e,t,a){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let n=[t];this.op=a==="min"?"<":">";let[r,s]=C.computeOutAndReduceShapes(e,n);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=fe(this.outputShape),v.sizeFromShape(s)<32?(this.type="plain",this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=ue(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${ir(this.inputShape.length-1)}`,a=()=>{let n="";if(this.outputShape.length===1)this.inputShape.length!==1&&(n+="outputCoords,");else for(let r=0;r<this.outputShape.length;r++)n+=`outputCoords.${ir(r)},`;return n};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${oe("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${a()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${oe("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${a()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${a()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}};function Die(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,d=[];o!=null&&(u=Hn({inputs:{x:r},backend:a,attrs:{perm:o}}),d.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=new c7(u.shape,i[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],c=a.runWebGPUProgram(l,[u],"int32",p);return d.forEach(h=>a.disposeData(h.dataId)),c}var zie={kernelName:Il,backendName:"webgpu",kernelFunc:Die};function Lie(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s}=n,i=v.parseAxisParam(s,r.shape),o=C.getAxesPermutation(i,r.shape.length),u=r,d=[];o!=null&&(u=Hn({inputs:{x:r},backend:a,attrs:{perm:o}}),d.push(u),i=C.getInnerMostAxes(i.length,u.shape.length)),C.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=new c7(u.shape,i[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],c=a.runWebGPUProgram(l,[u],"int32",p);return d.forEach(h=>a.disposeData(h.dataId)),c}var Wie={kernelName:Sl,backendName:"webgpu",kernelFunc:Lie},Bie=Qe({opType:ie.ASIN}),Vie={kernelName:ei,backendName:"webgpu",kernelFunc:Bie},Uie=Qe({opType:ie.ASINH}),Gie={kernelName:ti,backendName:"webgpu",kernelFunc:Uie},Hie=Qe({opType:ie.ATAN}),jie={kernelName:ai,backendName:"webgpu",kernelFunc:Hie},qie=qt({opType:_e.ATAN2}),Xie={kernelName:ri,backendName:"webgpu",kernelFunc:qie},Kie=Qe({opType:ie.ATANH}),Yie={kernelName:ni,backendName:"webgpu",kernelFunc:Kie},Zie=class{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}},md=class{constructor(e,t,a=!1,n=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=a,this.flattenPositions=n,this.includeBatchIndex=r,this.shaderKey=`pool2D_${t}_${a}_${n}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}},N2=class{constructor(e,t,a=!1,n=!1,r=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&a)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=a,this.flattenPositions=n,this.includeBatchIndex=r,this.shaderKey=`pool3D_${t}_${a}_${n}_${r}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}};function h7(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=n;return Oo(r,s,i,"max",a)}var Jie={kernelName:"Max",backendName:"webgpu",kernelFunc:h7};function f7(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{keepDims:s,axis:i}=n;return Oo(r,i,s,"mean",a)}var Qie={kernelName:Hi,backendName:"webgpu",kernelFunc:f7};function m7(e,t,a,n){if(t.filterWidth===1&&t.filterHeight===1&&v.arraysEqual(t.inShape,t.outShape))return Ha({inputs:{x:e},backend:n});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&t.batchSize===1&&t.padInfo.type==="VALID"){let i=e.shape.length,o=be({inputs:{x:e},backend:n,attrs:{shape:[e.shape[i-3]*e.shape[i-2],e.shape[i-1]]}}),u;a==="avg"?u=f7({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}}):(v.assert(a==="max",()=>`Invalid pool type ${a}`),u=h7({inputs:{x:o},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let d=be({inputs:{x:u},backend:n,attrs:{shape:t.outShape}});return n.disposeData(o.dataId),n.disposeData(u.dataId),d}let r,s=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return t.filterHeight===1&&t.filterWidth===1?r=new Zie(t):(a==="avg"?r=new md(t,"avg"):(v.assert(a==="max",()=>`Invalid pool type ${a}`),r=new md(t,"max")),s.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),n.runWebGPUProgram(r,[e],e.dtype,s)}function eoe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,d=C.computePool2DInfo(r.shape,s,i,1,o,u);return m7(r,d,"avg",a)}var toe={kernelName:si,backendName:"webgpu",kernelFunc:eoe};function aoe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:d}=n,l=[1,1,1],p=C.computePool3DInfo(r.shape,s,i,l,o,d,u),c=new N2(p,"avg"),h=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return a.runWebGPUProgram(c,[r],r.dtype,h)}var noe={kernelName:Cl,backendName:"webgpu",kernelFunc:aoe},roe=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},soe=class{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function ioe(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:d,dimRoundingMode:l}=n,p=C.computePool3DInfo(i.shape,o,u,1,d,l),c=new soe(p),h=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[h]}];return a.runWebGPUProgram(c,[r],i.dtype,f)}var ooe={kernelName:wd,backendName:"webgpu",kernelFunc:ioe};function loe(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s;k2([r,s],"avgPoolGrad");let{filterSize:o,strides:u,pad:d}=n,l=C.computePool2DInfo(i.shape,o,u,1,d),p=new roe(l),c=1/(l.filterHeight*l.filterWidth),h=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.effectiveFilterHeight-1-l.padInfo.top,l.effectiveFilterWidth-1-l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"float32",data:[c]}];return a.runWebGPUProgram(p,[r],i.dtype,h)}var uoe={kernelName:vd,backendName:"webgpu",kernelFunc:loe};function doe(e){let{inputs:t,backend:a,attrs:n}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=n;return Ah({a:r,b:s,transposeA:i,transposeB:o,backend:a})}var poe={kernelName:ii,backendName:"webgpu",kernelFunc:doe},coe=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Tt(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Tt(this.rank),t=hoe(this.rank),a;return this.start.length===1?a=this.outputShape.map((n,r)=>"sourceLoc = uniforms.start + coords;"):a=this.outputShape.map((n,r)=>`sourceLoc.${f0[r]} = uniforms.start.${ir(r)} + coords.${f0[r]};`),`
      ${oe("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${a.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},f0=["x","y","z","w","u","v"];function hoe(e){if(e===1)return"sourceLoc";if(e<=6)return f0.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function yu(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,size:i}=n,[o,u]=wt.parseSliceParams(r,s,i);if(wt.assertParamsValid(r,o,u),a.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=a.tensorMap.get(r.dataId),c=die(p.values,o,u,r.shape,r.dtype);return a.makeTensorInfo(u,r.dtype,c)}if(v.sizeFromShape(u)===0)return a.makeTensorInfo(u,r.dtype,[]);let d=new coe(o,u),l=[{type:"int32",data:o}];return a.runWebGPUProgram(d,[r],r.dtype,l)}var foe={kernelName:Kl,backendName:"webgpu",kernelFunc:yu},moe=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,crops:i}=n;v.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((x,A)=>x*A),u=C.getReshaped(r.shape,s,o),d=C.getPermuted(u.length,s.length),l=C.getReshapedPermuted(r.shape,s,o),p=C.getSliceBeginCoords(i,s.length),c=C.getSliceSize(l,i,s.length),h=[],f=be({inputs:{x:r},backend:a,attrs:{shape:u}}),m=Hn({inputs:{x:f},backend:a,attrs:{perm:d}}),g=be({inputs:{x:m},backend:a,attrs:{shape:l}}),y=yu({inputs:{x:g},backend:a,attrs:{begin:p,size:c}});return h.push(f),h.push(m),h.push(g),h.forEach(x=>a.disposeData(x.dataId)),y},goe={kernelName:Nl,backendName:"webgpu",kernelFunc:moe},yoe=`
  fn bincount_write(index: i32, value: f32) {
    ${ls("&result[index]","value","float32")}
  }
`,xoe=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`,g7=class{constructor(e,t,a=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=a,a&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?xoe:yoe}
  ${oe("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}};function Aoe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i}=n,o=v.sizeFromShape(r.shape),u=v.sizeFromShape(s.shape)>0,d=[i],l=s.dtype,p=Ea({backend:a,attrs:{shape:d,value:0,dtype:l}}),c=new g7([o],u),h=[{type:"int32",data:[i]}],f=u?[r,s]:[r];return a.runWebGPUProgram(c,f,l,h,p)}var boe={kernelName:oi,backendName:"webgpu",kernelFunc:Aoe},voe=class{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${oe("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}};function woe(e){let{inputs:t,backend:a}=e,{s0:n,s1:r}=t;if(a.shouldExecuteOnCPU([n,r])){let l=a.tensorMap.get(n.dataId),p=a.tensorMap.get(r.dataId),c=l.values,h=p.values,f=C.assertAndGetBroadcastShape(Array.from(c),Array.from(h));return a.makeTensorInfo([f.length],"int32",Int32Array.from(f))}let s=v.sizeFromShape(n.shape),i=v.sizeFromShape(r.shape),o=Math.max(s,i),u=new voe(o),d=[{type:"int32",data:[s]},{type:"int32",data:[i]}];return a.runWebGPUProgram(u,[n,r],"int32",d)}var koe={kernelName:Rl,backendName:"webgpu",kernelFunc:woe},y7=qt({opType:_e.NOT_EQUAL,dtype:"bool",cpuKernelImpl:rie}),Ioe={kernelName:Yi,backendName:"webgpu",kernelFunc:y7};function ip(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.tensorMap.get(n.dataId);return Ha({inputs:{x:r.complexTensorInfos.real},backend:a})}var Soe={kernelName:Fd,backendName:"webgpu",kernelFunc:ip};function Coe(e,t){let a=new gu(e.shape,ie.TO_INT),n=t.runWebGPUProgram(a,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function m0(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dtype:s}=n;if(s==="complex64"){if(r.dtype==="complex64")return Ha({inputs:{x:r},backend:a});let i=Tn(r.shape),o=m0({inputs:{x:r},backend:a,attrs:{dtype:"float32"}}),u=Po({inputs:{real:o,imag:i},backend:a});return i.dispose(),a.disposeData(o.dataId),u}if(r.dtype==="complex64"){let i=ip({inputs:{input:r},backend:a}),o=m0({inputs:{x:i},backend:a,attrs:{dtype:s}});return a.disposeData(i.dataId),o}if(!v.hasEncodingLoss(r.dtype,s)){let i=Ha({inputs:{x:r},backend:a});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(a.shouldExecuteOnCPU([r])){let i=a.tensorMap.get(r.dataId).values,[o,u,d]=zse(i,r.shape,r.dtype,s);return a.makeTensorInfo(o,u,d)}if(s==="int32")return Coe(r,a);if(s==="bool"){let i=a.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=y7({inputs:{a:r,b:i},backend:a});return a.disposeData(i.dataId),o}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var Noe={kernelName:li,backendName:"webgpu",kernelFunc:m0},Toe=Qe({opType:ie.CEIL,cpuKernelImpl:Lse}),Roe={kernelName:ui,backendName:"webgpu",kernelFunc:Toe},Eoe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${oe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},_oe=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${oe("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function $oe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=n,o,u=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return v.sizeFromShape(r.shape)%4===0?o=new Eoe(r.shape):o=new _oe(r.shape),a.runWebGPUProgram(o,[r],r.dtype,u)}var Moe={kernelName:Qr,backendName:"webgpu",kernelFunc:$oe},Foe=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}};function hy(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function Poe(e){let{inputs:t,backend:a}=e,{x:n}=t,r=a.tensorMap.get(n.dataId),s=new Foe(n.shape),i=[hy(n,r.complexTensorInfos.real),hy(n,r.complexTensorInfos.imag)];return a.runWebGPUProgram(s,i,i[0].dtype)}var Ooe={kernelName:Id,backendName:"webgpu",kernelFunc:Poe},Doe=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=C.computeOutShape(e,1),this.variableNames=e.map((t,a)=>`T${a}`),this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let n=1;n<this.offsetLength;n++)e.push(`else if (yC < uniforms.offset${[n]}){ setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${n-1})); }`);let t=this.offsetLength,a=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${a})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${oe("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function bh(e){let{inputs:t,backend:a}=e,{input:n}=t,r=a.tensorMap.get(n.dataId);return Ha({inputs:{x:r.complexTensorInfos.imag},backend:a})}var zoe={kernelName:_d,backendName:"webgpu",kernelFunc:bh};function Du(e,t,a){let n=e[0].dtype;if(n==="complex64"){let f=e.map(A=>ip({inputs:{input:A},backend:a})),m=e.map(A=>bh({inputs:{input:A},backend:a})),g=Du(f,t,a),y=Du(m,t,a),x=Po({inputs:{real:g,imag:y},backend:a});return f.forEach(A=>a.disposeData(A.dataId)),m.forEach(A=>a.disposeData(A.dataId)),a.disposeData(g.dataId),a.disposeData(y.dataId),x}let r=a.shouldExecuteOnCPU(e);if(n==="string"&&(r=!0),r){let f=e.map(w=>{let S=[-1,v.sizeFromShape(w.shape.slice(t))];return be({inputs:{x:w},backend:a,attrs:{shape:S}})}),m=f.map(w=>({vals:a.readSync(w.dataId),shape:w.shape})),g=C.computeOutShape(f.map(w=>w.shape),1),y=f[0].shape[0]===1,x=Wse(m,g,n,y),A=C.computeOutShape(e.map(w=>w.shape),t),b=a.makeTensorInfo(A,n,x);return f.forEach(w=>a.disposeData(w.dataId)),b}let s=a.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>s){let f=[];for(let g=0;g<e.length;g+=s){let y=e.slice(g,g+s);f.push(Du(y,t,a))}let m=Du(f,t,a);for(let g of f)a.disposeData(g.dataId);return m}let{tensors2D:i,outShape:o}=Loe(e,t,a),u=i.map(f=>f.shape),d=new Doe(u),l=[],p=new Array(u.length-1);if(p.length>0){p[0]=u[0][1],l.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+u[f][1],l.push({type:"int32",data:[p[f]]})}let c=a.runWebGPUProgram(d,i,i[0].dtype,l);i.forEach(f=>a.disposeData(f.dataId));let h=be({inputs:{x:c},backend:a,attrs:{shape:o}});return a.disposeData(c.dataId),h}function Loe(e,t,a){let n=C.computeOutShape(e.map(r=>r.shape),t);return{tensors2D:e.map(r=>be({inputs:{x:r},backend:a,attrs:{shape:[v.sizeFromShape(r.shape.slice(0,t)),v.sizeFromShape(r.shape.slice(t))]}})),outShape:n}}function x7(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n,s=v.parseAxisParam(r,t[0].shape)[0],i=t.map(d=>d.shape);C.assertParamsConsistent(i,s);let o=C.computeOutShape(t.map(d=>d.shape),s);if(v.sizeFromShape(o)===0)return a.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(d=>v.sizeFromShape(d.shape)>0);return u.length===1?Ha({inputs:{x:u[0]},backend:a}):Du(u,s,a)}var Woe={kernelName:El,backendName:"webgpu",kernelFunc:x7};function Boe(e,t,a,n,r=!1,s=null,i=!1,o=4,u=4,d=4){let l=T=>{switch(T){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},p=T=>{switch(T){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},c=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,h=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=e?"uniforms.xShape[1]":"uniforms.xShape[2]",m=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",y=e?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${y} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${y} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${y} % inChannels;
      var resData = ${Ve(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${c}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${l(o)}
      }
      return resData;`,A=e?t&&n?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${Ve(o)}(0.0);`:n&&a?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${Ve(o)}(0.0);`,b=`${p(u)}`,w=Ve(d),S=Ve(e?o:u),N=Ve(e?u:o);return`
      ${gr(s,i,d===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${S} {
        ${e?A:b}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${N} {
        ${e?b:A}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${w}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${h}
        ${Fo(r,s)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var Voe=class{constructor(e,t,a,n,r=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=b2(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=v2(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),i&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=o,this.addBias=r,this.activation=s,this.hasPreluActivationWeights=i,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=a%this.tileBOuter===0,this.fitInner=n%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?yh(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):xh(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Boe(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}},Uoe=class{constructor(e,t=!1,a=null,n=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=a,this.hasPreluActivationWeights=n,t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${gr(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Fo(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${oe("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}},Goe=class{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,a=this.isChannelsLast?"coords[1]":"coords[2]",n=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${oe("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${a};
        let col = ${n};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${r};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}};function Ec(e,t){let a=e.length;return a>=3?t?[...e.slice(0,-3),e[a-3]*e[a-2],e[a-1]]:[...e.slice(0,-3),e[a-3],e[a-2]*e[a-1]]:!t&&a===1&&e[0]>1?[e[0],1]:null}function Hoe({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let u=a.dataFormat==="channelsLast",d=!u,l=!1,p=u&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID",c=[],h,f;if(p){let y=a.inHeight*a.inWidth*a.inChannels;h=be({inputs:{x:e},backend:n,attrs:{shape:[1,a.batchSize,y]}}),f=be({inputs:{x:t},backend:n,attrs:{shape:[1,y,a.outChannels]}})}else h=be({inputs:{x:e},backend:n,attrs:{shape:u?[a.batchSize,a.inHeight*a.inWidth,a.inChannels]:[a.batchSize,a.inChannels,a.inHeight*a.inWidth]}}),f=be({inputs:{x:t},backend:n,attrs:{shape:[1,a.inChannels,a.outChannels]}});if(c.push(h),c.push(f),s!=null){let y=Ec(s.shape,u);y!=null&&(s=be({inputs:{x:s},backend:n,attrs:{shape:y}}),c.push(s))}if(r!=null){let y=Ec(r.shape,u);y!=null&&(r=be({inputs:{x:r},backend:n,attrs:{shape:y}}),c.push(r))}let m=Ah({a:u?h:f,b:u?f:h,transposeA:d,transposeB:l,backend:n,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),g=be({inputs:{x:m},backend:n,attrs:{shape:a.outShape}});c.push(m);for(let y of c)n.disposeData(y.dataId);return g}function joe({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:d,inChannels:l,strideWidth:p,strideHeight:c,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=a,A=x==="channelsLast",b=u*d*l,w=m*f,S=A?[a.batchSize,w,b]:[a.batchSize,b,w],N=new Goe(S,A),T=[{type:"int32",data:[h.top,h.left]},{type:"int32",data:[c,p]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[l*u]},{type:"int32",data:[l]}],_=n.runWebGPUProgram(N,[e],e.dtype,T),P=[];P.push(_);let E=be({inputs:{x:t},backend:n,attrs:{shape:[1,b,-1]}});if(P.push(E),s!=null){let $=Ec(s.shape,A);$!=null&&(s=be({inputs:{x:s},backend:n,attrs:{shape:$}}),P.push(s))}if(r!=null){let $=Ec(r.shape,A);$!=null&&(r=be({inputs:{x:r},backend:n,attrs:{shape:$}}),P.push(r))}let I=Ah({a:A?_:E,b:A?E:_,transposeA:!A,transposeB:!1,backend:n,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),F=be({inputs:{x:I},backend:n,attrs:{shape:a.outShape}});P.push(I);for(let $ of P)n.disposeData($.dataId);return F}function A7({x:e,filter:t,convInfo:a,backend:n,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let u=r!=null,d=s!=null,l=a.dataFormat==="channelsLast",p=l&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&a.padInfo.type==="VALID",c=U().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(p||a.filterHeight===1&&a.filterWidth===1&&a.dilationHeight===1&&a.dilationWidth===1&&a.strideHeight===1&&a.strideWidth===1&&(a.padInfo.type==="SAME"||a.padInfo.type==="VALID")))return Hoe({x:e,filter:t,convInfo:a,backend:n,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});let h=U().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=h>-1?h:n.thresholdToIncreaseWorkgroups,m=a.batchSize*Math.ceil(a.outHeight*a.outWidth/32)*Math.ceil(a.outChannels/32);if(U().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return joe({x:e,filter:t,convInfo:a,backend:n,bias:r,preluActivationWeights:s,leakyreluAlpha:i,activation:o});let g,y=[a.padInfo.top,a.padInfo.left],x=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(c)g=new Uoe(a,u,o,d);else{let S=l?a.outHeight*a.outWidth:a.outChannels,N=l?a.outChannels:a.outHeight*a.outWidth,T=a.filterHeight*a.filterWidth*a.inChannels;x.push({type:"int32",data:[S]},{type:"int32",data:[N]},{type:"int32",data:[T]});let _=n.adapterInfo.isIntel();g=new Voe(a,S,N,T,u,o,d,_)}let A=[],b=[e,t];u&&(!l&&r.shape.length===1&&(r=be({inputs:{x:r},backend:n,attrs:{shape:[r.shape[0],1,1]}}),A.push(r)),b.push(r)),d&&(!l&&s.shape.length===1&&(s=be({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}}),A.push(s)),b.push(s)),o==="leakyrelu"&&(x.push({type:"float32",data:[i]}),g.uniforms+=" alpha : f32,");let w=n.runWebGPUProgram(g,b,e.dtype,x);for(let S of A)n.disposeData(S.dataId);return w}function qoe(e){let{inputs:t,attrs:a,backend:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:d,dimRoundingMode:l}=a,p=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(r.shape,s.shape,i,d,o,l,!1,p);return A7({x:r,filter:s,convInfo:c,backend:n})}var Xoe={kernelName:di,backendName:"webgpu",kernelFunc:qoe},Koe=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,a=this.isChannelsLast?3:1,n=`
    ${oe()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${n}
    `:`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${a}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Yoe=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Zoe=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}},Joe=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${oe("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function Qoe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:d,filterShape:l}=n,p=C.convertConv2DDataFormat(u),c=C.computeConv2DInfo(r.shape,l,i,1,o,d,!1,p),h=new Yoe(c),f=[{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.inHeight]},{type:"int32",data:[c.inWidth]}];return a.runWebGPUProgram(h,[r,s],r.dtype,f)}var ele={kernelName:Sd,backendName:"webgpu",kernelFunc:Qoe};function tle(e=4){let t=n=>{switch(n){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${n} is not supported.`)}},a=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${Ve(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${Ve(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`}
      }
      return ${Ve(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${Ve(e)} {
    ${a}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${Ve(e)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(e)}
    }
    return ${Ve(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${Ve(e)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}var ale=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=b2(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=v2(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?yh(this.elementsPerThread,this.workgroupSize):xh(this.elementsPerThread,this.workgroupSize);return`
    ${tle(this.isVec4?4:1)}
    ${e}
    `}};function nle(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:d,dimRoundingMode:l}=n,p=C.convertConv2DDataFormat(d),c=C.computeConv2DInfo(i,s.shape,o,1,u,l,!1,p),h=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}],f;if(U().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||c.dataFormat!=="channelsLast")f=new Koe(c);else{f=new ale(c);let m=c.inHeight*c.inWidth,g=c.inChannels,y=c.filterHeight*c.filterWidth*c.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[y]})}return a.runWebGPUProgram(f,[r,s],"float32",h)}var rle={kernelName:pi,backendName:"webgpu",kernelFunc:nle},sle=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}};function ile(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n,d=C.computeConv3DInfo(r.shape,s.shape,i,u,o),l=[d.padInfo.front,d.padInfo.top,d.padInfo.left],p=[{type:"int32",data:[d.filterDepth,d.filterHeight,d.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationDepth,d.dilationHeight,d.dilationWidth]}],c=new sle(d),h=ea(r.dtype,s.dtype);return a.runWebGPUProgram(c,[r,s],h,p)}var ole={kernelName:ci,backendName:"webgpu",kernelFunc:ile};function lle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:u}=n,d=C.computeConv3DInfo(r.shape,u,i,1,o),l=new Zoe(d),p=[{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inDepth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return a.runWebGPUProgram(l,[r,s],s.dtype,p)}var ule={kernelName:_l,backendName:"webgpu",kernelFunc:lle};function dle(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{strides:i,pad:o,inputShape:u}=n,d=C.computeConv3DInfo(u,s.shape,i,1,o),l=new Joe(d),p=[{type:"int32",data:[d.filterDepth,d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterDepth-1-d.padInfo.front,d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.outChannels]}];return a.runWebGPUProgram(l,[r,s],r.dtype,p)}var ple={kernelName:hi,backendName:"webgpu",kernelFunc:dle},cle=Qe({opType:ie.COS}),hle={kernelName:"Cos",backendName:"webgpu",kernelFunc:cle},fle=Qe({opType:ie.COSH}),mle={kernelName:fi,backendName:"webgpu",kernelFunc:fle},gle=class{constructor(e,t,a,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,a[0],a[1],e],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=n==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[a,n,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${a});
        let width_ratio = f32(${s});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${i};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},yle=e=>{let{inputs:t,backend:a,attrs:n}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:d}=n,l=new gle(r.shape[3],s.shape,o,u),p=[{type:"float32",data:[d]}];return a.runWebGPUProgram(l,[r,s,i],"float32",p)},xle={kernelName:yi,backendName:"webgpu",kernelFunc:yle},gd;(function(e){e.Prod="*",e.Sum="+"})(gd||(gd={}));var fy=class{constructor(e,t,a,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=a,this.reverse=n,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===gd.Prod?"1.0":"0.0",a=this.exclusive?t:`getX(${my(e,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],r="",s="";return this.exclusive?(r=this.reverse?`end != ${n-1}`:"end != 0",s=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${n}`:"end >= pow2",s=this.reverse?"end + pow2":"end - pow2"),`
      ${oe("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${gy(e,"coords",this.op)};
         var val = ${a};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${s};
           ${gy(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${my(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function my(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function gy(e,t,a){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${a} for rank ${e} is not yet supported`)}function b7(e,t,a,n,r,s){let i=t.shape.length,o=C.getAxesPermutation([n],i),u=t;o!=null&&(u=Hn({inputs:{x:t},backend:a,attrs:{perm:o}}));let d=C.getInnerMostAxes(1,i)[0];if(d!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let l=u.shape[d],p=Ha({inputs:{x:u},backend:a});for(let c=0;c<=Math.ceil(Math.log2(l))-1;c++){let h=new fy(e,u.shape,!1,s),f=p,m=[{type:"float32",data:[c]}];p=a.runWebGPUProgram(h,[p],p.dtype,m),a.disposeData(f.dataId)}if(r){let c=new fy(e,u.shape,r,s),h=p,f=[{type:"float32",data:[0]}];p=a.runWebGPUProgram(c,[p],p.dtype,f),a.disposeData(h.dataId)}if(o!=null){let c=C.getUndoAxesPermutation(o),h=Hn({inputs:{x:p},backend:a,attrs:{perm:c}});return a.disposeData(p.dataId),a.disposeData(u.dataId),h}return p}function Ale(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return b7(gd.Prod,r,a,s,i,o)}var ble={kernelName:mi,backendName:"webgpu",kernelFunc:Ale};function vle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=n;return b7(gd.Sum,r,a,s,i,o)}var wle={kernelName:gi,backendName:"webgpu",kernelFunc:vle};function kle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=n,u=r.shape.length===1,d=v.sizeFromShape(s.shape)>0,l=s.dtype,p=u?[r.shape[0]]:[r.shape[0],r.shape[1]],c=u?[i]:[r.shape[0],i],h=Ea({backend:a,attrs:{shape:c,value:0,dtype:l}}),f=new g7(p,d,o),m=[{type:"int32",data:[i]}],g=d?[r,s]:[r];return a.runWebGPUProgram(f,g,l,m,h)}var Ile={kernelName:$l,backendName:"webgpu",kernelFunc:kle},Sle=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Cle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockSize:s,dataFormat:i}=n,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],d=i==="NHWC"?r.shape[2]:r.shape[3],l=i==="NHWC"?r.shape[3]:r.shape[1],p=u*s,c=d*s,h=l/(s*s),f=i==="NHWC"?[o,p,c,h]:[o,h,p,c],m=[{type:"int32",data:[s]}],g=new Sle(f,i);return a.runWebGPUProgram(g,[r],r.dtype,m)}var Nle={kernelName:xi,backendName:"webgpu",kernelFunc:Cle},Tle=class{constructor(e,t,a,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=r,this.hasPreluActivation=s,this.filterHeight=t,this.filterWidth=a,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],a=this.workgroupSize[1]+this.filterHeight-1,n=this.workgroupSize[0]+this.filterWidth-1;return`
      ${gr(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${a}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${oe()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Fo(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},v7=class{constructor(e,t=!1,a=null,n=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=fe(r),this.dispatch=ue(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),v.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${a}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,a=this.convInfo.strideWidth;return`
      ${gr(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${oe("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${a}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${a} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Fo(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},w7=class{constructor(e,t=!1,a=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=a,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${gr(this.activation,this.hasPreluActivation,!1,4)}

      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Fo(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Rle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:d,dimRoundingMode:l}=n,p=C.convertConv2DDataFormat(u),c=d;c==null&&(c=[1,1]);let h=C.computeConv2DInfo(r.shape,s.shape,i,c,o,l,!0,p),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],m=h.dataFormat==="channelsLast",g;return!m&&h.inHeight>16&&h.inWidth>16&&h.strideHeight===1&&h.strideWidth===1&&h.dilationWidth===1&&h.dilationHeight===1&&h.inChannels===h.outChannels?g=new Tle(h.outShape,h.filterHeight,h.filterWidth):m&&h.outHeight>4&&h.outWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?(g=new v7(h),f.push({type:"int32",data:[g.virtualWidth]})):(g=new w7(h),f.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),a.runWebGPUProgram(g,[r,s],r.dtype,f)}var Ele={kernelName:Ai,backendName:"webgpu",kernelFunc:Rle},_le=class{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},$le=class{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function Mle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:d,filterShape:l}=n,p=C.computeConv2DInfo(r.shape,l,i,o,u,d,!0),c=new _le(p),h=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return a.runWebGPUProgram(c,[r,s],"float32",h)}var Fle={kernelName:Cd,backendName:"webgpu",kernelFunc:Mle};function Ple(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:d,inputShape:l}=n,p=C.computeConv2DInfo(l,s.shape,i,o,u,d,!0),c=new $le(p),h=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return a.runWebGPUProgram(c,[r,s],r.dtype,h)}var Ole={kernelName:Nd,backendName:"webgpu",kernelFunc:Ple},Dle=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}};function zle(e){let{inputs:t,backend:a}=e,{x:n}=t,r=[...n.shape,...n.shape],s=v.sizeFromShape(n.shape),i=be({inputs:{x:n},backend:a,attrs:{shape:[s]}}),o=new Dle(s),u=a.runWebGPUProgram(o,[i],i.dtype),d=be({inputs:{x:u},backend:a,attrs:{shape:r}});return a.disposeData(i.dataId),a.disposeData(u.dataId),d}var Lle={kernelName:Ml,backendName:"webgpu",kernelFunc:zle},Wle=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${oe("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}};function Ble(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:u}=n,d=C.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u),l=[d.padInfo.top,d.padInfo.left],p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[...l]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]}],c=new Wle(d);return a.runWebGPUProgram(c,[r,s],r.dtype,p)}var Vle={kernelName:bi,backendName:"webgpu",kernelFunc:Ble},Ule=class{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=fe(e.outShape),this.dispatch=ue(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${oe("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${ls("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}},Gle=class{constructor(e,t,a){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=fe(e.outShape),this.dispatch=ue(this.dispatchLayout,e.outShape,this.workgroupSize),a!=="float32"&&a!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${a} type.`);this.type=a,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${oe("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${ls("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}};function Hle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:d}=n,l=C.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",d),p=s.dtype,c=new Gle(l,s.shape,p),h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[v.sizeFromShape(l.outShape)]}],f=Ea({backend:a,attrs:{shape:s.shape,value:0,dtype:p}});return a.runWebGPUProgram(c,[r,s,i],p,h,f)}var jle={kernelName:ul,backendName:"webgpu",kernelFunc:Hle};function qle(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,dy:i}=t,{strides:o,pad:u,dilations:d}=n,l=C.computeDilation2DInfo(r.shape,s.shape,o,u,"NHWC",d),p=r.dtype,c=new Ule(l,p),h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[v.sizeFromShape(l.outShape)]}],f=Ea({backend:a,attrs:{shape:l.inShape,value:0,dtype:p}});return a.runWebGPUProgram(c,[r,s,i],p,h,f)}var Xle={kernelName:ll,backendName:"webgpu",kernelFunc:qle},Kle=class{constructor(e,t,a){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Al.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=a,this.shaderKey=`draw_${t}_${a}`}getUserCode(){let e,t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${oe("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}};function Yle(e){let{inputs:t,backend:a,attrs:n}=e,{image:r}=t,{canvas:s,options:i}=n,[o,u]=r.shape.slice(0,2),{imageOptions:d}=i||{},l=(d==null?void 0:d.alpha)||1,p=a.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",c=[o,u],h=new Kle(c,r.dtype,p);s.width=u,s.height=o;let f="webgpu",m=s.getContext(f),g;m||(g=new OffscreenCanvas(u,o),m=g.getContext(f));let y=r.shape.length===3?r.shape[2]:1;m.configure({device:a.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let x="int32",A=a.makeTensorInfo(c,x),b=a.tensorMap.get(A.dataId);b.resource=m.getCurrentTexture(),b.external=!0;let w=[{type:"uint32",data:[y]},{type:"float32",data:[l]}];if(a.runWebGPUProgram(h,[r],x,w,A),g){let S=s.getContext("2d");if(!S)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");S.drawImage(g,0,0)}return a.disposeData(A.dataId),r}var Zle={kernelName:Td,backendName:"webgpu",kernelFunc:Yle},k7=qt({opType:_e.MUL,cpuKernelImpl:aie,supportsComplex:!0}),Jle={kernelName:Ki,backendName:"webgpu",kernelFunc:k7};function I7(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return Oo(r,s,i,"sum",a)}var Qle={kernelName:"Sum",backendName:"webgpu",kernelFunc:I7};function eue(e){let{inputs:t,backend:a,attrs:n}=e,{equation:r}=n,s=t,{allDims:i,summedDims:o,idDims:u}=C.decodeEinsumEquation(r,s.length);C.checkEinsumDimSizes(i.length,u,s);let{path:d,steps:l}=C.getEinsumComputePath(o,u),p=l.length,c=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of l[m]){let{permutationIndices:y,expandDims:x}=C.getEinsumPermutation(h,u[g]),A;C.isIdentityPermutation(y)?A=s[g]:(A=Hn({inputs:{x:s[g]},backend:a,attrs:{perm:y}}),f.push(A));let b=A.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);v.arraysEqual(A.shape,b)||(A=be({inputs:{x:A},backend:a,attrs:{shape:b}}),f.push(A)),c===null?c=A:(c=k7({inputs:{a:A,b:c},backend:a}),f.push(c))}m<p-1&&(d[m]>=0&&(c=I7({inputs:{x:c},backend:a,attrs:{axis:d[m]-(i.length-h),keepDims:!1}}),f.push(c)),h--)}for(let m of f)m!==c&&a.disposeData(m.dataId);return c}var tue={kernelName:Rd,backendName:"webgpu",kernelFunc:eue},aue=Qe({opType:ie.ELU}),nue={kernelName:"Elu",backendName:"webgpu",kernelFunc:aue},rue=e=>{let{inputs:t,backend:a}=e,{dy:n,y:r}=t,s=new Rc(_e.ELU_DER,n.shape,r.shape);return a.runWebGPUProgram(s,[n,r],n.dtype)},sue={kernelName:Fl,backendName:"webgpu",kernelFunc:rue},iue=qt({opType:_e.EQUAL,dtype:"bool",cpuKernelImpl:Bse}),oue={kernelName:wi,backendName:"webgpu",kernelFunc:iue},lue=Qe({opType:ie.ERF}),uue={kernelName:"Erf",backendName:"webgpu",kernelFunc:lue},due=Qe({opType:ie.EXP,cpuKernelImpl:Vse,dtype:"float32"}),pue={kernelName:"Exp",backendName:"webgpu",kernelFunc:due};function g0(e){let{inputs:t,attrs:a,backend:n}=e,{dim:r}=a,{input:s}=t,i=s.shape.length,o=s.shape.slice(),u=r;return r<0&&(v.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),be({inputs:{x:s},backend:n,attrs:{shape:o}})}var cue={kernelName:Pl,backendName:"webgpu",kernelFunc:g0},hue=Qe({opType:ie.EXPM1,cpuKernelImpl:Use}),fue={kernelName:ki,backendName:"webgpu",kernelFunc:hue},yy=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}};function S7(e,t,a){let n=a.tensorMap.get(e.dataId),r=v.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=r/s,o=[],u=be({inputs:{x:e},backend:a,attrs:{shape:[i,s]}});o.push(u);let d=u.shape,l=new yy("real",d),p=new yy("imag",d),c=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:d},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:d}],h=t?2*Math.PI:-2*Math.PI,f=t?d[1]:1,m=[{type:"float32",data:[h]},{type:"float32",data:[f]}],g=a.runWebGPUProgram(l,c,"float32",m);o.push(g);let y=a.runWebGPUProgram(p,c,"float32",m);o.push(y);let x=Po({inputs:{real:g,imag:y},backend:a});o.push(x);let A=be({inputs:{x},backend:a,attrs:{shape:e.shape}});return o.forEach(b=>a.disposeData(b.dataId)),A}function mue(e){let{inputs:t,backend:a}=e,{input:n}=t;return S7(n,!1,a)}var gue={kernelName:"FFT",backendName:"webgpu",kernelFunc:mue},yue=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},xue={kernelName:Ii,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:a}=e,n=t,r=new yue(a.shape);return n.runWebGPUProgram(r,[a],a.dtype)}},Aue=Qe({opType:ie.FLOOR,cpuKernelImpl:Gse}),bue={kernelName:Si,backendName:"webgpu",kernelFunc:Aue},vue=qt({opType:_e.FLOOR_DIV,cpuKernelImpl:Hse,dtype:"int32"}),wue={kernelName:Ci,backendName:"webgpu",kernelFunc:vue},kue=class{constructor(e,t,a=!1){this.pixelsOpType=Al.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=a,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${oe("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},Iue={kernelName:Yu,backendName:"webgpu",kernelFunc:Sue},Go,Wh=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Sue(e){let{inputs:t,backend:a,attrs:n}=e,{pixels:r}=t,{numChannels:s}=n;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,u=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,d=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[l,p]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[p,l,s],h=U().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||o;if(d||u||f){let x;if(h)x=a.device.importExternalTexture({source:r});else{if(f){let I=U().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Go==null||I!==Wh)&&(Wh=I,Go=document.createElement("canvas").getContext("2d",{willReadFrequently:Wh})),Go.canvas.width=l,Go.canvas.height=p,Go.drawImage(r,0,0,l,p),r=Go.canvas}let P=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,E=a.textureManager.acquireTexture(c[1],c[0],"rgba8unorm",P);a.queue.copyExternalImageToTexture({source:r},{texture:E},[c[1],c[0]]),x=E}let A=v.sizeFromShape(c),b=v.computeStrides(c),w=new kue(c,s,h),S=[{type:"uint32",data:[A]},{type:"uint32",data:[s]},{type:"uint32",data:[...b]}],N=a.makeTensorInfo([p,l],"int32"),T=a.tensorMap.get(N.dataId);T.resource=x;let _=a.runWebGPUProgram(w,[N],"int32",S);return a.disposeData(N.dataId),_}let m=r.data,g=m;if(s!=null&&s!==4){g=new Uint8Array(r.width*r.height*s);let x=m.length,A=0;for(let b=0;b<x;b++)b%4<s&&(g[A++]=m[b])}let y=a.makeTensorInfo(c,"int32",new Int32Array(g));return a.uploadToGPU(y.dataId),y}var Cue=class{constructor(e,t,a,n,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],C.assertAndGetBroadcastShape(e,t),C.assertAndGetBroadcastShape(e,a),this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),n!=null&&(C.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset")),r!=null&&(C.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${oe("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Nue={kernelName:Ni,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n,scale:r,offset:s,mean:i,variance:o}=e,{varianceEpsilon:u}=t,d=a,l=[n,i,o],p=null;s!=null&&(p=s.shape,l.push(s));let c=null;r!=null&&(c=r.shape,l.push(r));let h=new Cue(n.shape,i.shape,o.shape,p,c),f=[{type:"float32",data:[u]}];return d.runWebGPUProgram(h,l,n.dtype,f)}};function Tue(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dataFormat:l,dilations:p,dimRoundingMode:c,activation:h,leakyreluAlpha:f}=n,m=C.convertConv2DDataFormat(l),g=C.computeConv2DInfo(r.shape,s.shape,u,p,d,c,!1,m);return A7({x:r,filter:s,convInfo:g,backend:a,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:h})}var Rue={kernelName:Vr,backendName:"webgpu",kernelFunc:Tue};function Eue(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:d,dilations:l,dimRoundingMode:p,activation:c,leakyreluAlpha:h}=n,f=l;f==null&&(f=[1,1]),v.assert(C.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let m=C.computeConv2DInfo(r.shape,s.shape,u,f,d,p,!0),g=[r,s],y=i!=null,x=o!=null;y&&g.push(i),x&&g.push(o);let A=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],b;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(b=new v7(m,y,c,x),A.push({type:"int32",data:[b.virtualWidth]})):(b=new w7(m,y,c,x),A.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),c==="leakyrelu"&&(A.push({type:"float32",data:[h]}),b.uniforms+=" alpha : f32,"),a.runWebGPUProgram(b,g,"float32",A)}var _ue={kernelName:Ur,backendName:"webgpu",kernelFunc:Eue},$ue=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Tt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Mue(e){let{inputs:t,backend:a}=e,{params:n,indices:r}=t,s=r.shape,i=s[s.length-1],o=v.sizeFromShape(n.shape),[u,d,l,p]=C.prepareAndValidate(n,r),c=be({inputs:{x:r},backend:a,attrs:{shape:[d,i]}}),h=be({inputs:{x:n},backend:a,attrs:{shape:[v.sizeFromShape(n.shape)/l,l]}});if(a.shouldExecuteOnCPU([n,r])||n.dtype==="string"){let x=a.readSync(r.dataId),A=a.bufferSync(n),b=jse(x,A,n.dtype,d,i,l,p,n.shape,o);return a.makeTensorInfo(u,n.dtype,b.values)}let f=new $ue(i,[d,l]),m=[{type:"int32",data:[i]},{type:"int32",data:p}],g=a.runWebGPUProgram(f,[h,c],h.dtype,m),y=be({inputs:{x:g},backend:a,attrs:{shape:u}});return a.disposeData(c.dataId),a.disposeData(h.dataId),a.disposeData(g.dataId),y}var Fue={kernelName:Ti,backendName:"webgpu",kernelFunc:Mue},Pue=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let e=Oue(this.aShape);return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function Oue(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let n=0;n<e.length;n++)n===2?a.push("indexZ"):a.push(`${t[n]}`);return a.join()}function C7(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=n,u=v.parseAxisParam(i,r.shape)[0],d=C.segment_util.collectGatherOpShapeInfo(r,s,u,o),l=v.sizeFromShape(s.shape),p=[],c=be({inputs:{x:r},backend:a,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),h=be({inputs:{x:s},backend:a,attrs:{shape:[d.batchSize,l/d.batchSize]}});p.push(c),p.push(h);let f=[d.batchSize,d.outerSize,l/d.batchSize,d.sliceSize];if(a.shouldExecuteOnCPU([r,s])){let x=a.tensorMap.get(h.dataId).values,A=$e(h.shape,h.dtype,x),b=a.tensorMap.get(c.dataId).values,w=$e(c.shape,c.dtype,b),S=qse(w,A,f);return p.forEach(N=>a.disposeData(N.dataId)),a.makeTensorInfo(d.outputShape,S.dtype,S.values)}let m=new Pue(c.shape,f),g=a.runWebGPUProgram(m,[c,h],c.dtype);p.push(g);let y=be({inputs:{x:g},backend:a,attrs:{shape:d.outputShape}});return p.forEach(x=>a.disposeData(x.dataId)),y}var Due={kernelName:Dl,backendName:"webgpu",kernelFunc:C7},zue=qt({opType:_e.GREATER,cpuKernelImpl:Kse,dtype:"bool"}),Lue={kernelName:Ri,backendName:"webgpu",kernelFunc:zue},Wue=qt({opType:_e.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:Xse}),Bue={kernelName:Ei,backendName:"webgpu",kernelFunc:Wue};function Vue(e){let{inputs:t,backend:a}=e,{input:n}=t;return S7(n,!0,a)}var Uue={kernelName:Ed,backendName:"webgpu",kernelFunc:Vue},Gue=Qe({opType:ie.IS_FINITE,dtype:"bool"}),Hue={kernelName:$i,backendName:"webgpu",kernelFunc:Gue},jue=Qe({opType:ie.IS_INF,dtype:"bool"}),que={kernelName:Mi,backendName:"webgpu",kernelFunc:jue},Xue=Qe({opType:ie.IS_NAN,dtype:"bool"}),Kue={kernelName:Fi,backendName:"webgpu",kernelFunc:Xue};function Yue(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{alpha:s}=n,i=[{type:"float32",data:[s]}],o=new gu(r.shape,ie.LEAKYRELU,"alpha : f32,");return a.runWebGPUProgram(o,[r],"float32",i)}var Zue={kernelName:Pi,backendName:"webgpu",kernelFunc:Yue},Jue=qt({opType:_e.LESS,dtype:"bool",cpuKernelImpl:Zse}),Que={kernelName:Oi,backendName:"webgpu",kernelFunc:Jue},ede=qt({opType:_e.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Yse}),tde={kernelName:Di,backendName:"webgpu",kernelFunc:ede},ade=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}};function nde(e){let{backend:t,attrs:a}=e,{start:n,stop:r,num:s}=a,i=(r-n)/(s-1),o=new ade(s),u=[{type:"float32",data:[n]},{type:"float32",data:[i]}];return t.runWebGPUProgram(o,[],"float32",u)}var rde={kernelName:zi,backendName:"webgpu",kernelFunc:nde},sde=Qe({opType:ie.LOG,cpuKernelImpl:Jse}),ide={kernelName:"Log",backendName:"webgpu",kernelFunc:sde},ode=Qe({opType:ie.LOG1P}),lde={kernelName:Li,backendName:"webgpu",kernelFunc:ode},ude=qt({opType:_e.LOGICAL_AND,dtype:"bool"}),dde={kernelName:Wi,backendName:"webgpu",kernelFunc:ude},pde=Qe({opType:ie.LOGICAL_NOT}),cde={kernelName:Bi,backendName:"webgpu",kernelFunc:pde},hde=qt({opType:_e.LOGICAL_OR}),fde={kernelName:Vi,backendName:"webgpu",kernelFunc:hde},N7=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`,mde=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${N7}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}},gde=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,v.assert(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=ue(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${oe()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${N7}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}};function yde(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n,d;s>16?d=new mde(r.shape):d=new gde(r.shape,s);let l=[{type:"int32",data:[s]},{type:"float32",data:[i]},{type:"float32",data:[o]},{type:"float32",data:[u]}];return a.runWebGPUProgram(d,[r],r.dtype,l)}var xde={kernelName:"LRN",backendName:"webgpu",kernelFunc:yde},Ade=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}};function bde(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:d,beta:l}=n,p=new Ade(r.shape),c=[{type:"int32",data:[o]},{type:"float32",data:[u]},{type:"float32",data:[d]},{type:"float32",data:[l]}];return a.runWebGPUProgram(p,[r,s,i],r.dtype,c)}var vde={kernelName:zl,backendName:"webgpu",kernelFunc:bde},wde=qt({opType:_e.MAX,cpuKernelImpl:eie}),kde={kernelName:Ui,backendName:"webgpu",kernelFunc:wde};function Ide(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n,d=C.computePool2DInfo(r.shape,s,i,1,o,u);return m7(r,d,"max",a)}var Sde={kernelName:Gi,backendName:"webgpu",kernelFunc:Ide};function Cde(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:d}=n,l=[1,1,1],p=C.computePool3DInfo(r.shape,s,i,l,o,d,u),c=new N2(p,"max"),h=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];return a.runWebGPUProgram(c,[r],r.dtype,h)}var Nde={kernelName:Ll,backendName:"webgpu",kernelFunc:Cde},Tde=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}},Rde=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}};function Ede(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:u,pad:d,dimRoundingMode:l}=n,p=[1,1,1],c=C.computePool3DInfo(i.shape,o,u,p,d,l),h=new N2(c,"max",!0),f=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.front,c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.inDepth,c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]}],m=a.runWebGPUProgram(h,[i],"int32",f),g=new Rde(c);f=[{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterDepth-1-c.padInfo.front,c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.effectiveFilterDepth,c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outDepth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]}];let y=a.runWebGPUProgram(g,[r,m],i.dtype,f);return a.disposeData(m.dataId),y}var _de={kernelName:Md,backendName:"webgpu",kernelFunc:Ede};function $de(e){let{inputs:t,backend:a,attrs:n}=e,{dy:r,input:s,output:i}=t,o=s;k2([s,i],"maxPoolGrad");let{filterSize:u,strides:d,pad:l,dimRoundingMode:p}=n,c=C.computePool2DInfo(o.shape,u,d,1,l,p),h=new md(c,"max",!0),f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}],m=a.runWebGPUProgram(h,[o],"int32",f),g=new Tde(c);f=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]}];let y=a.runWebGPUProgram(g,[r,m],o.dtype,f);return a.disposeData(m.dataId),y}var Mde={kernelName:$d,backendName:"webgpu",kernelFunc:$de};function Fde(e){let{inputs:t,backend:a,attrs:n}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=n,{x:u}=t;v.assert(u.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${u.shape.length}.`);let d=[1,1];v.assert(C.eitherStridesOrDilationsAreOne(s,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`);let l=C.computePool2DInfo(u.shape,r,s,d,i),p=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.inHeight,l.inWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]}],c=new md(l,"max",!1),h=a.runWebGPUProgram(c,[u],u.dtype,p);c=new md(l,"max",!0,!0,o);let f=a.runWebGPUProgram(c,[u],"int32",p);return[h,f]}var Pde={kernelName:Wl,backendName:"webgpu",kernelFunc:Fde};function Ode(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return Oo(r,s,i,"min",a)}var Dde={kernelName:"Min",backendName:"webgpu",kernelFunc:Ode},zde=qt({opType:_e.MIN,cpuKernelImpl:tie}),Lde={kernelName:ji,backendName:"webgpu",kernelFunc:zde},Wde=class{constructor(e,t,a){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,r)=>n[0]+e[r]+n[1]),this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((n,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=a==="reflect"?0:1,this.shaderKey=`mirrorPad_${a}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,d)=>`uniforms.pad${d}[0]`).join(","),a=this.xShape.map((u,d)=>`uniforms.pad${d}[0] + uniforms.xShape${e>1?`[${d}]`:""}`).join(","),n=e===1?"start":"start[i]",r=e===1?"end":"end[i]",s=e===1?"outC":"outC[i]",i=Tt(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${a});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${s} < ${n}) {
              ${s} = ${n} * 2 - ${s} - ${this.offset};
            } else if(${s} >= ${r}) {
              ${s} = (${r} - 1) * 2 - ${s} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},Bde={kernelName:qi,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{x:n}=e,{paddings:r,mode:s}=t,i=a,o=r.map(d=>({type:"int32",data:[d[0],d[1]]})),u=new Wde(n.shape,r,s);return i.runWebGPUProgram(u,[n],n.dtype,o)}},Vde=qt({opType:_e.MOD}),Ude={kernelName:"Mod",backendName:"webgpu",kernelFunc:Vde},Gde=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${oe("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}},Hde=class{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${oe("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}};function T7(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{dim:s}=n,i=be({inputs:{x:r},backend:a,attrs:{shape:[v.sizeFromShape(r.shape)/r.shape[s],r.shape[s]]}}),o=new Hde(i.shape),u=a.runWebGPUProgram(o,[i],r.dtype),d=be({inputs:{x:u},backend:a,attrs:{shape:r.shape}});return a.disposeData(i.dataId),a.disposeData(u.dataId),d}var jde={kernelName:vo,backendName:"webgpu",kernelFunc:T7};function qde(e){let{inputs:t,backend:a,attrs:n}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=n,u=o?r:T7({inputs:{logits:r},backend:a,attrs:{dim:r.shape.length-1}}),d=u.shape[0],l=u.shape[1],p=new Gde(d,s),c=[{type:"float32",data:[i]},{type:"int32",data:[l]}],h=a.runWebGPUProgram(p,[u],"int32",c);return o||a.disposeData(u.dataId),h}var Xde={kernelName:Xi,backendName:"webgpu",kernelFunc:qde};function Kde(e){let{inputs:t,backend:a}=e,{x:n}=t;if(a.shouldExecuteOnCPU([n])){let s=a.tensorMap.get(n.dataId),[i,o]=nie(s.values,n.shape,n.dtype);return a.makeTensorInfo(o,n.dtype,i)}let r=new gu(n.shape,ie.NEG);return a.runWebGPUProgram(r,[n],n.dtype)}var Yde={kernelName:"Neg",backendName:"webgpu",kernelFunc:Kde};function Zde(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=n,d=a.readSync(r.dataId),l=a.readSync(s.dataId),{selectedIndices:p}=yn.nonMaxSuppressionV3Impl(d,l,i,o,u);return a.makeTensorInfo([p.length],"int32",new Int32Array(p))}var Jde={kernelName:Zi,backendName:"webgpu",kernelFunc:Zde};function Qde(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:a,attrs:n}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:d}=n,l=a.readSync(r.dataId),p=a.readSync(s.dataId),c=i,h=o,f=u,m=d,{selectedIndices:g,selectedScores:y}=yn.nonMaxSuppressionV5Impl(l,p,c,h,f,m);return[a.makeTensorInfo([g.length],"int32",new Int32Array(g)),a.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var epe={kernelName:Ji,backendName:"webgpu",kernelFunc:Qde},tpe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${oe("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}};function ape(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:u}=n,d=v.sizeFromShape(r.shape),l=new tpe(d,i),p=be({inputs:{x:r},backend:a,attrs:{shape:[d]}}),c=[{type:"float32",data:[o]},{type:"float32",data:[u]}],h=a.runWebGPUProgram(l,[p],s,c);a.disposeData(p.dataId);let f=[...r.shape,i],m=be({inputs:{x:h},backend:a,attrs:{shape:f}});return a.disposeData(h.dataId),m}var npe={kernelName:Qi,backendName:"webgpu",kernelFunc:ape};function _c(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="complex64"){let r=ip({inputs:{input:n},backend:a}),s=_c({inputs:{x:r},backend:a}),i=bh({inputs:{input:n},backend:a}),o=_c({inputs:{x:i},backend:a}),u=Po({inputs:{real:s,imag:o},backend:a});return a.disposeData(r.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),u}else return Ea({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:a})}var rpe={kernelName:nu,backendName:"webgpu",kernelFunc:_c};function R7(e){let{inputs:t,backend:a}=e,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let r=ip({inputs:{input:n},backend:a}),s=R7({inputs:{x:r},backend:a}),i=bh({inputs:{input:n},backend:a}),o=_c({inputs:{x:i},backend:a}),u=Po({inputs:{real:s,imag:o},backend:a});return a.disposeData(r.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),a.disposeData(o.dataId),u}else return Ea({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:a})}var spe={kernelName:Vl,backendName:"webgpu",kernelFunc:R7};function ipe(e){let{inputs:t,backend:a,attrs:n}=e,{axis:r}=n;if(t.length===1)return g0({inputs:{input:t[0]},backend:a,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{v.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let p=g0({inputs:{input:l},backend:a,attrs:{dim:r}});return o.push(p),p}),d=x7({inputs:u,backend:a,attrs:{axis:r}});return o.forEach(l=>a.disposeData(l.dataId)),d}var ope={kernelName:Ul,backendName:"webgpu",kernelFunc:ipe};function E7(e,t=!1){let a=e.length,n=Tt(a),r=e.map((p,c)=>`uniforms.pad${c}[0]`).join(","),s=e.map((p,c)=>`uniforms.pad${c}[0] + uniforms.xShape${a>1?`[${c}]`:""}`).join(","),i=a>1?`${n}(${r})`:`${r}`,o=a>1?`${n}(${s})`:`${s}`,u=a>1?"any(paddedCoords < start)":"paddedCoords < start",d=a>1?"any(paddedCoords >= end)":"paddedCoords >= end",l=a>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a):"coords";return`
        let start = ${i};
        let end = ${o};
        if (${u} || ${d}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${l}));
        }
  `}var lpe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((a,n)=>a[0]+e[n]+a[1]),this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((a,n)=>{this.uniforms+=` pad${n} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${E7(this.xShape)}
        }
      }
    `}},upe=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{paddings:s,constantValue:i}=n;if(s.every(d=>v.arraysEqual(d,[0,0])))return Ha({inputs:{x:r},backend:a});if(v.sizeFromShape(r.shape)===0){let d=s.map((l,p)=>l[0]+r.shape[p]+l[1]);return Ea({backend:a,attrs:{shape:d,value:i,dtype:r.dtype}})}let o=[{type:"float32",data:[i]}];s.map(d=>o.push({type:"int32",data:[d[0],d[1]]}));let u=new lpe(r.shape,s);return a.runWebGPUProgram(u,[r],r.dtype,o)},dpe={kernelName:eo,backendName:"webgpu",kernelFunc:upe},ppe=qt({opType:_e.POW}),cpe={kernelName:"Pow",backendName:"webgpu",kernelFunc:ppe};function hpe(e){let{inputs:t,backend:a}=e,{x:n,alpha:r}=t,s=new Rc(_e.PRELU,n.shape,r.shape);return a.runWebGPUProgram(s,[n,r],"float32")}var fpe={kernelName:to,backendName:"webgpu",kernelFunc:hpe};function mpe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{axis:s,keepDims:i}=n;return Oo(r,s,i,"prod",a)}var gpe={kernelName:ao,backendName:"webgpu",kernelFunc:mpe},ype=e=>{let{backend:t,attrs:a}=e,{start:n,stop:r,step:s,dtype:i}=a,o=iie(n,r,s,i);return t.makeTensorInfo([o.length],i,o)},xpe={kernelName:Gl,backendName:"webgpu",kernelFunc:ype},Ape=qt({opType:_e.DIV}),bpe={kernelName:vi,backendName:"webgpu",kernelFunc:Ape},vpe=Qe({opType:ie.RECIPROCAL}),wpe={kernelName:no,backendName:"webgpu",kernelFunc:vpe},kpe=Qe({opType:ie.RELU}),Ipe={kernelName:ro,backendName:"webgpu",kernelFunc:kpe},Spe=Qe({opType:ie.RELU6}),Cpe={kernelName:oo,backendName:"webgpu",kernelFunc:Spe},Npe=class{constructor(e,t,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Tpe(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,size:i,halfPixelCenters:o}=n,[u,d]=i,l=s&&u>1?1:0,p=s&&d>1?1:0,c=[{type:"float32",data:[l,p]},{type:"float32",data:[o?.5:0]}],h=new Npe(r.shape,u,d);return a.runWebGPUProgram(h,[r],"float32",c)}var Rpe={kernelName:io,backendName:"webgpu",kernelFunc:Tpe},Epe=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function _pe(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,[,o,u]=r.shape,[,d,l]=s.shape,p=[i&&d>1?o-1:o,i&&l>1?u-1:u],c=[i&&d>1?d-1:d,i&&l>1?l-1:l],h=p[0]/c[0],f=p[1]/c[1],m=1/h,g=1/f,y=Math.ceil(m)*2+2,x=Math.ceil(g)*2+2,A=new Epe(r.shape,i),b=[{type:"int32",data:p},{type:"int32",data:c},{type:"float32",data:[h]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}];return a.runWebGPUProgram(A,[s],s.dtype,b)}var $pe={kernelName:ql,backendName:"webgpu",kernelFunc:_pe},Mpe=class{constructor(e,t,a,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,a,e[3]],this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function Fpe(e){let{inputs:t,backend:a,attrs:n}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[u,d]=o,l=s&&u>1?1:0,p=s&&d>1?1:0,c=[{type:"float32",data:[l,p]},{type:"float32",data:[s?.5:0]}],h=new Mpe(r.shape,u,d,i);return a.runWebGPUProgram(h,[r],r.dtype,c)}var Ppe={kernelName:so,backendName:"webgpu",kernelFunc:Fpe},Ope=class{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}};function Dpe(e){let{inputs:t,backend:a,attrs:n}=e,{images:r,dy:s}=t,{alignCorners:i}=n,[,o,u]=r.shape,[,d,l]=s.shape,p=[i&&d>1?o-1:o,i&&l>1?u-1:u],c=[i&&d>1?d-1:d,i&&l>1?l-1:l],h=p[0]/c[0],f=p[1]/c[1],m=1/h,g=1/f,y=Math.ceil(m)*2+2,x=Math.ceil(g)*2+2,A=new Ope(r.shape,i),b=[{type:"int32",data:p},{type:"int32",data:c},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}];return a.runWebGPUProgram(A,[s],s.dtype,b)}var zpe={kernelName:jl,backendName:"webgpu",kernelFunc:Dpe},Lpe=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}};function Wpe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{dims:s}=n,i=r.shape.length;if(i===0)return Ha({inputs:{x:r},backend:a});let o=r.shape,u=[1,1,1,1];o.forEach((g,y)=>{let x=y+4-i;u[x]=g});let d=v.parseAxisParam(s,r.shape),l=[0,0,0,0];d.forEach(g=>{let y=g+4-i;l[y]=1});let p=[{type:"int32",data:l}],c=be({inputs:{x:r},backend:a,attrs:{shape:u}}),h=new Lpe(u),f=a.runWebGPUProgram(h,[c],c.dtype,p);a.disposeData(c.dataId);let m=be({inputs:{x:f},backend:a,attrs:{shape:o}});return a.disposeData(f.dataId),m}var Bpe={kernelName:lo,backendName:"webgpu",kernelFunc:Wpe},Vpe=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${oe("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},Upe={kernelName:To,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:a})=>{let{image:n}=e,{radians:r,fillValue:s,center:i}=t,o=a,u=new Vpe(n.shape,s),[d,l]=C.getImageCenter(i,n.shape[1],n.shape[2]),p=[{type:"float32",data:[d]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof s=="number"?p.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):p.push({type:"float32",data:s}),o.runWebGPUProgram(u,[n],n.dtype,p)}},Gpe=Qe({opType:ie.ROUND}),Hpe={kernelName:uo,backendName:"webgpu",kernelFunc:Gpe},jpe=Qe({opType:ie.RSQRT,cpuKernelImpl:oie}),qpe={kernelName:po,backendName:"webgpu",kernelFunc:jpe},Xu=class{constructor(e,t,a,n,r,s,i,o=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.sumDupeIndices=o,this.dispatchLayout=fe(e),this.dispatch=ue(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${a}_${n}_${this.sliceDimGreaterThanOne}_${i}_${o}_${r.length}`;let u=Tt(r.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=n,this.indicesRank=a}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,a=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",r="";this.dispatchLayout.x.length===1?(n="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(n="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let s=`getUpdates(${Array.from({length:this.updatesRank},(i,o)=>`coords[${o}]`).join(", ")})`;return`
    ${r}
      ${oe("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${a};
          }
          let updateValue =
              ${Is(this.type)}(${s});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${this.sumDupeIndices?ls("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}};function Xpe(e){let{inputs:t,backend:a,attrs:n}=e,{indices:r,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:u,sliceSize:d,strides:l,outputSize:p}=C.calculateShapes(s,r,i),c=[p/d,d];if(p===0)return a.makeTensorInfo(i,r.dtype);let h=be({inputs:{x:r},backend:a,attrs:{shape:[u,o]}}),f=be({inputs:{x:s},backend:a,attrs:{shape:[u,d]}}),m=f.dtype,g=Ea({backend:a,attrs:{shape:c,value:0,dtype:m}}),y=v.sizeFromShape(f.shape),x=[{type:"int32",data:[o]},{type:"int32",data:l},{type:"int32",data:[y]}],A=new Xu(f.shape,o,h.shape.length,f.shape.length,l,c,m),b=a.runWebGPUProgram(A,[f,h],m,x,g),w=be({inputs:{x:b},backend:a,attrs:{shape:i}});return a.disposeData(h.dataId),a.disposeData(f.dataId),a.disposeData(b.dataId),w}var Kpe={kernelName:co,backendName:"webgpu",kernelFunc:Xpe},Ype=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${oe("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}};function Zpe(e){let{inputs:t,backend:a,attrs:n}=e,{sortedSequence:r,values:s}=t,{side:i}=n,o=new Ype([s.shape[0],s.shape[1]],i),u=[{type:"int32",data:[r.shape[1]]}];return a.runWebGPUProgram(o,[r,s],"int32",u)}var Jpe={kernelName:fo,backendName:"webgpu",kernelFunc:Zpe},Qpe=class{constructor(e,t,a){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=a,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[],r=[];for(let s=0;s<this.outputShape.length;s++)r.push(`${a[s]}`),s<this.cRank&&n.push(`${a[s]}`);e=n.join(),t=r.join()}return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function ece(e){let{inputs:t,backend:a}=e,{condition:n,t:r,e:s}=t,i=new Qpe(n.shape.length,r.shape,r.shape.length);return a.runWebGPUProgram(i,[n,r,s],ea(r.dtype,s.dtype))}var tce={kernelName:Xl,backendName:"webgpu",kernelFunc:ece},ace=Qe({opType:ie.SELU}),nce={kernelName:mo,backendName:"webgpu",kernelFunc:ace},rce=Qe({opType:ie.SIGMOID}),sce={kernelName:xo,backendName:"webgpu",kernelFunc:rce},ice=Qe({opType:ie.SIGN}),oce={kernelName:yo,backendName:"webgpu",kernelFunc:ice},lce=Qe({opType:ie.SIN}),uce={kernelName:"Sin",backendName:"webgpu",kernelFunc:lce},dce=Qe({opType:ie.SINH}),pce={kernelName:go,backendName:"webgpu",kernelFunc:dce},cce=Qe({opType:ie.SOFTPLUS}),hce={kernelName:Ao,backendName:"webgpu",kernelFunc:cce},fce=class{constructor(e,t,a,n,r,s){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let i=new Array(n.length);for(let o=0;o<i.length;o++)i[o]=n[r[o]];this.outputShape=i,this.newDim=r,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${Tt(n.length)}, paddedXShapeStrides : ${Tt(s)}, `,a.map((o,u)=>{this.uniforms+=` pad${u} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${r}`}getUserCode(){let e=Tt(this.outputShape.length),t=p7(this.newDim);return`
      ${tc(this.paddedXShape,"PaddedX")}
      ${oe("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${E7(this.xShape,!0)}
        }
      }
    `}},mce=e=>{let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{blockShape:s,paddings:i}=n;v.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=s.reduce((x,A)=>x*A),u=[[0,0]];u.push(...i);for(let x=1+s.length;x<r.shape.length;++x)u.push([0,0]);let d=u.map((x,A)=>x[0]+r.shape[A]+x[1]),l=C.getReshaped(d,s,o,!1),p=C.getPermuted(l.length,s.length,!1),c=C.getReshapedPermuted(d,s,o,!1),h=v.computeStrides(d),f=new fce(r.shape,d,u,l,p,h.length),m=[{type:"int32",data:l},{type:"int32",data:h}];u.map(x=>m.push({type:"int32",data:[x[0],x[1]]}));let g=a.runWebGPUProgram(f,[r],r.dtype,m),y=be({inputs:{x:g},backend:a,attrs:{shape:c}});return a.disposeData(g.dataId),y},gce={kernelName:Yl,backendName:"webgpu",kernelFunc:mce},yce=class{constructor(e,t,a){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=a,this.dispatchLayout=fe([t]),this.dispatch=ue(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${ls("&result[outIndex]","value",this.type)}
      }
    }
  `}},xce=class{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=fe(t),this.dispatch=ue(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${ls("&result[segmentId]","1","int32")}
      }
    }
  `}},Ace=class{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=fe(e),this.dispatch=ue(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}};function _7(e,t,a,n=!1,r){let s=v.sizeFromShape(e.shape)/e.shape[0],i=e.dtype,o=v.sizeFromShape(t.shape),u=r.readSync(a.dataId),d=o>0?u[o-1]+1:0,l,p=e.shape.slice();p[0]=d;let c=o*s,h=Ea({backend:r,attrs:{shape:p,value:0,dtype:i}});l=new yce(p,c,i);let f=[{type:"int32",data:[s]},{type:"int32",data:[c]}],m=r.runWebGPUProgram(l,[e,t,a],i,f,h);if(n)return m;let g=Ea({backend:r,attrs:{shape:[d],value:0,dtype:"int32"}});l=new xce(d,a.shape);let y=r.runWebGPUProgram(l,[a],"int32",null,g),x=Ea({backend:r,attrs:{shape:p,value:0,dtype:i}});l=new Ace(p,i),f=[{type:"int32",data:[s]}];let A=r.runWebGPUProgram(l,[m,y],i,f,x);return r.disposeData(m.dataId),r.disposeData(y.dataId),A}function bce(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;return _7(n,r,s,!1,a)}var vce={kernelName:Ql,backendName:"webgpu",kernelFunc:bce};function wce(e){let{inputs:t,backend:a}=e,{data:n,indices:r,segmentIds:s}=t;return _7(n,r,s,!0,a)}var kce={kernelName:eu,backendName:"webgpu",kernelFunc:wce},Ice=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let a=new Array(e.length);for(let n=0;n<a.length;n++)a[n]=e[n]*t[n];this.outputShape=a,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Sce(this.rank,"uniforms.");return`
      ${oe("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Sce(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let a=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e;r++)n.push(`(${a[r]} % ${t}aShape[${r}])`);return n.join()}function T2(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{reps:s}=n;if(a.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let o=a.readSync(r.dataId),u=r.dtype==="string"?o.map(p=>v.decodeString(p)):o,d=$e(r.shape,r.dtype,u),l=fie(d,s);return a.makeTensorInfo(l.shape,l.dtype,l.values)}let i=new Ice(r.shape,s);return a.runWebGPUProgram(i,[r],r.dtype)}var Cce={kernelName:es,backendName:"webgpu",kernelFunc:T2};function Nce(e){let{inputs:t,backend:a,attrs:n}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:u,numUpdates:d,sliceSize:l,strides:p,outputSize:c}=C.calculateShapes(s,r,o),h=!1;if(s.dtype==="string"){let T=a.bufferSync(r),_=a.bufferSync(s),P=v.decodeString(a.readSync(i.dataId)[0]),E=lie(T,_,o,c,l,d,u,p,P,h);return a.makeTensorInfo(o,E.dtype,E.values)}let f=[c/l,l],m=be({inputs:{x:r},backend:a,attrs:{shape:[d,u]}}),g=s.shape.length?be({inputs:{x:s},backend:a,attrs:{shape:[d,l]}}):Ha({inputs:{x:s},backend:a}),y=g.dtype,x=a.makeTensorInfo([],y,v.makeZerosTypedArray(1,y)),A=be({inputs:{x:i},backend:a,attrs:{shape:Array(f.length).fill(1)}}),b=T2({inputs:{x:A},backend:a,attrs:{reps:f}}),w=v.sizeFromShape([d,l]),S=[{type:"int32",data:[u]},{type:"int32",data:p},{type:"int32",data:[w]}];switch(d){case 0:break;case 1:{let T=new Xu([d,l],u,m.shape.length,g.shape.length,p,f,y,h);a.runWebGPUProgram(T,[g,m],y,S,b)}break;default:{let T=new Xu([d,l],u,m.shape.length,x.shape.length,p,f,y,h);a.runWebGPUProgram(T,[x,m],y,S,b)}{let T=new Xu([d,l],u,m.shape.length,g.shape.length,p,f,y);a.runWebGPUProgram(T,[g,m],y,S,b)}}let N=be({inputs:{x:b},backend:a,attrs:{shape:o}});return a.disposeData(m.dataId),a.disposeData(g.dataId),a.disposeData(A.dataId),a.disposeData(x.dataId),a.disposeData(b.dataId),N}var Tce={kernelName:wo,backendName:"webgpu",kernelFunc:Nce};function Rce(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,r.shape)[0],u=C.prepareSplitSize(r,s,o),d=r.shape.length,l=new Array(d).fill(0),p=r.shape.slice();return u.map(c=>{let h=[...p];h[o]=c;let f=yu({inputs:{x:r},backend:a,attrs:{begin:l,size:h}});return l[o]+=c,f})}var Ece={kernelName:Zl,backendName:"webgpu",kernelFunc:Rce},_ce=Qe({opType:ie.SQRT}),$ce={kernelName:bo,backendName:"webgpu",kernelFunc:_ce},Mce={kernelName:Od,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:a}=e,n=t,r=new gu(a.shape,ie.SQUARE);return n.runWebGPUProgram(r,[a],a.dtype)}},Fce=qt({opType:_e.SQUARED_DIFFERENCE}),Pce={kernelName:ko,backendName:"webgpu",kernelFunc:Fce};function Oce({inputs:e,attrs:t,backend:a}){let{x:n}=e,r=new gu(n.shape,ie.STEP,"stepAlpha : f32,"),s=[{type:"float32",data:[t.alpha]}];return a.runWebGPUProgram(r,[n],n.dtype,s)}var Dce={kernelName:ts,backendName:"webgpu",kernelFunc:Oce},zce=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let t=Tt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let a=0;t=this.outputShape.map((n,r)=>(a++,this.outputShape.length===1?`coords * uniforms.strides[${r}] + uniforms.begin[${r}]`:`coords[${a-1}] * uniforms.strides[${r}] + uniforms.begin[${r}]`)).join(",")}return`
       ${oe("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Lce(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:d,ellipsisMask:l,newAxisMask:p,shrinkAxisMask:c}=n,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:x,end:A,strides:b}=wt.sliceInfo(r.shape,s,i,o,u,d,l,p,c),w;if(m)w=be({inputs:{x:r},backend:a,attrs:{shape:f}});else if(g||y){v.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let S=wt.computeOutShape(x,A,b),N=yu({inputs:{x:r},backend:a,attrs:{begin:x,size:S}});w=be({inputs:{x:N},backend:a,attrs:{shape:f}}),a.disposeData(N.dataId)}else if(a.shouldExecuteOnCPU([r])){let S=a.readSync(r.dataId),N=$e(r.shape,r.dtype,S),T=pie(h,N,b,x);w=a.makeTensorInfo(f,r.dtype,T.values)}else{let S=new zce(h),N=[{type:"int32",data:x},{type:"int32",data:b}],T=a.runWebGPUProgram(S,[r],r.dtype,N);w=be({inputs:{x:T},backend:a,attrs:{shape:f}}),a.disposeData(T.dataId)}return w}var Wce={kernelName:Io,backendName:"webgpu",kernelFunc:Lce};function Bce(e){let{inputs:t,backend:a,attrs:n}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:d}=n,{data:l,dataSplits:p}=t,c=a.readSync(l.dataId),h=a.readSync(p.dataId),[f,m]=cie(c,h,r,s,i,o,u,d);return[a.makeTensorInfo([f.length],"string",f),a.makeTensorInfo(p.shape,"int32",m)]}var Vce={kernelName:tu,backendName:"webgpu",kernelFunc:Bce},Uce=qt({opType:_e.SUB,cpuKernelImpl:hie,supportsComplex:!0}),Gce={kernelName:"Sub",backendName:"webgpu",kernelFunc:Uce},Hce=Qe({opType:ie.TAN}),jce={kernelName:"Tan",backendName:"webgpu",kernelFunc:Hce},qce=Qe({opType:ie.TANH}),Xce={kernelName:So,backendName:"webgpu",kernelFunc:qce};function Kce(e){let{inputs:t,backend:a,attrs:n}=e,{tensor:r,indices:s,updates:i}=t,{sliceRank:o,numUpdates:u,sliceSize:d,strides:l,outputSize:p}=C.calculateShapes(i,s,r.shape),c=[p/d,d];if(p===0)return a.makeTensorInfo(r.shape,s.dtype);let h=[],f=be({inputs:{x:s},backend:a,attrs:{shape:[u,o]}});h.push(f);let m=be({inputs:{x:i},backend:a,attrs:{shape:[u,d]}});h.push(m);let g=be({inputs:{x:r},backend:a,attrs:{shape:c}});h.push(g);let y=T2({inputs:{x:g},backend:a,attrs:{reps:Array(c.length).fill(1)}}),x=new Xu([u,d],o,f.shape.length,m.shape.length,l,c,r.dtype,!1),A=v.sizeFromShape([u,d]),b=[{type:"int32",data:[o]},{type:"int32",data:l},{type:"int32",data:[A]}],w=a.runWebGPUProgram(x,[m,f],g.dtype,b,y);h.push(w);let S=be({inputs:{x:w},backend:a,attrs:{shape:r.shape}});return h.forEach(N=>a.disposeData(N.dataId)),S}var Yce={kernelName:ho,backendName:"webgpu",kernelFunc:Kce},Zce=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${oe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Jce=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${oe("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Ho(e,t){t!==null&&e.disposeData(t.dataId)}function xy(e){let t=1;for(;t<e;)t*=2;return t}function Qce(e){let{inputs:t,backend:a,attrs:n}=e,{x:r}=t,{k:s,sorted:i}=n,o=r.shape,u=o[o.length-1];if(a.shouldExecuteOnCPU([r])){let b=a.readSync(r.dataId),[w,S]=mie(b,o,r.dtype,s,i);return[a.makeTensorInfo(w.shape,w.dtype,w.values),a.makeTensorInfo(S.shape,S.dtype,S.values)]}if(s===0)return o[o.length-1]=0,[a.makeTensorInfo(o,r.dtype,[]),a.makeTensorInfo(o,"int32",[])];if(u===1)return[r,Ea({attrs:{shape:o,dtype:"int32",value:0},backend:a})];let d=v.sizeFromShape(o)/u,l=be({inputs:{x:r},attrs:{shape:[d,u]},backend:a}),p=xy(s),c=xy(u),h=null,f=()=>h===null?[l,l]:[l,h],m=(b,w,S)=>{let N=f(),T=new Zce(S),_=[{type:"int32",data:[u]},{type:"int32",data:[h===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[b]},{type:"int32",data:[w]}],P=h;h=a.runWebGPUProgram(T,N,"int32",_),Ho(a,P)};for(let b=1;b<p;b*=2){let w=b*2;for(let S=b;S>=1;S/=2)m(w,S,[d,c])}for(let b=c;b>p;b/=2){let w=f(),S=new Jce([d,b/2]),N=[{type:"int32",data:[u]},{type:"int32",data:[h===null?1:0]},{type:"int32",data:[p]}],T=h;h=a.runWebGPUProgram(S,w,"int32",N),Ho(a,T);let _=p/2,P=_*2;for(let E=_;E>=1;E/=2)m(P,E,h.shape)}let g=h;h=yu({inputs:{x:h},backend:a,attrs:{begin:0,size:[d,s]}}),Ho(a,g);let y=C7({inputs:{x:l,indices:h},backend:a,attrs:{axis:1,batchDims:1}});Ho(a,l);let x=o.slice(0,-1);x.push(s),g=h,h=be({inputs:{x:h},attrs:{shape:x},backend:a}),Ho(a,g);let A=y;return y=be({inputs:{x:y},attrs:{shape:x},backend:a}),Ho(a,A),[y,h]}var ehe={kernelName:Co,backendName:"webgpu",kernelFunc:Qce},the=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=fe(this.outputShape),this.dispatch=ue(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${oe("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function ahe(e){let{inputs:t,backend:a,attrs:n}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:d}=n,[l,p,c,h]=r.shape,[f,m]=d??[p,c],g=[l,f,m,h],y=new the(g),x=i==="nearest"?1:2,A;switch(o){case"constant":A=1;break;case"reflect":A=2;break;case"wrap":A=3;break;case"nearest":A=4;break;default:A=1;break}let b=[{type:"int32",data:[x]},{type:"int32",data:[A]},{type:"float32",data:[u]}];return a.runWebGPUProgram(y,[r,s],"float32",b)}var nhe={kernelName:No,backendName:"webgpu",kernelFunc:ahe};function rhe(e){let{inputs:t,backend:a,attrs:n}=e,{value:r}=t,{axis:s}=n;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[s],d=new Array(o-1),l=0;for(let m=0;m<o;m++)m!==s&&(d[l++]=i.shape[m]);let p=[],c=new Array(o).fill(0),h=i.shape.slice();h[s]=1;let f=new Array(u);for(let m=0;m<f.length;m++){c[s]=m;let g=yu({inputs:{x:i},backend:a,attrs:{begin:c,size:h}}),y=be({inputs:{x:g},backend:a,attrs:{shape:d}});f[m]=y,p.push(g)}return p.forEach(m=>a.disposeData(m.dataId)),f}var she={kernelName:au,backendName:"webgpu",kernelFunc:rhe},ihe=class{constructor(e,t,a){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=fe(e),this.dispatch=ue(this.dispatchLayout,e,this.workgroupSize),a!=="float32"&&a!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${a} type.`);this.type=a,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${oe("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${ls("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}};function ohe(e){let{inputs:t,backend:a,attrs:n}=e,{x:r,segmentIds:s}=t,{numSegments:i}=n,o=r.shape.length,u=[],d=0,l=C.getAxesPermutation([d],o),p=r;l!=null&&(p=Hn({inputs:{x:r},backend:a,attrs:{perm:l}}),u.push(p),d=C.getInnerMostAxes(1,o)[0]);let c=C.segment_util.computeOutShape(p.shape,d,i),h=v.sizeFromShape([p.shape[d]]),f=be({inputs:{x:p},backend:a,attrs:{shape:[-1,h]}});u.push(f);let m=r.dtype,g=[f.shape[0],i],y=Ea({backend:a,attrs:{shape:g,value:0,dtype:m}}),x=new ihe(f.shape,g,m),A=[{type:"int32",data:[i]},{type:"int32",data:[v.sizeFromShape(f.shape)]}],b=a.runWebGPUProgram(x,[f,s],m,A,y),w=be({inputs:{x:b},backend:a,attrs:{shape:c}});u.push(b);let S=w;if(l!=null){u.push(w);let N=C.getUndoAxesPermutation(l);S=Hn({inputs:{x:S},backend:a,attrs:{perm:N}})}return u.forEach(N=>a.disposeData(N.dataId)),S}var lhe={kernelName:Bd,backendName:"webgpu",kernelFunc:ohe},uhe=[Fse,xie,bie,wie,Iie,Nie,Fie,Oie,zie,Wie,Vie,Gie,jie,Xie,Yie,toe,noe,ooe,uoe,poe,goe,boe,koe,Noe,Roe,Moe,Ose,Ooe,Woe,Xoe,ele,rle,ole,ule,ple,hle,mle,xle,ble,wle,Ile,Nle,Fle,Ole,Ele,Lle,Vle,jle,Xle,Zle,tue,nue,sue,oue,uue,pue,cue,fue,gue,_se,xue,Iue,bue,wue,Nue,Rue,_ue,Fue,Due,Lue,Bue,Pse,Uue,zoe,Hue,que,Kue,Zue,Que,tde,rde,lde,ide,dde,cde,fde,xde,vde,Jie,kde,Sde,Mde,Nde,_de,Pde,Qie,Dde,Lde,Bde,Ude,Xde,Jle,Yde,Jde,epe,Ioe,npe,spe,ope,dpe,cpe,fpe,gpe,xpe,Soe,bpe,wpe,Ipe,Cpe,$se,Rpe,$pe,Ppe,zpe,Bpe,Upe,Hpe,qpe,Kpe,Jpe,tce,nce,sce,oce,uce,pce,foe,Dce,Wce,Vce,jde,hce,gce,vce,kce,Tce,Ece,$ce,Mce,Pce,Gce,Qle,jce,Xce,Yce,Cce,ehe,nhe,Eie,she,lhe,rpe];for(let e of uhe)Sn(e);var Ay="4.22.0",dhe="4.22.0",phe="4.22.0",che="4.22.0",hhe="4.22.0",fhe="4.22.0",R2={tfjs:Ay,"tfjs-core":Ay,"tfjs-converter":dhe,"tfjs-backend-cpu":phe,"tfjs-backend-webgl":che,"tfjs-backend-wasm":hhe,"tfjs-backend-webgpu":fhe},$7=void 0;function Q(...e){const t=new Date,a=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(a,"Human:",...e)}function mhe(e,t){const a=e.endsWith("/")?"":"/",r=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${a}${t}`;if(!r.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${r}`);return r}var ne=()=>typeof performance<"u"?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function M7(e,t,a="config",n=[]){for(const r of Object.keys(t))if(typeof t[r]=="object")M7(e[r],t[r],r,n);else{const s=e&&typeof e[r]<"u";s||n.push({reason:"unknown property",where:`${a}.${r} = ${t[r]}`});const i=e&&typeof e[r]==typeof t[r];s&&!i&&n.push({reason:"property type mismatch",where:`${a}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&a==="config"&&n.length>0&&Q("invalid configuration",n),n}function ia(...e){const t=a=>a&&typeof a=="object";return e.reduce((a,n)=>(Object.keys(n||{}).forEach(r=>{const s=a[r],i=n[r];Array.isArray(s)&&Array.isArray(i)?a[r]=s.concat(...i):t(s)&&t(i)?a[r]=ia(s,i):a[r]=i}),a),{})}var Nu={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,flags:{},softwareKernels:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,autoBrightness:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!1,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,minSize:0,iouThreshold:.1,scale:1.4,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,scale:2.3,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-lite.json"}},object:{enabled:!1,modelPath:"centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"rvm.json",ratio:.5,mode:"default"}},ghe=`
  precision highp float;
  attribute vec2 pos;
  attribute vec2 uv;
  varying vec2 vUv;
  uniform float flipY;
  void main(void) {
    vUv = uv;
    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);
  }
`,yhe=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];
    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];
  }
`,xhe=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform float m[20];
  void main(void) {
    vec4 c = texture2D(texture, vUv);
    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];
    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];
    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];
    gl_FragColor.a = c.a;
  }
`,Ahe=`
  precision highp float;
  varying vec2 vUv;
  uniform vec2 size;
  uniform sampler2D texture;
  vec2 pixelate(vec2 coord, vec2 size) {
    return floor( coord / size ) * size;
  }
  void main(void) {
    gl_FragColor = vec4(0.0);
    vec2 coord = pixelate(vUv, size);
    gl_FragColor += texture2D(texture, coord);
  }
`,bhe=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  void main(void) {
    gl_FragColor = vec4(0.0);
    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;
    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;
    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;
    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;
    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;
    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;
    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;
    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;
    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;
  }
`,vhe=`
  precision highp float;
  varying vec2 vUv;
  uniform sampler2D texture;
  uniform vec2 px;
  uniform float m[9];
  void main(void) {
    vec4 c11 = texture2D(texture, vUv - px); // top left
    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center
    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right
    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left
    vec4 c22 = texture2D(texture, vUv); // mid center
    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right
    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left
    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center
    vec4 c33 = texture2D(texture, vUv + px ); // bottom right
    gl_FragColor = 
    c11 * m[0] + c12 * m[1] + c22 * m[2] +
    c21 * m[3] + c22 * m[4] + c23 * m[5] +
    c31 * m[6] + c32 * m[7] + c33 * m[8];
    gl_FragColor.a = c22.a;
  }
`,Bh=(e,t,a)=>{const n=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(n,(r,s)=>(a[s]=0,r))},whe=class{constructor(e,t,a){Ae(this,"uniform",{}),Ae(this,"attribute",{}),Ae(this,"gl"),Ae(this,"id"),Ae(this,"compile",(s,i)=>{const o=this.gl.createShader(i);return o?(this.gl.shaderSource(o,s),this.gl.compileShader(o),this.gl.getShaderParameter(o,this.gl.COMPILE_STATUS)?o:(Q(`filter: gl compile failed: ${this.gl.getShaderInfoLog(o)||"unknown"}`),null)):(Q("filter: could not create shader"),null)}),this.gl=e;const n=this.compile(t,this.gl.VERTEX_SHADER),r=this.compile(a,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),!(!n||!r)){if(!this.id){Q("filter: could not create webgl program");return}if(this.gl.attachShader(this.id,n),this.gl.attachShader(this.id,r),this.gl.linkProgram(this.id),!this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){Q(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);return}this.gl.useProgram(this.id),Bh(t,"attribute",this.attribute);for(const s in this.attribute)this.attribute[s]=this.gl.getAttribLocation(this.id,s);Bh(t,"uniform",this.uniform),Bh(a,"uniform",this.uniform);for(const s in this.uniform)this.uniform[s]=this.gl.getUniformLocation(this.id,s)}}};function khe(){let e=0,t=null,a=!1,n=-1,r=[null,null],s=[],i=null,o=null;const u=Dr(100,100),d={},l={INTERMEDIATE:1},p=u.getContext("webgl");if(!p){Q("filter: cannot get webgl context");return}this.gl=p;function c(x,A){if(!(x===u.width&&A===u.height)){if(u.width=x,u.height=A,!i){const b=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,i),p.bufferData(p.ARRAY_BUFFER,b,p.STATIC_DRAW),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}p.viewport(0,0,u.width,u.height),r=[null,null]}}function h(x,A){const b=p.createFramebuffer();p.bindFramebuffer(p.FRAMEBUFFER,b);const w=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,w);const S=p.createTexture();return p.bindTexture(p.TEXTURE_2D,S),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,x,A,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,S,0),p.bindTexture(p.TEXTURE_2D,null),p.bindFramebuffer(p.FRAMEBUFFER,null),{fbo:b,texture:S}}function f(x){return r[x]=r[x]||h(u.width,u.height),r[x]}function m(x=0){if(!o)return;let A=null,b=null,w=!1;e===0?A=t:A=f(n).texture||null,e++,a&&!(x&l.INTERMEDIATE)?(b=null,w=e%2===0):(n=(n+1)%2,b=f(n).fbo||null),p.bindTexture(p.TEXTURE_2D,A),p.bindFramebuffer(p.FRAMEBUFFER,b),p.uniform1f(o.uniform.flipY,w?-1:1),p.drawArrays(p.TRIANGLES,0,6)}function g(x){if(d[x])return o=d[x],p.useProgram((o?o.id:null)||null),o;if(o=new whe(p,ghe,x),!o)return Q("filter: could not get webgl program"),null;const A=Float32Array.BYTES_PER_ELEMENT,b=4*A;return p.enableVertexAttribArray(o.attribute.pos),p.vertexAttribPointer(o.attribute.pos,2,p.FLOAT,!1,b,0*A),p.enableVertexAttribArray(o.attribute.uv),p.vertexAttribPointer(o.attribute.uv,2,p.FLOAT,!1,b,2*A),d[x]=o,o}const y={colorMatrix:x=>{const A=new Float32Array(x);A[4]/=255,A[9]/=255,A[14]/=255,A[19]/=255;const b=A[18]===1&&A[3]===0&&A[8]===0&&A[13]===0&&A[15]===0&&A[16]===0&&A[17]===0&&A[19]===0?xhe:yhe,w=g(b);w&&(p.uniform1fv(w.uniform.m,A),m())},brightness:x=>{const A=(x||0)+1;y.colorMatrix([A,0,0,0,0,0,A,0,0,0,0,0,A,0,0,0,0,0,1,0])},saturation:x=>{const A=(x||0)*2/3+1,b=(A-1)*-.5;y.colorMatrix([A,b,b,0,0,b,A,b,0,0,b,b,A,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:x=>{const A=(x||0)+1,b=-128*(A-1);y.colorMatrix([A,0,0,0,b,0,A,0,0,b,0,0,A,0,b,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:x=>{x=(x||0)/180*Math.PI;const A=Math.cos(x),b=Math.sin(x),w=.213,S=.715,N=.072;y.colorMatrix([w+A*(1-w)+b*-w,S+A*-S+b*-S,N+A*-N+b*(1-N),0,0,w+A*-w+b*.143,S+A*(1-S)+b*.14,N+A*-N+b*-.283,0,0,w+A*-w+b*-.787,S+A*-S+b*S,N+A*(1-N)+b*N,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:x=>{const A=new Float32Array(x),b=1/u.width,w=1/u.height,S=g(vhe);S&&(p.uniform1fv(S.uniform.m,A),p.uniform2f(S.uniform.px,b,w),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:x=>{const A=x||1;y.convolution.call(this,[0,-1*A,0,-1*A,1+4*A,-1*A,0,-1*A,0])},emboss:x=>{const A=x||1;y.convolution.call(this,[-2*A,-1*A,0,-1*A,1,1*A,0,1*A,2*A])},blur:x=>{const A=x/7/u.width,b=x/7/u.height,w=g(bhe);w&&(p.uniform2f(w.uniform.px,0,b),m(l.INTERMEDIATE),p.uniform2f(w.uniform.px,A,0),m())},pixelate:x=>{const A=x/u.width,b=x/u.height,w=g(Ahe);w&&(p.uniform2f(w.uniform.size,A,b),m())}};this.add=function(x){const A=Array.prototype.slice.call(arguments,1),b=y[x];s.push({func:b,args:A})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(x){c(x.width,x.height),e=0,t||(t=p.createTexture()),p.bindTexture(p.TEXTURE_2D,t),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,p.RGBA,p.UNSIGNED_BYTE,x);for(let A=0;A<s.length;A++){a=A===s.length-1;const b=s[A];b.func.apply(this,b.args||[])}return u},this.draw=function(x){return this.add("brightness",0),this.apply(x)}}async function F7(e){const t=e.shape.length===4?Ze(e):e,a=Rn(t,3,2),n=[Fs(a[0]),Fs(a[1]),Fs(a[2])],r=[tn(a[0]),tn(a[1]),tn(a[2])],s=await Promise.all(r.map(l=>l.data())),i=Math.max(s[0][0],s[1][0],s[2][0]),u=(i>1?255:1)/i;let d;if(u>1){const l=[ke(a[0],n[0]),ke(a[1],n[1]),ke(a[2],n[2])],p=[ke(r[0],n[0]),ke(r[1],n[1]),ke(r[2],n[2])],c=[te(l[0],u),te(l[1],u),te(l[2],u)],h=Ua([c[0],c[1],c[2]],2);d=Z(h,[1,t.shape[0]||0,t.shape[1]||0,3]),ae([...l,...p,...c,h])}else d=ua(t,0);return ae([...a,...n,...r,a,t,e]),d}var $p=3840,Wt=null,Bt=null,jo=null,yt,Za={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function by(){Za.inputSum=0,Za.cacheDiff=1,Za.sumMethod=0,Za.inputTensor=void 0}function Dr(e,t){let a;if(de.browser)if(de.worker){if(typeof OffscreenCanvas>"u")throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");a=new OffscreenCanvas(e,t)}else if(typeof document<"u")a=document.createElement("canvas"),a.width=e,a.height=t;else if(typeof navigator<"u"&&navigator.product==="ReactNative")if(typeof de.Canvas<"u")a=new de.Canvas(e,t);else if(typeof globalThis.Canvas<"u")a=new globalThis.Canvas(e,t);else throw new Error("canvas error: attempted to use canvas in react-native without canvas support installed");else throw new Error("canvas error: attempted to run in browser but DOM is not defined");else typeof de.Canvas<"u"?a=new de.Canvas(e,t):typeof globalThis.Canvas<"u"&&(a=new globalThis.Canvas(e,t));return a}function Mp(e,t){const a=t||Dr(e.width,e.height);return a.getContext("2d").drawImage(e,0,0),a}async function Vh(e,t,a=!0){var n,r,s;if(!e)return t.debug&&Q("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof xt)&&!(typeof Image<"u"&&e instanceof Image)&&!(typeof globalThis.Canvas<"u"&&e instanceof globalThis.Canvas)&&!(typeof ImageData<"u"&&e instanceof ImageData)&&!(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)&&!(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)&&!(typeof HTMLMediaElement<"u"&&e instanceof HTMLMediaElement)&&!(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)&&!(typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement)&&!(typeof OffscreenCanvas<"u"&&e instanceof OffscreenCanvas))throw new Error("input error: type not recognized");if(e instanceof xt){let m=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(e.shape.length===3){if(e.shape[2]===3)m=ua(e,0);else if(e.shape[2]===4){const g=yc(e,[0,0,0],[-1,-1,3]);m=ua(g,0),ae(g)}}else e.shape.length===4&&(e.shape[3]===3?m=Ta(e):e.shape[3]===4&&(m=ym(e,[0,0,0,0],[-1,-1,-1,3])));if(m==null||m.shape.length!==4||m.shape[0]!==1||m.shape[3]!==3)throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if(m.dtype==="int32"){const g=qe(m,"float32");ae(m),m=g}return{tensor:m,canvas:t.filter.return?Bt:null}}if(typeof e.readyState<"u"&&e.readyState<=2)return t.debug&&Q("input stream is not ready"),{tensor:null,canvas:Wt};const i=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,o=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!i||!o)return t.debug&&Q("cannot determine input dimensions"),{tensor:null,canvas:Wt};let u=i,d=o;if(u>$p&&(u=$p,d=Math.trunc(u*o/i)),d>$p&&(d=$p,u=Math.trunc(d*i/o)),(((n=t.filter)==null?void 0:n.width)||0)>0?u=t.filter.width:(((r=t.filter)==null?void 0:r.height)||0)>0&&(u=i*((t.filter.height||0)/o)),(t.filter.height||0)>0?d=t.filter.height:(t.filter.width||0)>0&&(d=o*((t.filter.width||0)/i)),!u||!d)throw new Error("input error: cannot determine dimension");(!Wt||Wt.width!==u||Wt.height!==d)&&(Wt=Dr(u,d));const l=Wt.getContext("2d");if(typeof ImageData<"u"&&e instanceof ImageData?l.putImageData(e,0,0):t.filter.flip&&typeof l.translate<"u"?(l.translate(i,0),l.scale(-1,1),l.drawImage(e,0,0,i,o,0,0,Wt.width,Wt.height),l.setTransform(1,0,0,1,0,0)):l.drawImage(e,0,0,i,o,0,0,Wt.width,Wt.height),(!Bt||Wt.width!==Bt.width||Wt.height!==Bt.height)&&(Bt=Dr(Wt.width,Wt.height)),t.filter.enabled&&de.webgl.supported?(yt||(yt=de.browser?new khe:null),de.filter=!!yt,yt!=null&&yt.add?(yt.reset(),t.filter.brightness!==0&&yt.add("brightness",t.filter.brightness),t.filter.contrast!==0&&yt.add("contrast",t.filter.contrast),t.filter.sharpness!==0&&yt.add("sharpen",t.filter.sharpness),t.filter.blur!==0&&yt.add("blur",t.filter.blur),t.filter.saturation!==0&&yt.add("saturation",t.filter.saturation),t.filter.hue!==0&&yt.add("hue",t.filter.hue),t.filter.negative&&yt.add("negative"),t.filter.sepia&&yt.add("sepia"),t.filter.vintage&&yt.add("brownie"),t.filter.sepia&&yt.add("sepia"),t.filter.kodachrome&&yt.add("kodachrome"),t.filter.technicolor&&yt.add("technicolor"),t.filter.polaroid&&yt.add("polaroid"),t.filter.pixelate!==0&&yt.add("pixelate",t.filter.pixelate),((s=yt.get())==null?void 0:s.length)>1?Bt=yt.apply(Wt):Bt=yt.draw(Wt)):(t.debug&&Q("input process error: cannot initialize filters"),de.webgl.supported=!1,t.filter.enabled=!1,Mp(Wt,Bt))):(Mp(Wt,Bt),yt&&(yt=null),de.filter=!!yt),!a)return{tensor:null,canvas:Bt};if(!Bt)throw new Error("canvas error: cannot create output");let p,c=3;if(typeof ImageData<"u"&&e instanceof ImageData||e.data&&e.width&&e.height)if(de.browser&&Zn)p=Zn?Zn.fromPixels(e):null;else{c=e.data.length/e.height/e.width;const m=new Uint8Array(e.data.buffer);p=He(m,[e.height,e.width,c],"int32")}else if((!jo||Bt.width!==jo.width||Bt.height!==jo.height)&&(jo=Dr(Bt.width,Bt.height)),Zn&&de.browser)t.backend==="webgl"||t.backend==="humangl"||t.backend==="webgpu"?p=Zn.fromPixels(Bt):(jo=Mp(Bt),p=Zn.fromPixels(jo));else{const y=Mp(Bt).getContext("2d").getImageData(0,0,u,d);c=y.data.length/u/d;const x=new Uint8Array(y.data.buffer);p=He(x,[u,d,c])}if(c===4){const m=yc(p,[0,0,0],[-1,-1,3]);ae(p),p=m}if(!p)throw new Error("input error: cannot create tensor");const h=qe(p,"float32"),f=t.filter.equalization?await F7(h):ua(h,0);if(ae([p,h]),t.filter.autoBrightness){const m=tn(f),g=await m.data();t.filter.brightness=g[0]>1?1-g[0]/255:1-g[0],ae(m)}return{tensor:f,canvas:t.filter.return?Bt:null}}async function Ihe(e,t){let a=!1;if(e.cacheSensitivity===0||!t.shape||t.shape.length!==4||t.shape[1]>3840||t.shape[2]>2160)return a;if(!Za.inputTensor)Za.inputTensor=Ta(t);else if(Za.inputTensor.shape[1]!==t.shape[1]||Za.inputTensor.shape[2]!==t.shape[2])ae(Za.inputTensor),Za.inputTensor=Ta(t);else{const n={};n.diff=ke(t,Za.inputTensor),n.squared=te(n.diff,n.diff),n.sum=st(n.squared);const s=(await n.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;ae([Za.inputTensor,n.diff,n.squared,n.sum]),Za.inputTensor=Ta(t),a=s<=(e.cacheSensitivity||0)}return a}async function She(e,t,a){const n={};if(!t||!a||t.shape.length!==4||t.shape.length!==a.shape.length)return e.debug||Q("invalid input tensor or tensor shapes do not match:",t.shape,a.shape),0;if(t.shape[0]!==1||a.shape[0]!==1||t.shape[3]!==3||a.shape[3]!==3)return e.debug||Q("input tensors must be of shape [1, height, width, 3]:",t.shape,a.shape),0;n.input1=Ta(t),n.input2=t.shape[1]!==a.shape[1]||t.shape[2]!==a.shape[2]?Pe.resizeBilinear(a,[t.shape[1],t.shape[2]]):Ta(a),n.diff=ke(n.input1,n.input2),n.squared=te(n.diff,n.diff),n.sum=st(n.squared);const s=(await n.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return ae([n.input1,n.input2,n.diff,n.squared,n.sum]),s}var ac,nc,rc,Che=class{constructor(){if(Ae(this,"browser"),Ae(this,"node"),Ae(this,"worker"),Ae(this,"platform",""),Ae(this,"agent",""),Ae(this,"backends",[]),Ae(this,"initial"),Ae(this,"filter"),Ae(this,"tfjs"),Ae(this,"offscreen"),Ae(this,"perfadd",!1),Ae(this,"tensorflow",{version:void 0,gpu:void 0}),Ae(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),Ae(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0,shader:void 0,vendor:void 0}),Ae(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),Ae(this,"cpu",{model:void 0,flags:[]}),Ae(this,"kernels",[]),Nr(this,ac),Nr(this,nc),Nr(this,rc),this.browser=typeof navigator<"u"&&typeof navigator.appVersion<"u",this.node=typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u",this.tfjs={version:R2["tfjs-core"]},this.offscreen=typeof OffscreenCanvas<"u",this.initial=!0,this.worker=this.browser&&this.offscreen?typeof WorkerGlobalScope<"u":void 0,typeof navigator<"u"&&typeof navigator.userAgent<"u"){const e=navigator.userAgent||"",t=e.match(/\(([^()]+)\)/g);if(t!=null&&t[0]){const a=t[0].match(/\(([^()]+)\)/g);this.platform=a!=null&&a[0]?a[0].replace(/\(|\)/g,""):"",this.agent=e.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else typeof process<"u"&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}get Canvas(){return on(this,ac)}set Canvas(e){Rs(this,ac,e),globalThis.Canvas=e}get Image(){return on(this,nc)}set Image(e){Rs(this,nc,e),globalThis.Image=e}get ImageData(){return on(this,rc)}set ImageData(e){Rs(this,rc,e),globalThis.ImageData=e}async updateBackend(){this.backends=Object.keys($t().registryFactory);try{this.tensorflow={version:Er().binding?Er().binding.TF_Version:void 0,gpu:Er().binding?Er().binding.isUsingGpuDevice():void 0}}catch{}this.wasm.supported=typeof WebAssembly<"u",this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&(this.wasm.simd=await U().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await U().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=Dr(100,100),t=e?e.getContext("webgl2"):void 0;this.webgl.supported=typeof t<"u",this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&t&&(this.webgl.version=t.getParameter(t.VERSION),this.webgl.vendor=t.getParameter(t.VENDOR),this.webgl.renderer=t.getParameter(t.RENDERER),this.webgl.shader=t.getParameter(t.SHADING_LANGUAGE_VERSION)),this.webgpu.supported=this.browser&&typeof navigator<"u"&&typeof navigator.gpu<"u",this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){const a=await navigator.gpu.requestAdapter();a&&("requestAdapterInfo"in a?this.webgpu.adapter=await a.requestAdapterInfo():this.webgpu.adapter=await a.info)}}catch{this.webgpu.supported=!1}try{this.kernels=Ds(la()).map(a=>a.kernelName.toLowerCase())}catch{}}updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}};ac=new WeakMap;nc=new WeakMap;rc=new WeakMap;var de=new Che,Nhe=class{constructor(){Ae(this,"config"),Ae(this,"element"),Ae(this,"stream"),Ae(this,"devices",[]),Ae(this,"enumerate",async()=>{try{const e=await navigator.mediaDevices.enumerateDevices();this.devices=e.filter(t=>t.kind==="videoinput")}catch{this.devices=[]}return this.devices}),Ae(this,"start",async e=>{var t,a;if(e!=null&&e.debug&&(this.config.debug=e==null?void 0:e.debug),e!=null&&e.crop&&(this.config.crop=e==null?void 0:e.crop),e!=null&&e.mode&&(this.config.mode=e==null?void 0:e.mode),e!=null&&e.width&&(this.config.width=e==null?void 0:e.width),e!=null&&e.height&&(this.config.height=e==null?void 0:e.height),e!=null&&e.id&&(this.config.id=e==null?void 0:e.id),e!=null&&e.element)if(typeof e.element=="string"){const s=document.getElementById(e.element);if(s&&s instanceof HTMLVideoElement)this.element=s;else return this.config.debug&&Q("webcam","cannot get dom element",e.element),`webcam error: cannot get dom element: ${e.element}`}else if(e.element instanceof HTMLVideoElement)this.element=e.element;else return this.config.debug&&Q("webcam","unknown dom element",e.element),`webcam error: unknown dom element: ${e.element}`;else this.element=document.createElement("video");const n={audio:!1,video:{facingMode:this.config.mode==="front"?"user":"environment",resizeMode:this.config.crop?"crop-and-scale":"none"}};if(((t=this.config)==null?void 0:t.width)>0&&(n.video.width={ideal:this.config.width}),((a=this.config)==null?void 0:a.height)>0&&(n.video.height={ideal:this.config.height}),this.config.id&&(n.video.deviceId=this.config.id),this.element.addEventListener("play",()=>{this.config.debug&&Q("webcam","play")}),this.element.addEventListener("pause",()=>{this.config.debug&&Q("webcam","pause")}),this.element.addEventListener("click",async()=>{!this.element||!this.stream||(this.element.paused?await this.element.play():this.element.pause())}),!(navigator!=null&&navigator.mediaDevices))return this.config.debug&&Q("webcam error","no devices"),"webcam error: no devices";try{this.stream=await navigator.mediaDevices.getUserMedia(n)}catch(s){return Q("webcam",s),`webcam error: ${s}`}return this.stream?(this.element.srcObject=this.stream,await new Promise(s=>{this.element?this.element.onloadeddata=()=>s(!0):s(!1)}),await this.element.play(),this.config.debug&&Q("webcam",{width:this.width,height:this.height,label:this.label,stream:this.stream,track:this.track,settings:this.settings,constraints:this.constraints,capabilities:this.capabilities}),`webcam: ${this.label}`):(this.config.debug&&Q("webcam error","no stream"),"webcam error no stream")}),Ae(this,"pause",()=>{this.element&&this.element.pause()}),Ae(this,"play",async()=>{this.element&&await this.element.play()}),Ae(this,"stop",()=>{this.config.debug&&Q("webcam","stop"),this.track&&this.track.stop()}),this.config={element:void 0,debug:!0,mode:"front",crop:!1,width:0,height:0}}get track(){if(this.stream)return this.stream.getVideoTracks()[0]}get capabilities(){if(this.track)return this.track.getCapabilities?this.track.getCapabilities():void 0}get constraints(){if(this.track)return this.track.getConstraints?this.track.getConstraints():void 0}get settings(){if(!this.stream)return;const e=this.stream.getVideoTracks()[0];return e.getSettings?e.getSettings():void 0}get label(){return this.track?this.track.label:""}get paused(){var e;return((e=this.element)==null?void 0:e.paused)||!1}get width(){var e;return((e=this.element)==null?void 0:e.videoWidth)||0}get height(){var e;return((e=this.element)==null?void 0:e.videoHeight)||0}},P7={};Jr(P7,{"affectnet-mobilenet":()=>X7,age:()=>K7,"anti-spoofing":()=>N6,antispoof:()=>O7,blazeface:()=>D7,"blazeface-back":()=>Y7,"blazeface-front":()=>Z7,"blazepose-detector":()=>J7,"blazepose-full":()=>Q7,"blazepose-heavy":()=>e6,"blazepose-lite":()=>t6,centernet:()=>z7,default:()=>The,efficientpose:()=>a6,"efficientpose-i-lite":()=>T6,"efficientpose-ii-lite":()=>R6,"efficientpose-iv":()=>E6,emotion:()=>L7,faceboxes:()=>n6,facemesh:()=>W7,"facemesh-attention":()=>s6,"facemesh-attention-pinto":()=>r6,"facemesh-detection-full":()=>i6,"facemesh-detection-short":()=>o6,faceres:()=>B7,"faceres-deep":()=>l6,gear:()=>p6,"gear-e1":()=>u6,"gear-e2":()=>d6,gender:()=>h6,"gender-ssrnet-imdb":()=>c6,handdetect:()=>f6,"handlandmark-full":()=>m6,"handlandmark-lite":()=>V7,"handlandmark-sparse":()=>g6,handskeleton:()=>y6,handtrack:()=>U7,"insightface-efficientnet-b0":()=>_6,"insightface-ghostnet-strides1":()=>$6,"insightface-ghostnet-strides2":()=>M6,"insightface-mobilenet-emore":()=>F6,"insightface-mobilenet-swish":()=>P6,iris:()=>G7,liveness:()=>H7,meet:()=>x6,mobileface:()=>A6,mobilefacenet:()=>b6,models:()=>j7,"movenet-lightning":()=>q7,"movenet-multipose":()=>v6,"movenet-thunder":()=>w6,nanodet:()=>k6,"nanodet-e":()=>O6,"nanodet-g":()=>D6,"nanodet-m":()=>z6,"nanodet-t":()=>L6,posenet:()=>I6,rvm:()=>S6,selfie:()=>C6});var O7=853098,D7=538928,z7=4030290,L7=820516,W7=1477958,B7=6978814,V7=2023432,U7=2964837,G7=2599092,H7=592976,j7=0,q7=4650216,X7=6920630,K7=161240,Y7=538928,Z7=402048,J7=5928856,Q7=6339202,e6=27502466,t6=2726402,a6=5651240,n6=2013002,r6=2387598,s6=2382414,i6=1026192,o6=201268,l6=13957620,u6=112438,d6=112438,p6=1498916,c6=161236,h6=201808,f6=3515612,m6=5431368,g6=5286322,y6=5502280,x6=372228,A6=2183192,b6=5171976,v6=9448838,w6=12477112,k6=7574558,I6=5032780,S6=3739355,C6=212886,N6=853098,T6=2269064,R6=5651240,E6=25643252,_6=13013224,$6=8093408,M6=8049584,F6=6938536,P6=12168584,O6=12319156,D6=7574558,z6=1887474,L6=5294216,The={antispoof:O7,blazeface:D7,centernet:z7,emotion:L7,facemesh:W7,faceres:B7,"handlandmark-lite":V7,handtrack:U7,iris:G7,liveness:H7,models:j7,"movenet-lightning":q7,"affectnet-mobilenet":X7,age:K7,"blazeface-back":Y7,"blazeface-front":Z7,"blazepose-detector":J7,"blazepose-full":Q7,"blazepose-heavy":e6,"blazepose-lite":t6,efficientpose:a6,faceboxes:n6,"facemesh-attention-pinto":r6,"facemesh-attention":s6,"facemesh-detection-full":i6,"facemesh-detection-short":o6,"faceres-deep":l6,"gear-e1":u6,"gear-e2":d6,gear:p6,"gender-ssrnet-imdb":c6,gender:h6,handdetect:f6,"handlandmark-full":m6,"handlandmark-sparse":g6,handskeleton:y6,meet:x6,mobileface:A6,mobilefacenet:b6,"movenet-multipose":v6,"movenet-thunder":w6,nanodet:k6,posenet:I6,rvm:S6,selfie:C6,"anti-spoofing":N6,"efficientpose-i-lite":T6,"efficientpose-ii-lite":R6,"efficientpose-iv":E6,"insightface-efficientnet-b0":_6,"insightface-ghostnet-strides1":$6,"insightface-ghostnet-strides2":M6,"insightface-mobilenet-emore":F6,"insightface-mobilenet-swish":P6,"nanodet-e":O6,"nanodet-g":D6,"nanodet-m":z6,"nanodet-t":L6},Aa={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},Ut={};async function Rhe(e,t){return fetch(e,t)}function Ehe(e){Aa.cacheModels=e.cacheModels,Aa.verbose=e.debug,Aa.modelBasePath=e.modelBasePath}async function gt(e){var t,a,n,r,s,i;let o=mhe(Aa.modelBasePath,e||"");o.toLowerCase().endsWith(".json")||(o+=".json");const u=o.includes("/")?o.split("/"):o.split("\\"),d=u[u.length-1].replace(".json",""),l="indexeddb://"+d;Ut[d]={name:d,loaded:!1,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:P7[d],inCache:!1,url:""},Aa.cacheSupported=typeof indexedDB<"u";let p={};try{p=Aa.cacheSupported&&Aa.cacheModels?await ar.listModels():{}}catch{Aa.cacheSupported=!1}Ut[d].inCache=Aa.cacheSupported&&Aa.cacheModels&&Object.keys(p).includes(l),Ut[d].url=Ut[d].inCache?l:o;const c=typeof fetch>"u"?{}:{fetchFunc:(f,m)=>Rhe(f,m)};let h=new lh(Ut[d].url,c);Ut[d].loaded=!1;try{h.findIOHandler(),Aa.debug}catch(f){Q("error finding model i/o handler:",o,f)}try{const f=await((t=h.handler)==null?void 0:t.load())||null;Ut[d].sizeFromManifest=((a=f==null?void 0:f.weightData)==null?void 0:a.byteLength)||0,f?h.loadSync(f):h=await X1(Ut[d].inCache?l:o,c),Ut[d].sizeLoadedWeights=((r=(n=h.artifacts)==null?void 0:n.weightData)==null?void 0:r.byteLength)||((i=(s=h.artifacts)==null?void 0:s.weightData)==null?void 0:i[0].byteLength)||0,Aa.verbose&&Q("load:",{model:d,url:h.modelUrl,bytes:Ut[d].sizeLoadedWeights}),Ut[d].loaded=!0}catch(f){Q("error loading model:",o,f)}if(Ut[d].loaded&&Aa.cacheModels&&Aa.cacheSupported&&!Ut[d].inCache)try{const f=await h.save(l);Aa.debug}catch(f){Q("error saving model:",o,f)}return h}var vy="3.3.6",vt={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function _he(){const e=vt.gl;e&&(vt.extensions=e.getSupportedExtensions())}function $he(e){var t;if(e.config.backend==="humangl"&&(vt.name in $t().registry&&!((t=vt==null?void 0:vt.gl)!=null&&t.getParameter(vt.gl.VERSION))&&(Q("humangl error: backend invalid context"),e.models.reset()),!wA(vt.name))){try{vt.canvas=Dr(100,100)}catch(r){Q("humangl error: cannot create canvas:",r);return}try{if(vt.gl=vt.canvas.getContext("webgl2",vt.webGLattr),!vt.gl){Q("humangl error: cannot get webgl context");return}if(!vt.gl.getParameter(vt.gl.VERSION).includes("2.0")){Q("backend override: using fallback webgl backend as webgl 2.0 is not detected"),e.config.backend="webgl";return}vt.canvas&&(vt.canvas.addEventListener("webglcontextlost",s=>{throw Q("humangl error:",s.type),Q("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),vt.canvas.addEventListener("webglcontextrestored",s=>{Q("humangl error: context restored:",s)}),vt.canvas.addEventListener("webglcontextcreationerror",s=>{Q("humangl error: context create:",s)}))}catch(r){Q("humangl error: cannot get webgl context:",r);return}try{a2(2,vt.gl)}catch(r){Q("humangl error: cannot set webgl context:",r);return}try{const r=new Hu(vt.gl);ru(vt.name,()=>new ch(r),vt.priority)}catch(r){Q("humangl error: cannot register webgl backend:",r);return}try{Ds("webgl").forEach(s=>{const i={...s,backendName:vt.name};Sn(i)})}catch(r){Q("humangl error: cannot update webgl backend registration:",r);return}try{U().flagRegistry.WEBGL_VERSION&&U().set("WEBGL_VERSION",2)}catch(r){Q("humangl error: cannot set WebGL backend flags:",r);return}_he();const a=Er(),n=typeof a.gpgpu<"u"?a.getGPGPUContext().gl:null;n?e.config.debug&&Q("humangl backend registered:",{webgl:n.getParameter(n.VERSION),renderer:n.getParameter(n.RENDERER)}):Q("humangl error: no current gl context:",n,vt.gl)}}var nt={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};function Mhe(){nt.tf255=Be(255,"float32"),nt.tf1=Be(1,"float32"),nt.tf2=Be(2,"float32"),nt.tf05=Be(.5,"float32"),nt.tf127=Be(127.5,"float32"),nt.rgb=Qt([.2989,.587,.114],"float32")}async function Fhe(){var e;return await de.updateBackend(),(e=de.tensorflow)!=null&&e.version?"tensorflow":de.webgpu.supported&&de.webgpu.backend?"webgpu":de.webgl.supported&&de.webgl.backend?"webgl":de.wasm.supported&&de.wasm.backend?"wasm":"cpu"}function Phe(e){const t=[];if(!de.kernels.includes("mod")){const a={kernelName:"Mod",backendName:la(),kernelFunc:n=>Ue(()=>ke(n.inputs.a,te(Te(n.inputs.a,n.inputs.b),n.inputs.b)))};Sn(a),de.kernels.push("mod"),t.push("mod")}if(!de.kernels.includes("floormod")){const a={kernelName:"FloorMod",backendName:la(),kernelFunc:n=>Ue(()=>Ie(te(Uc(n.inputs.a,n.inputs.b),n.inputs.b),Kc(n.inputs.a,n.inputs.b)))};Sn(a),de.kernels.push("floormod"),t.push("floormod")}if(!de.kernels.includes("rotatewithoffset")&&e.softwareKernels){const a={kernelName:"RotateWithOffset",backendName:la(),kernelFunc:n=>Ue(()=>{const r=la();hc("cpu");const s=Pe.rotateWithOffset(n.inputs.image,n.attrs.radians,n.attrs.fillValue,n.attrs.center);return hc(r),s})};Sn(a),de.kernels.push("rotatewithoffset"),t.push("rotatewithoffset")}t.length>0&&e.debug&&Q("registered kernels:",t)}var wy={};async function y0(e,t=!1){var a,n;if(e.state="backend",((a=e.config.backend)==null?void 0:a.length)===0&&(e.config.backend=await Fhe()),t||de.initial||e.config.backend&&e.config.backend.length>0&&la()!==e.config.backend){const r=ne();if(e.config.backend&&e.config.backend.length>0){typeof window>"u"&&typeof WorkerGlobalScope<"u"&&e.config.debug&&e.config.debug&&Q("running inside web worker"),typeof navigator<"u"&&((n=navigator==null?void 0:navigator.userAgent)!=null&&n.toLowerCase().includes("electron"))&&e.config.debug&&Q("running inside electron");let s=Object.keys($t().registryFactory);if(e.config.backend==="humangl"&&!s.includes("humangl")&&($he(e),s=Object.keys($t().registryFactory)),e.config.debug&&Q("available backends:",s),de.browser&&!de.node&&e.config.backend==="tensorflow"&&s.includes("webgl")&&(e.config.debug&&Q("override: backend set to tensorflow while running in browser"),e.config.backend="webgl"),de.node&&!de.browser&&(e.config.backend==="webgl"||e.config.backend==="humangl")&&s.includes("tensorflow")&&(e.config.debug&&Q(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),de.browser&&e.config.backend==="webgpu")if(typeof navigator>"u"||typeof navigator.gpu>"u")Q("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="webgl";else{const i=await navigator.gpu.requestAdapter();if(e.config.debug&&Q("enumerated webgpu adapter:",i),!i)Q("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="webgl";else{let o;"requestAdapterInfo"in i?o=await(i==null?void 0:i.requestAdapterInfo()):o=i.info,Q("webgpu adapter info:",o)}}if(s.includes(e.config.backend)||(Q(`error: backend ${e.config.backend} not found in registry`),e.config.backend=de.node?"tensorflow":"webgl",e.config.debug&&Q(`override: setting backend ${e.config.backend}`)),e.config.debug&&Q("setting backend:",[e.config.backend]),e.config.backend==="wasm"){if(U().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&U().set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&Q("wasm path:",e.config.wasmPath),typeof p0<"u")p0(e.config.wasmPath,e.config.wasmPlatformFetch);else throw new Error("backend error: attempting to use wasm backend but wasm path is not set");let i=!1,o=!1;try{i=await U().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),o=await U().getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&Q(`wasm execution: ${o?"simd":"no simd"} ${i?"multithreaded":"singlethreaded"}`),e.config.debug&&!o&&Q("warning: wasm simd support is not enabled")}catch{Q("wasm detection failed")}}try{await hc(e.config.backend),await Vc()}catch(i){return Q("error: cannot set backend:",e.config.backend,i),!1}e.config.debug&&(wy=JSON.parse(JSON.stringify(U().flags)))}if((la()==="humangl"||la()==="webgl")&&(U().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&U().set("WEBGL_USE_SHAPES_UNIFORMS",!0),U().flagRegistry.WEBGL_EXP_CONV&&U().set("WEBGL_EXP_CONV",!0),e.config.debug&&typeof e.config.deallocate<"u"&&e.config.deallocate&&(Q("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),U().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0))),la(),e.config.debug){const s=U().flags,i={};for(const o of Object.keys(s))wy[o]!==s[o]&&(i[o]=s[o]);e.config.debug&&Object.keys(i).length>0&&Q("backend:",la(),"flags:",i)}if(e.config.flags&&Object.keys(e.config.flags).length>0){e.config.debug&&Q("flags:",e.config.flags);for(const[s,i]of Object.entries(e.config.flags))U().set(s,i)}bA(),Mhe(),e.performance.initBackend=Math.trunc(ne()-r),e.config.backend=la(),await de.updateBackend(),Phe(e.config)}return!0}function W6(e,t){for(const a of e){const n={kernelName:a,backendName:t.backend,kernelFunc:r=>{var s;return t.debug&&Q("kernelFunc",a,t.backend,r),(s=r==null?void 0:r.inputs)==null?void 0:s.info}};Sn(n)}de.kernels=Ds(la()).map(a=>a.kernelName.toLowerCase())}var B6={};Jr(B6,{all:()=>ffe,body:()=>G6,canvas:()=>cfe,face:()=>U6,gesture:()=>q6,hand:()=>H6,init:()=>X6,object:()=>j6,options:()=>Na,person:()=>pfe,tensor:()=>hfe});var Do=e=>{if(!e)Q("draw error: invalid canvas");else if(!e.getContext)Q("draw error: canvas context not defined");else{const t=e.getContext("2d",{willReadFrequently:!0});if(!t)Q("draw error: cannot get canvas context");else return t}return null},Jo=e=>Math.round(e*180/Math.PI),ct=(e,t,a)=>e.replace(t,typeof a=="number"?a.toFixed(1):a),yd=(e,t)=>{if(!t.useDepth||typeof e>"u")return t.color;const a=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${a[0]}, ${a[1]}, ${a[2]}, ${t.alpha})`};function Zr(e,t,a,n,r){const s=t.replace(/\[.*\]/g,"").split(`
`).map(o=>o.trim()),i=Math.max(0,a);for(let o=s.length-1;o>=0;o--){const u=o*r.lineHeight+n;r.shadowColor&&r.shadowColor!==""&&(e.fillStyle=r.shadowColor,e.fillText(s[o],i+5,u+16)),e.fillStyle=r.labelColor,e.fillText(s[o],i+4,u+15)}}function Ss(e,t,a,n,r){e.fillStyle=yd(n,r),e.beginPath(),e.arc(t,a,r.pointSize,0,2*Math.PI),e.fill()}function op(e,t,a,n,r,s){if(e.beginPath(),e.lineWidth=s.lineWidth,s.useCurves){const i=(t+t+n)/2,o=(a+a+r)/2;e.ellipse(i,o,n/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+s.roundRect,a),e.lineTo(t+n-s.roundRect,a),e.quadraticCurveTo(t+n,a,t+n,a+s.roundRect),e.lineTo(t+n,a+r-s.roundRect),e.quadraticCurveTo(t+n,a+r,t+n-s.roundRect,a+r),e.lineTo(t+s.roundRect,a+r),e.quadraticCurveTo(t,a+r,t,a+r-s.roundRect),e.lineTo(t,a+s.roundRect),e.quadraticCurveTo(t,a,t+s.roundRect,a),e.closePath();e.stroke()}function V6(e,t,a){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const n of t)e.strokeStyle=yd(n[2]||0,a),e.lineTo(Math.trunc(n[0]),Math.trunc(n[1]));e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function Ohe(e,t,a){if(!(t.length<2)){if(e.lineWidth=a.lineWidth,!a.useCurves||t.length<=2){V6(e,t,a);return}e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const r=(t[n][0]+t[n+1][0])/2,s=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],r,s)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),a.fillPolygons&&(e.closePath(),e.fill())}}function ky(e,t,a,n=5){let r,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(a[0],a[1]),r=Math.atan2(a[1]-t[1],a[0]-t[0]),s=n*Math.cos(r)+a[0],i=n*Math.sin(r)+a[1],e.moveTo(s,i),r+=1/3*(2*Math.PI),s=n*Math.cos(r)+a[0],i=n*Math.sin(r)+a[1],e.lineTo(s,i),r+=1/3*(2*Math.PI),s=n*Math.cos(r)+a[0],i=n*Math.sin(r)+a[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}var Na={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1,faceLabels:"",bodyLabels:"",bodyPartLabels:"",objectLabels:"",handLabels:"",fingerLabels:"",gestureLabels:""},ur={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},Iy={count:468,symmetryLine:[13,ur.midwayBetweenEyes[0]]},zu={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},Sy=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],vh=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],Lu=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],Dhe=[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178],zhe=[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152],Lhe=[33,133,362,263,1,78,308];Dhe.map(e=>vh[e]);zhe.map(e=>vh[e]);Lhe.map(e=>vh[e]);function wr(e){const t=e.map(a=>a[0]);return t.push(e[e.length-1][1]),t}var Whe=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Bhe=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Vhe=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Uhe=[[474,475],[475,476],[476,477],[477,474]],Ghe=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Hhe=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],jhe=[[469,470],[470,471],[471,472],[472,469]],qhe=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]];wr(Whe),wr(Bhe),wr(Vhe),wr(Uhe),wr(Ghe),wr(Hhe),wr(jhe),wr(qhe);var Xhe=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],Khe=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],Yhe=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Zhe=[[474,475],[475,476],[476,477],[477,474]],Jhe=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Qhe=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],efe=[[469,470],[470,471],[471,472],[472,469]],tfe=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]];function kr(e){const t=e.map(a=>a[0]);return t.push(e[e.length-1][1]),t}var afe={lips:kr(Xhe),leftEye:kr(Khe),leftEyebrow:kr(Yhe),leftIris:kr(Zhe),rightEye:kr(Jhe),rightEyebrow:kr(Qhe),rightIris:kr(efe),faceOval:kr(tfe)},nfe=Object.entries(afe).map(([e,t])=>t.map(a=>[a,e])).flat();new Map(nfe);var x0=[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407],Wu=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],Bu=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417],tt;function rfe(e,t){var a,n,r,s,i,o,u,d,l;if(!tt.drawLabels||((a=tt.faceLabels)==null?void 0:a.length)===0)return;let p=tt.faceLabels.slice();if(p=ct(p,"[id]",e.id.toFixed(0)),e.score&&(p=ct(p,"[score]",100*e.score)),e.gender&&(p=ct(p,"[gender]",e.gender)),e.genderScore&&(p=ct(p,"[genderScore]",100*e.genderScore)),e.age&&(p=ct(p,"[age]",e.age)),e.distance&&(p=ct(p,"[distance]",100*e.distance)),e.real&&(p=ct(p,"[real]",100*e.real)),e.live&&(p=ct(p,"[live]",100*e.live)),e.emotion&&e.emotion.length>0){const c=e.emotion.map(h=>`${Math.trunc(100*h.score)}% ${h.emotion}`);c.length>3&&(c.length=3),p=ct(p,"[emotions]",c.join(" "))}(r=(n=e.rotation)==null?void 0:n.angle)!=null&&r.roll&&(p=ct(p,"[roll]",Jo(e.rotation.angle.roll))),(i=(s=e.rotation)==null?void 0:s.angle)!=null&&i.yaw&&(p=ct(p,"[yaw]",Jo(e.rotation.angle.yaw))),(u=(o=e.rotation)==null?void 0:o.angle)!=null&&u.pitch&&(p=ct(p,"[pitch]",Jo(e.rotation.angle.pitch))),(l=(d=e.rotation)==null?void 0:d.gaze)!=null&&l.bearing&&(p=ct(p,"[gaze]",Jo(e.rotation.gaze.bearing))),Zr(t,p,e.box[0],e.box[1],tt)}function sfe(e,t){var a,n,r,s;if((a=e.annotations)!=null&&a.leftEyeIris&&((n=e.annotations)!=null&&n.leftEyeIris[0])){t.strokeStyle=tt.useDepth?"rgba(255, 200, 255, 0.3)":tt.color,t.beginPath();const i=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,o=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],i,o,0,0,2*Math.PI),t.stroke(),tt.fillPolygons&&(t.fillStyle=tt.useDepth?"rgba(255, 255, 200, 0.3)":tt.color,t.fill())}if((r=e.annotations)!=null&&r.rightEyeIris&&((s=e.annotations)!=null&&s.rightEyeIris[0])){t.strokeStyle=tt.useDepth?"rgba(255, 200, 255, 0.3)":tt.color,t.beginPath();const i=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,o=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],i,o,0,0,2*Math.PI),t.stroke(),tt.fillPolygons&&(t.fillStyle=tt.useDepth?"rgba(255, 255, 200, 0.3)":tt.color,t.fill())}}function ife(e,t){var a;if(tt.drawGaze&&((a=e.rotation)!=null&&a.angle)&&typeof Path2D<"u"){t.strokeStyle="pink";const n=e.box[0]+e.box[2]/2-e.box[3]*Jo(e.rotation.angle.yaw)/90,r=e.box[1]+e.box[3]/2+e.box[2]*Jo(e.rotation.angle.pitch)/90,s=new Path2D(`
      M ${e.box[0]+e.box[2]/2} ${e.box[1]}
      C
        ${n} ${e.box[1]},
        ${n} ${e.box[1]+e.box[3]},
        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}
    `),i=new Path2D(`
      M ${e.box[0]} ${e.box[1]+e.box[3]/2}
      C 
        ${e.box[0]} ${r},
        ${e.box[0]+e.box[2]} ${r},
        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}
    `);t.stroke(i),t.stroke(s)}}function ofe(e,t){var a;if(tt.drawGaze&&((a=e.rotation)!=null&&a.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";const n=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];ky(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[n[0],n[1]],4);const r=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];ky(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[r[0],r[1]],4)}}function lfe(e,t){if(tt.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let a=0;a<Lu.length/3;a++){const n=[Lu[a*3+0],Lu[a*3+1],Lu[a*3+2]].map(r=>e.mesh[r]);V6(t,n,tt)}sfe(e,t)}}function ufe(e,t){if(tt.drawPoints)if((e==null?void 0:e.mesh.length)>=468)for(let a=0;a<e.mesh.length;a++)Ss(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2],tt),tt.drawAttention&&(x0.includes(a)&&Ss(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2]+127,tt),Wu.includes(a)&&Ss(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2]-127,tt),Bu.includes(a)&&Ss(t,e.mesh[a][0],e.mesh[a][1],e.mesh[a][2]-127,tt));else for(const[a,n]of Object.entries((e==null?void 0:e.annotations)||{})){if(!(n!=null&&n[0]))continue;const r=n[0];Ss(t,r[0],r[1],0,tt),tt.drawLabels&&Zr(t,a,r[0],r[1],tt)}}function dfe(e,t){tt.drawBoxes&&op(t,e.box[0],e.box[1],e.box[2],e.box[3],tt)}function U6(e,t,a){if(tt=ia(Na,a),!t||!e)return;const n=Do(e);if(n){n.font=tt.font,n.strokeStyle=tt.color,n.fillStyle=tt.color;for(const r of t)dfe(r,n),rfe(r,n),r.mesh&&r.mesh.length>0&&(ufe(r,n),lfe(r,n),ife(r,n),ofe(r,n))}}function G6(e,t,a){var n,r;const s=ia(Na,a);if(!t||!e)return;const i=Do(e);if(i){i.lineJoin="round";for(let o=0;o<t.length;o++){if(i.strokeStyle=s.color,i.fillStyle=s.color,i.lineWidth=s.lineWidth,i.font=s.font,s.drawBoxes&&t[o].box&&t[o].box.length===4&&(op(i,t[o].box[0],t[o].box[1],t[o].box[2],t[o].box[3],s),s.drawLabels&&((n=s.bodyLabels)==null?void 0:n.length)>0)){let u=s.bodyLabels.slice();u=ct(u,"[id]",t[o].id.toFixed(0)),u=ct(u,"[score]",100*t[o].score),Zr(i,u,t[o].box[0],t[o].box[1],s)}if(s.drawPoints&&t[o].keypoints)for(let u=0;u<t[o].keypoints.length;u++)!t[o].keypoints[u].score||t[o].keypoints[u].score===0||(i.fillStyle=yd(t[o].keypoints[u].position[2],s),Ss(i,t[o].keypoints[u].position[0],t[o].keypoints[u].position[1],0,s));if(s.drawLabels&&((r=s.bodyPartLabels)==null?void 0:r.length)>0&&t[o].keypoints){i.font=s.font;for(const u of t[o].keypoints){if(!u.score||u.score===0)continue;let d=s.bodyPartLabels.slice();d=ct(d,"[label]",u.part),d=ct(d,"[score]",100*u.score),Zr(i,d,u.position[0],u.position[1],s)}}if(s.drawPolygons&&t[o].keypoints&&t[o].annotations)for(const u of Object.values(t[o].annotations))for(const d of u)Ohe(i,d,s)}}}function H6(e,t,a){var n,r;const s=ia(Na,a);if(!t||!e)return;const i=Do(e);if(i){i.lineJoin="round",i.font=s.font;for(const o of t){if(s.drawBoxes){if(i.strokeStyle=s.color,i.fillStyle=s.color,op(i,o.box[0],o.box[1],o.box[2],o.box[3],s),s.drawLabels&&((n=s.handLabels)==null?void 0:n.length)>0){let u=s.handLabels.slice();u=ct(u,"[id]",o.id.toFixed(0)),u=ct(u,"[label]",o.label),u=ct(u,"[score]",100*o.score),Zr(i,u,o.box[0],o.box[1],s)}i.stroke()}if(s.drawPoints&&o.keypoints&&o.keypoints.length>0)for(const u of o.keypoints)i.fillStyle=yd(u[2],s),Ss(i,u[0],u[1],0,s);if(s.drawLabels&&o.annotations&&((r=s.fingerLabels)==null?void 0:r.length)>0)for(const[u,d]of Object.entries(o.annotations)){let l=s.fingerLabels.slice();l=ct(l,"[label]",u),Zr(i,l,d[d.length-1][0],d[d.length-1][1],s)}if(s.drawPolygons&&o.annotations){const u=d=>{if(!(!d||d.length===0||!d[0]))for(let l=0;l<d.length;l++){i.beginPath();const p=d[l][2]||0;i.strokeStyle=yd(l*p,s),i.moveTo(d[l>0?l-1:0][0],d[l>0?l-1:0][1]),i.lineTo(d[l][0],d[l][1]),i.stroke()}};i.lineWidth=s.lineWidth,u(o.annotations.index),u(o.annotations.middle),u(o.annotations.ring),u(o.annotations.pinky),u(o.annotations.thumb)}}}}function j6(e,t,a){var n;const r=ia(Na,a);if(!t||!e)return;const s=Do(e);if(s){s.lineJoin="round",s.font=r.font;for(const i of t)if(r.drawBoxes){if(s.strokeStyle=r.color,s.fillStyle=r.color,op(s,i.box[0],i.box[1],i.box[2],i.box[3],r),r.drawLabels&&((n=r.objectLabels)==null?void 0:n.length)>0){let o=r.objectLabels.slice();o=ct(o,"[id]",i.id.toFixed(0)),o=ct(o,"[label]",i.label),o=ct(o,"[score]",100*i.score),Zr(s,o,i.box[0],i.box[1],r)}s.stroke()}}}function q6(e,t,a){var n;const r=ia(Na,a);if(!(!t||!e)&&r.drawGestures&&((n=r.gestureLabels)==null?void 0:n.length)>0){const s=Do(e);if(!s)return;s.font=r.font,s.fillStyle=r.color;let i=1;for(let o=0;o<t.length;o++){const[u,d]=Object.entries(t[o]);if(d.length>1&&d[1].length>0){const l=u[1]>0?`#${u[1]}`:"";let p=r.gestureLabels.slice();p=ct(p,"[where]",u[0]),p=ct(p,"[who]",l),p=ct(p,"[what]",d[1]),Zr(s,p,8,2+i*r.lineHeight,r),i+=1}}}}var ms={face:`face
    confidence: [score]%
    [gender] [genderScore]%
    age: [age] years
    distance: [distance]cm
    real: [real]%
    live: [live]%
    [emotions]
    roll: [roll]° yaw:[yaw]° pitch:[pitch]°
    gaze: [gaze]°`,body:"body [score]%",bodyPart:"[label] [score]%",object:"[label] [score]%",hand:"[label] [score]%",finger:"[label]",gesture:"[where] [who]: [what]"},Uh=0;function pfe(e,t,a){const n=ia(Na,a);if(!t||!e)return;const r=Do(e);if(r){r.lineJoin="round",r.font=n.font;for(let s=0;s<t.length;s++)if(n.drawBoxes){if(r.strokeStyle=n.color,r.fillStyle=n.color,op(r,t[s].box[0],t[s].box[1],t[s].box[2],t[s].box[3],n),n.drawLabels){const i=`person #${s}`;n.shadowColor&&n.shadowColor!==""&&(r.fillStyle=n.shadowColor,r.fillText(i,t[s].box[0]+3,1+t[s].box[1]+n.lineHeight,t[s].box[2])),r.fillStyle=n.labelColor,r.fillText(i,t[s].box[0]+2,0+t[s].box[1]+n.lineHeight,t[s].box[2])}r.stroke()}}}function cfe(e,t){if(!e||!t)return;const a=Do(t);a&&a.drawImage(e,0,0)}async function hfe(e,t){!e||!t||de.browser&&await Zn.toPixels(e,t)}async function ffe(e,t,a){if(!(t!=null&&t.performance)||!e)return null;const n=ne(),r=ia(Na,a),s=Promise.all([U6(e,t.face,r),G6(e,t.body,r),H6(e,t.hand,r),j6(e,t.object,r),q6(e,t.gesture,r)]);return Uh=de.perfadd?Uh+Math.round(ne()-n):Math.round(ne()-n),t.performance.draw=Uh,s}function X6(){Na.faceLabels=ms.face,Na.bodyLabels=ms.body,Na.bodyPartLabels=ms.bodyPart,Na.handLabels=ms.hand,Na.fingerLabels=ms.finger,Na.objectLabels=ms.object,Na.gestureLabels=ms.gesture}var K6={};Jr(K6,{connected:()=>Z6,kpt:()=>Y6});var Y6=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],Z6={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},bn,$s=224,J6,mfe=5,Fp=[8,16,32,32,32];function gfe(){const e=[];let t=0;for(;t<mfe;){let a=0,n=t;for(;n<Fp.length&&Fp[n]===Fp[t];)a+=2,n++;const r=Fp[t],s=Math.ceil($s/r),i=Math.ceil($s/r);for(let o=0;o<s;++o)for(let u=0;u<i;++u)for(let d=0;d<a;++d)e.push({x:(u+.5)/i,y:(o+.5)/s});t=n}J6={x:Qt(e.map(a=>a.x)),y:Qt(e.map(a=>a.y))}}async function yfe(e){if(de.initial&&(bn=null),!bn&&e.body.detector&&e.body.detector.modelPath){bn=await gt(e.body.detector.modelPath);const t=bn!=null&&bn.executor?Object.values(bn.modelSignature.inputs):void 0;$s=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}else e.debug&&bn&&Q("cached model:",bn.modelUrl);return gfe(),bn}var Cy=[5,5];function xfe(e,t){return Ue(()=>{const a=Rn(e,12,1);let n=Ze(a[0]),r=Ze(a[1]),s=Ze(a[2]),i=Ze(a[3]);n=Ie(Te(n,$s),t.x),r=Ie(Te(r,$s),t.y),s=te(Te(s,$s),Cy[0]),i=te(Te(i,$s),Cy[1]);const o=ke(n,Te(s,2)),u=ke(r,Te(i,2)),d=Ie(o,s),l=Ie(u,i);return Ua([o,u,d,l],1)})}async function Afe(e,t,a,n){var r,s;const i=[],o={};o.boxes=xfe(e,J6),o.scores=Cn(t),o.nms=await Pe.nonMaxSuppressionAsync(o.boxes,o.scores,1,((r=a.body.detector)==null?void 0:r.minConfidence)||.1,((s=a.body.detector)==null?void 0:s.iouThreshold)||.1);const u=await o.nms.data(),d=await o.scores.data(),l=await o.boxes.array();for(const p of Array.from(u)){const c=d[p],h=l[p],f=[Math.round(h[0]*n[0]),Math.round(h[1]*n[1]),Math.round(h[2]*n[0]),Math.round(h[3]*n[1])],m={score:c,boxRaw:h,box:f};i.push(m)}return Object.keys(o).forEach(p=>ae(o[p])),i}async function bfe(e,t,a){const n={};n.res=bn==null?void 0:bn.execute(e,["Identity"]),n.logitsRaw=We(n.res,[0,0,0],[1,-1,1]),n.boxesRaw=We(n.res,[0,0,1],[1,-1,-1]),n.logits=Ze(n.logitsRaw),n.boxes=Ze(n.boxesRaw);const r=await Afe(n.boxes,n.logits,t,a);return Object.keys(n).forEach(s=>ae(n[s])),r}function wh(e,t=[1,1]){const a=[e.map(o=>o[0]),e.map(o=>o[1])],n=[Math.min(...a[0]),Math.min(...a[1])],r=[Math.max(...a[0]),Math.max(...a[1])],s=[n[0],n[1],r[0]-n[0],r[1]-n[1]],i=[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]];return{box:s,boxRaw:i}}function vfe(e,t=[1,1]){const a=[e.map(d=>d[0]),e.map(d=>d[1])],n=[Math.min(...a[0]),Math.min(...a[1])],r=[Math.max(...a[0]),Math.max(...a[1])],s=[(n[0]+r[0])/2,(n[1]+r[1])/2],i=Math.max(s[0]-n[0],s[1]-n[1],-s[0]+r[0],-s[1]+r[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)],u=[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]];return{box:o,boxRaw:u}}function A0(e,t){const a=[e[2]*t,e[3]*t];return[e[0]-(a[0]-e[2])/2,e[1]-(a[1]-e[3])/2,a[0],a[1]]}var dn,b0=256,Gh=Number.MAX_SAFE_INTEGER,wfe={landmarks:["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"]},Pp=[],Cr=[[0,0],[0,0],[0,0],[0,0]],Ny=0,Ty=e=>1-1/(1+Math.exp(e)),kfe=e=>yfe(e);async function Ife(e){if(de.initial&&(dn=null),dn)e.debug&&Q("cached model:",dn.modelUrl);else{dn=await gt(e.body.modelPath);const t=dn!=null&&dn.executor?Object.values(dn.modelSignature.inputs):void 0;b0=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}return dn}function Ry(e,t,a){var n,r;const s={};if(!((n=e==null?void 0:e.shape)!=null&&n[1])||!((r=e==null?void 0:e.shape)!=null&&r[2]))return e;let i;if(a&&(s.cropped=Pe.cropAndResize(e,[a],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){const o=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],u=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];Cr=[[0,0],o,u,[0,0]],s.pad=hr(s.cropped||e,Cr),s.resize=Pe.resizeBilinear(s.pad,[t,t]),i=Te(s.resize,nt.tf255)}else e.shape[1]!==t?(s.resize=Pe.resizeBilinear(s.cropped||e,[t,t]),i=Te(s.resize,nt.tf255)):i=Te(s.cropped||e,nt.tf255);return Object.keys(s).forEach(o=>ae(s[o])),i}function Sfe(e,t,a){for(const n of e)n.position=[Math.trunc(n.position[0]*(t[0]+Cr[2][0]+Cr[2][1])/t[0]-Cr[2][0]),Math.trunc(n.position[1]*(t[1]+Cr[1][0]+Cr[1][1])/t[1]-Cr[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],2*n.position[2]/(t[0]+t[1])];return e}function Cfe(e){const t=e.find(o=>o.part==="leftPalm"),a=e.find(o=>o.part==="leftWrist"),n=e.find(o=>o.part==="leftIndex");t.position[2]=((a.position[2]||0)+(n.position[2]||0))/2;const r=e.find(o=>o.part==="rightPalm"),s=e.find(o=>o.part==="rightWrist"),i=e.find(o=>o.part==="rightIndex");r.position[2]=((s.position[2]||0)+(i.position[2]||0))/2}async function Nfe(e,t,a){if(!(dn!=null&&dn.executor))return null;const n={};[n.ld,n.segmentation,n.heatmap,n.world,n.poseflag]=dn==null?void 0:dn.execute(e,wfe.landmarks);const r=(await n.poseflag.data())[0],s=await n.ld.data(),i=await n.world.data();Object.keys(n).forEach(f=>ae(n[f]));const o=[],u=5;for(let f=0;f<s.length/u;f++){const m=Ty(s[u*f+3]),g=Ty(s[u*f+4]),y=Math.trunc(100*m*g*r)/100,x=[s[u*f+0]/b0,s[u*f+1]/b0,s[u*f+2]+0],A=[Math.trunc(a[0]*x[0]),Math.trunc(a[1]*x[1]),x[2]],b=[i[u*f+0],i[u*f+1],i[u*f+2]+0];o.push({part:Y6[f],positionRaw:x,position:A,distance:b,score:y})}if(r<(t.body.minConfidence||0))return null;Cfe(o);const d=Sfe(o,a),l=d.map(f=>f.position),p=wh(l,[a[0],a[1]]),c={};for(const[f,m]of Object.entries(Z6)){const g=[];for(let y=0;y<m.length-1;y++){const x=d.find(b=>b.part===m[y]),A=d.find(b=>b.part===m[y+1]);x&&A&&g.push([x.position,A.position])}c[f]=g}return{id:0,score:Math.trunc(100*r)/100,box:p.box,boxRaw:p.boxRaw,keypoints:d,annotations:c}}async function Ey(e,t){var a,n,r;const s=[e.shape[2]||0,e.shape[1]||0],i=(t.body.skipTime||0)>ne()-Ny,o=Gh<(t.body.skipFrames||0);if(t.skipAllowed&&i&&o&&Pp!==null)Gh++;else{let u=[];if((n=(a=t.body)==null?void 0:a.detector)!=null&&n.enabled){const d=Ry(e,224);u=await bfe(d,t,s),ae(d)}else u=[{box:[0,0,0,0],boxRaw:[0,0,1,1],score:0}];for(let d=0;d<u.length;d++){const l=Ry(e,256,(r=u[d])==null?void 0:r.boxRaw);Pp.length=0;const p=await Nfe(l,t,s);ae(l),p&&(p.id=d,Pp.push(p))}Ny=ne(),Gh=0}return Pp}var sc=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],pn,Ms=0,Hh=[],_y=0,jh=Number.MAX_SAFE_INTEGER;async function Tfe(e){if(de.initial&&(pn=null),pn)e.debug&&Q("cached model:",pn.modelUrl);else{pn=await gt(e.object.modelPath);const t=pn!=null&&pn.executor?Object.values(pn.modelSignature.inputs):void 0;Ms=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return pn}async function Rfe(e,t,a){if(!e)return[];const n={},r=[],s=await e.array();n.squeeze=Ze(e);const i=Rn(n.squeeze,6,1);n.stack=Ua([i[1],i[0],i[3],i[2]],1),n.boxes=Ze(n.stack),n.scores=Ze(i[4]),n.classes=Ze(i[5]),ae([e,...i]),n.nms=await Pe.nonMaxSuppressionAsync(n.boxes,n.scores,a.object.maxDetected||0,a.object.iouThreshold,a.object.minConfidence||0);const o=await n.nms.data();let u=0;for(const d of Array.from(o)){const l=Math.trunc(100*s[0][d][4])/100,p=s[0][d][5];if(Number.isNaN(p))continue;const c=sc[p].label,[h,f]=[s[0][d][0]/Ms,s[0][d][1]/Ms],m=[h,f,s[0][d][2]/Ms-h,s[0][d][3]/Ms-f],g=[Math.trunc(m[0]*t[0]),Math.trunc(m[1]*t[1]),Math.trunc(m[2]*t[0]),Math.trunc(m[3]*t[1])];r.push({id:u++,score:l,class:p,label:c,box:g,boxRaw:m})}return Object.keys(n).forEach(d=>ae(n[d])),r}async function $y(e,t){if(!(pn!=null&&pn.executor))return[];const a=(t.object.skipTime||0)>ne()-_y,n=jh<(t.object.skipFrames||0);return t.skipAllowed&&a&&n&&Hh.length>0?(jh++,Hh):(jh=0,new Promise(async r=>{const s=[e.shape[2]||0,e.shape[1]||0],i=Pe.resizeBilinear(e,[Ms,Ms]),o=t.object.enabled?pn==null?void 0:pn.execute(i,["tower_0/detections"]):null;_y=ne(),ae(i);const u=await Rfe(o,s,t);Hh=u,r(u)}))}var Q6={};Jr(Q6,{connected:()=>t4,kpt:()=>e4});var e4=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],t4={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},Vt,My=0,ra={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},qh=Number.MAX_SAFE_INTEGER;async function Efe(e){return de.initial&&(Vt=null),Vt?e.debug&&Q("cached model:",Vt.modelUrl):Vt=await gt(e.body.modelPath),Vt}async function _fe(e,t){const[a,n]=e.shape,r=Z(e,[n*a]),s=tn(r,0),i=(await s.data())[0];if(i>t){const o=su(r,0),u=Kc(o,a),d=(await u.data())[0],l=Te(o,a),p=(await l.data())[0];return ae([r,s,o,u,l]),[d,p,i]}return ae([r,s]),[0,0,i]}async function Fy(e,t){if(!(Vt!=null&&Vt.executor)||!(Vt!=null&&Vt.inputs[0].shape))return[];const a=(t.body.skipTime||0)>ne()-My,n=qh<(t.body.skipFrames||0);return t.skipAllowed&&a&&n&&Object.keys(ra.keypoints).length>0?(qh++,[ra]):(qh=0,new Promise(async r=>{const s=Ue(()=>{var p,c;const h=Pe.resizeBilinear(e,[((p=Vt==null?void 0:Vt.inputs[0].shape)==null?void 0:p[2])||0,((c=Vt==null?void 0:Vt.inputs[0].shape)==null?void 0:c[1])||0],!1),f=te(h,nt.tf2);return ke(f,nt.tf1)});let i;if(t.body.enabled&&(i=Vt==null?void 0:Vt.execute(s)),My=ne(),ae(s),i){ra.keypoints.length=0;const p=Ze(i);ae(i);const c=gn(p,2);ae(p);for(let h=0;h<c.length;h++){const[f,m,g]=await _fe(c[h],t.body.minConfidence);g>(t.body.minConfidence||0)&&ra.keypoints.push({score:Math.round(100*g)/100,part:e4[h],positionRaw:[f/Vt.inputs[0].shape[2],m/Vt.inputs[0].shape[1]],position:[Math.round(e.shape[2]*f/Vt.inputs[0].shape[2]),Math.round(e.shape[1]*m/Vt.inputs[0].shape[1])]})}c.forEach(h=>ae(h))}ra.score=ra.keypoints.reduce((p,c)=>c.score>p?c.score:p,0);const o=ra.keypoints.map(p=>p.position[0]),u=ra.keypoints.map(p=>p.position[1]);ra.box=[Math.min(...o),Math.min(...u),Math.max(...o)-Math.min(...o),Math.max(...u)-Math.min(...u)];const d=ra.keypoints.map(p=>p.positionRaw[0]),l=ra.keypoints.map(p=>p.positionRaw[1]);ra.boxRaw=[Math.min(...d),Math.min(...l),Math.max(...d)-Math.min(...d),Math.max(...l)-Math.min(...l)];for(const[p,c]of Object.entries(t4)){const h=[];for(let f=0;f<c.length-1;f++){const m=ra.keypoints.find(y=>y.part===c[f]),g=ra.keypoints.find(y=>y.part===c[f+1]);m&&g&&m.score>(t.body.minConfidence||0)&&g.score>(t.body.minConfidence||0)&&h.push([m.position,g.position])}ra.annotations[p]=h}r([ra])}))}var lp=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],kh=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],Xh=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],Kh=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],$fe=(e,t,a)=>{const n=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],r=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],s=e.landmarks.map(i=>[(i[0]+a[0])*t[0],(i[1]+a[1])*t[1]]);return{startPoint:n,endPoint:r,landmarks:s,confidence:e.confidence}},Yh=(e,t,a)=>{const n=t.shape[1],r=t.shape[2],s=[e.startPoint[1]/n,e.startPoint[0]/r,e.endPoint[1]/n,e.endPoint[0]/r],i=Pe.cropAndResize(t,[s],[0],a),o=Te(i,nt.tf255);return ae(i),o},a4=(e,t)=>{const a=kh(e),n=lp(e),r=[t*n[0]/2,t*n[1]/2];return{startPoint:[a[0]-r[0],a[1]-r[1]],endPoint:[a[0]+r[0],a[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence,size:n}},n4=e=>{const t=kh(e),a=lp(e),n=Math.max(...a)/2;return{startPoint:[Math.round(t[0]-n),Math.round(t[1]-n)],endPoint:[Math.round(t[0]+n),Math.round(t[1]+n)],landmarks:e.landmarks,confidence:e.confidence,size:[Math.round(a[0]),Math.round(a[1])]}},Mfe=e=>{const t=e.map(n=>n[0]),a=e.map(n=>n[1]);return{startPoint:[Math.min(...t),Math.min(...a)],endPoint:[Math.max(...t),Math.max(...a)],landmarks:e}},v0=[[1,0,0],[0,1,0],[0,0,1]],Ffe=e=>e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI)),Pfe=(e,t)=>Ffe(Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0])),Py=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],Xs=(e,t)=>{let a=0;for(let n=0;n<e.length;n++)a+=e[n]*t[n];return a},Ofe=(e,t)=>{const a=[];for(let n=0;n<e.length;n++)a.push(e[n][t]);return a},Oy=(e,t)=>{const a=[],n=e.length;for(let r=0;r<n;r++){a.push([]);for(let s=0;s<n;s++)a[r].push(Xs(e[r],Ofe(t,s)))}return a},r4=(e,t)=>{const a=Math.cos(e),n=Math.sin(e),r=[[a,-n,0],[n,a,0],[0,0,1]],s=Py(t[0],t[1]),i=Oy(s,r),o=Py(-t[0],-t[1]);return Oy(i,o)},Dfe=e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],n=[-Xs(t[0],a),-Xs(t[1],a)];return[t[0].concat(n[0]),t[1].concat(n[1]),[0,0,1]]},zfe=(e,t)=>[Xs(e,t[0]),Xs(e,t[1])];function Lfe(e){const t=e===192?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},a=[];for(let n=0;n<t.strides.length;n++){const r=t.strides[n],s=Math.floor((e+r-1)/r),i=Math.floor((e+r-1)/r),o=t.anchors[n];for(let u=0;u<s;u++){const d=r*(u+.5);for(let l=0;l<i;l++){const p=r*(l+.5);for(let c=0;c<o;c++)a.push([p,d])}}}return a}function Wfe(e,t,a,n,r){const s=lp(t),i=e.map(h=>[s[0]/r*(h[0]-r/2),s[1]/r*(h[1]-r/2),h[2]||0]),o=a&&a!==0&&Math.abs(a)>.2,u=o?r4(a,[0,0]):v0,d=o?i.map(h=>[...zfe(h,u),h[2]]):i,l=o?Dfe(n):v0,p=kh(t),c=[Xs(p,l[0]),Xs(p,l[1])];return d.map(h=>[Math.trunc(h[0]+c[0]),Math.trunc(h[1]+c[1]),Math.trunc(h[2]||0)])}function Bfe(e,t,a,n){const r=t.landmarks.length>=Iy.count?Iy.symmetryLine:zu.symmetryLine;let s=0,i=v0,o;if(e&&de.kernels.includes("rotatewithoffset"))if(s=Pfe(t.landmarks[r[0]],t.landmarks[r[1]]),s&&s!==0&&Math.abs(s)>.2){const d=kh(t),l=[d[0]/a.shape[2],d[1]/a.shape[1]],p=Pe.rotateWithOffset(a,s,0,[l[0],l[1]]);i=r4(-s,d),o=Yh(t,p,[n,n]),ae(p)}else o=Yh(t,a,[n,n]);else o=Yh(t,a,[n,n]);return[s,i,o]}var Vfe=e=>{const t=e.map(n=>n[0]),a=e.map(n=>n[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...a)+(Math.max(...a)-Math.min(...a))/2]},Ufe=(e,t)=>{const a=Vfe(e),n=lp(t);return{startPoint:[a[0]-n[0]/2,a[1]-n[1]/2],endPoint:[a[0]+n[0]/2,a[1]+n[1]/2]}},Dy=6,On,$c=null,Ln=0,Zo=null,Gfe=()=>Ln;async function Hfe(e){var t;return de.initial&&(On=null),On?e.debug&&Q("cached model:",On.modelUrl):On=await gt((t=e.face.detector)==null?void 0:t.modelPath),Ln=On.executor&&On.inputs[0].shape?On.inputs[0].shape[2]:256,Zo=Be(Ln,"int32"),$c=Or(Lfe(Ln)),On}function jfe(e){if(!$c||!Zo)return Tn([0,0]);const t={};t.boxStarts=We(e,[0,1],[-1,2]),t.centers=Ie(t.boxStarts,$c),t.boxSizes=We(e,[0,3],[-1,2]),t.boxSizesNormalized=Te(t.boxSizes,Zo),t.centersNormalized=Te(t.centers,Zo),t.halfBoxSize=Te(t.boxSizesNormalized,nt.tf2),t.starts=ke(t.centersNormalized,t.halfBoxSize),t.ends=Ie(t.centersNormalized,t.halfBoxSize),t.startNormalized=te(t.starts,Zo),t.endNormalized=te(t.ends,Zo);const a=Gc([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(n=>ae(t[n])),a}async function qfe(e,t){var a,n,r,s,i,o,u,d,l;if(!e||e.isDisposedInternal||e.shape.length!==4||e.shape[1]<1||e.shape[2]<1)return[];const p={};let c=[0,0],h=[1,1];if((n=(a=t==null?void 0:t.face)==null?void 0:a.detector)!=null&&n.square){const x=Math.max(e.shape[2],e.shape[1]);c=[Math.floor((x-e.shape[2])/2),Math.floor((x-e.shape[1])/2)],p.padded=hr(e,[[0,0],[c[1],c[1]],[c[0],c[0]],[0,0]]),h=[e.shape[2]/x,e.shape[1]/x],c=[c[0]/Ln,c[1]/Ln]}else p.padded=e.clone();p.resized=Pe.resizeBilinear(p.padded,[Ln,Ln]),p.div=Te(p.resized,nt.tf127),p.normalized=ke(p.div,nt.tf1);const f=On==null?void 0:On.execute(p.normalized);if(Array.isArray(f)&&f.length>2){const x=f.sort((A,b)=>A.size-b.size);p.concat384=ft([x[0],x[2]],2),p.concat512=ft([x[1],x[3]],2),p.concat=ft([p.concat512,p.concat384],1),p.batch=Ze(p.concat,[0])}else Array.isArray(f)?p.batch=Ze(f[0]):p.batch=Ze(f);ae(f),p.boxes=jfe(p.batch),p.logits=We(p.batch,[0,0],[-1,1]),p.sigmoid=Cn(p.logits),p.scores=Ze(p.sigmoid),p.nms=await Pe.nonMaxSuppressionAsync(p.boxes,p.scores,((r=t.face.detector)==null?void 0:r.maxDetected)||0,((s=t.face.detector)==null?void 0:s.iouThreshold)||0,((i=t.face.detector)==null?void 0:i.minConfidence)||0);const m=await p.nms.array(),g=[],y=await p.scores.data();for(let x=0;x<m.length;x++){const A=y[m[x]];if(A>(((o=t.face.detector)==null?void 0:o.minConfidence)||0)){const b={};b.bbox=We(p.boxes,[m[x],0],[1,-1]),b.slice=We(p.batch,[m[x],Dy-1],[1,-1]),b.squeeze=Ze(b.slice),b.landmarks=Z(b.squeeze,[Dy,-1]);const w=await b.bbox.data(),S=[w[0]*h[0]-c[0],w[1]*h[1]-c[1],w[2]*h[0]-c[0],w[3]*h[1]-c[1]],N={startPoint:[S[0],S[1]],endPoint:[S[2],S[3]],landmarks:await b.landmarks.array(),confidence:A};b.anchor=We($c,[m[x],0],[1,2]);const T=await b.anchor.data(),_=$fe(N,[(e.shape[2]||0)/Ln,(e.shape[1]||0)/Ln],T),P=a4(_,((u=t.face.detector)==null?void 0:u.scale)||1.4),E=n4(P);E.size[0]>(((d=t.face.detector)==null?void 0:d.minSize)||0)&&E.size[1]>(((l=t.face.detector)==null?void 0:l.minSize)||0)&&g.push(E),Object.keys(b).forEach(I=>ae(b[I]))}}return Object.keys(p).forEach(x=>ae(p[x])),g}var ln,zr=0,Zh=ur.leftEyeLower0,Jh=ur.rightEyeLower0,Qo={leftBounds:[Zh[0],Zh[Zh.length-1]],rightBounds:[Jh[0],Jh[Jh.length-1]]},bl={upperCenter:3,lowerCenter:4,index:71,numCoordinates:76};async function Xfe(e){var t,a;return de.initial&&(ln=null),ln?e.debug&&Q("cached model:",ln.modelUrl):ln=await gt((t=e.face.iris)==null?void 0:t.modelPath),zr=ln!=null&&ln.executor&&((a=ln.inputs)!=null&&a[0].shape)?ln.inputs[0].shape[2]:0,zr===-1&&(zr=64),ln}function Op(e,t,a,n){for(let r=0;r<Sy.length;r++){const{key:s,indices:i}=Sy[r],o=ur[`${a}${s}`];if(!n||n.includes(s))for(let u=0;u<i.length;u++){const d=i[u];e[o[u]]=[t[d][0],t[d][1],(t[d][2]+e[o[u]][2])/2]}}}var Kfe=e=>{const t=e[Qo.leftBounds[0]][2],a=e[Qo.rightBounds[0]][2];return t-a},zy=(e,t,a,n,r,s=!1,i=2.3)=>{const o=n4(a4(Mfe([e[a],e[n]]),i)),u=lp(o);let d=Pe.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[zr,zr]);if(s&&de.kernels.includes("flipleftright")){const l=Pe.flipLeftRight(d);ae(d),d=l}return{box:o,boxSize:u,crop:d}},Ly=(e,t,a,n=!1)=>{const r=[];for(let s=0;s<bl.numCoordinates;s++){const i=e[s*3],o=e[s*3+1],u=e[s*3+2];r.push([(n?1-i/zr:i/zr)*a[0]+t.startPoint[0],o/zr*a[1]+t.startPoint[1],u])}return{rawCoords:r,iris:r.slice(bl.index)}},Wy=(e,t,a)=>{const n=e[ur[`${a}EyeUpper0`][bl.upperCenter]][2],r=e[ur[`${a}EyeLower0`][bl.lowerCenter]][2],s=(n+r)/2;return t.map((i,o)=>{let u=s;return o===2?u=n:o===4&&(u=r),[i[0],i[1],u]})};async function Yfe(e,t,a,n){var r,s;if(!(ln!=null&&ln.executor))return e;const{box:i,boxSize:o,crop:u}=zy(e,t,Qo.leftBounds[0],Qo.leftBounds[1],a,!0,((r=n.face.iris)==null?void 0:r.scale)||2.3),{box:d,boxSize:l,crop:p}=zy(e,t,Qo.rightBounds[0],Qo.rightBounds[1],a,!0,((s=n.face.iris)==null?void 0:s.scale)||2.3),c=ft([u,p]);ae(u),ae(p);const h=ln.execute(c);ae(c);const f=await h.data();ae(h);const m=f.slice(0,bl.numCoordinates*3),{rawCoords:g,iris:y}=Ly(m,i,o,!0),x=f.slice(bl.numCoordinates*3),{rawCoords:A,iris:b}=Ly(x,d,l,!1),w=Kfe(e);Math.abs(w)<30?(Op(e,g,"left",null),Op(e,A,"right",null)):w<1?Op(e,g,"left",["EyeUpper0","EyeLower0"]):Op(e,A,"right",["EyeUpper0","EyeLower0"]);const S=Wy(e,y,"left"),N=Wy(e,b,"right");return e.concat(S).concat(N)}async function Zfe(e,t){var a,n,r,s,i,o,u,d,l,p;const c={lips:await((n=(a=t.filter(m=>m.size===160))==null?void 0:a[0])==null?void 0:n.data()),irisL:await((s=(r=t.filter(m=>m.size===10))==null?void 0:r[0])==null?void 0:s.data()),eyeL:await((o=(i=t.filter(m=>m.size===142))==null?void 0:i[0])==null?void 0:o.data()),irisR:await((d=(u=t.filter(m=>m.size===10))==null?void 0:u[1])==null?void 0:d.data()),eyeR:await((p=(l=t.filter(m=>m.size===142))==null?void 0:l[1])==null?void 0:p.data())};for(const m of Object.values(c))if(!m)return e;const h=Wu.reduce((m,g)=>m+=e[g][2],0)/Wu.length;for(let m=0;m<c.irisL.length/2;m++)e.push([c.irisL[2*m+0],c.irisL[2*m+1],h]);const f=Bu.reduce((m,g)=>m+=e[g][2],0)/Bu.length;for(let m=0;m<c.irisR.length/2;m++)e.push([c.irisR[2*m+0],c.irisR[2*m+1],f]);for(let m=0;m<c.eyeL.length/2;m++)e[Wu[m]]=[c.eyeL[2*m+0],c.eyeL[2*m+1],e[Wu[m]][2]];for(let m=0;m<c.eyeR.length/2;m++)e[Bu[m]]=[c.eyeR[2*m+0],c.eyeR[2*m+1],e[Bu[m]][2]];for(let m=0;m<c.lips.length/2;m++)e[x0[m]]=[c.lips[2*m+0],c.lips[2*m+1],e[x0[m]][2]];return e}var Pn={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},Dt=null,Vu=0;async function Jfe(e,t){var a,n,r,s,i,o,u,d,l,p;const c=(((a=t.face.detector)==null?void 0:a.skipTime)||0)>ne()-Pn.timestamp,h=Pn.skipped<(((n=t.face.detector)==null?void 0:n.skipFrames)||0);!t.skipAllowed||!c||!h||Pn.boxes.length===0?(Pn.boxes=await qfe(e,t),Pn.timestamp=ne(),Pn.skipped=0):Pn.skipped++;const f=[],m=[];let g=0;const y=Vu;for(let x=0;x<Pn.boxes.length;x++){const A=Pn.boxes[x];let b=0,w;const S={id:g++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,size:[0,0],annotations:{}};if([b,w,S.tensor]=Bfe((r=t.face.detector)==null?void 0:r.rotation,A,e,(s=t.face.mesh)!=null&&s.enabled?Vu:Gfe()),t.filter.equalization){const N=S.tensor?await F7(S.tensor):void 0;ae(S.tensor),N&&(S.tensor=N)}if(S.boxScore=Math.round(100*A.confidence)/100,!((i=t.face.mesh)!=null&&i.enabled)||!(Dt!=null&&Dt.executor)){S.box=Xh(A,e),S.boxRaw=Kh(A,e),S.score=S.boxScore,S.size=A.size,S.mesh=A.landmarks,S.meshRaw=S.mesh.map(N=>[N[0]/(e.shape[2]||0),N[1]/(e.shape[1]||0),(N[2]||0)/y]);for(const N of Object.keys(zu))S.annotations[N]=[S.mesh[zu[N]]]}else if(!Dt)t.debug&&Q("face mesh detection requested, but model is not loaded");else{if((o=t.face.attention)!=null&&o.enabled&&!de.kernels.includes("atan2"))return t.face.attention.enabled=!1,ae(S.tensor),f;const N=Dt.execute(S.tensor),_=await N.find(P=>P.shape[P.shape.length-1]===1).data();if(S.faceScore=Math.round(100*_[0])/100,S.faceScore<(((u=t.face.detector)==null?void 0:u.minConfidence)||1)){if(A.confidence=S.faceScore,t.face.mesh.keepInvalid){S.box=Xh(A,e),S.boxRaw=Kh(A,e),S.size=A.size,S.score=S.boxScore,S.mesh=A.landmarks,S.meshRaw=S.mesh.map(P=>[P[0]/(e.shape[2]||1),P[1]/(e.shape[1]||1),(P[2]||0)/y]);for(const P of Object.keys(zu))S.annotations[P]=[S.mesh[zu[P]]]}}else{const P=N.find($=>$.shape[$.shape.length-1]===1404),E=Z(P,[-1,3]);let I=await E.array();ae(E),(d=t.face.attention)!=null&&d.enabled?I=await Zfe(I,N):(l=t.face.iris)!=null&&l.enabled&&(I=await Yfe(I,S.tensor,Vu,t)),S.mesh=Wfe(I,A,b,w,Vu),S.meshRaw=S.mesh.map($=>[$[0]/(e.shape[2]||0),$[1]/(e.shape[1]||0),($[2]||0)/y]);for(const $ of Object.keys(ur))S.annotations[$]=ur[$].map(z=>S.mesh[z]);S.score=S.faceScore;const F={...Ufe(S.mesh,A),confidence:A.confidence,landmarks:A.landmarks,size:A.size};S.box=Xh(F,e),S.boxRaw=Kh(F,e),S.size=F.size,m.push(F)}ae(N)}S.score>(((p=t.face.detector)==null?void 0:p.minConfidence)||1)?f.push(S):ae(S.tensor)}return Pn.boxes=m,f}async function Qfe(e){var t,a,n,r,s,i;return de.initial&&(Dt=null),(t=e.face.attention)!=null&&t.enabled&&(Dt!=null&&Dt.signature)&&Object.keys(((a=Dt==null?void 0:Dt.signature)==null?void 0:a.outputs)||{}).length<6&&(Dt=null),Dt?e.debug&&Q("cached model:",Dt.modelUrl):(n=e.face.attention)!=null&&n.enabled?Dt=await gt(e.face.attention.modelPath):Dt=await gt((r=e.face.mesh)==null?void 0:r.modelPath),Vu=Dt.executor&&((s=Dt==null?void 0:Dt.inputs)!=null&&s[0].shape)?(i=Dt==null?void 0:Dt.inputs)==null?void 0:i[0].shape[2]:256,Dt}var e0e=Lu,t0e=vh,w0=[],Ca,Dp=[],By=0,Vy=0,Qh=Number.MAX_SAFE_INTEGER,k0=!1;async function a0e(e){var t,a,n;return de.initial&&(Ca=null),Ca?e.debug&&Q("cached model:",Ca.modelUrl):(Ca=await gt((t=e.face.emotion)==null?void 0:t.modelPath),k0=((n=(a=Ca==null?void 0:Ca.inputs)==null?void 0:a[0].shape)==null?void 0:n[3])===3,k0?w0=["angry","disgust","fear","happy","neutral","sad","surprise"]:w0=["angry","disgust","fear","happy","sad","surprise","neutral"]),Ca}async function Uy(e,t,a,n){var r,s;if(!Ca)return[];const i=Qh<(((r=t.face.emotion)==null?void 0:r.skipFrames)||0),o=(((s=t.face.emotion)==null?void 0:s.skipTime)||0)>ne()-Vy;return t.skipAllowed&&o&&i&&By===n&&Dp[a]&&Dp[a].length>0?(Qh++,Dp[a]):(Qh=0,new Promise(async u=>{var d,l,p;const c=[];if((d=t.face.emotion)!=null&&d.enabled){const h={},f=Ca!=null&&Ca.inputs[0].shape?Ca.inputs[0].shape[2]:0;if(((l=t.face.emotion)==null?void 0:l.crop)>0){const g=(p=t.face.emotion)==null?void 0:p.crop,y=[[g,g,1-g,1-g]];h.resize=Pe.cropAndResize(e,y,[0],[f,f])}else h.resize=Pe.resizeBilinear(e,[f,f],!1);k0?(h.mul=te(h.resize,255),h.normalize=ke(h.mul,[103.939,116.779,123.68]),h.emotion=Ca==null?void 0:Ca.execute(h.normalize)):(h.channels=te(h.resize,nt.rgb),h.grayscale=st(h.channels,3,!0),h.grayscaleSub=ke(h.grayscale,nt.tf05),h.grayscaleMul=te(h.grayscaleSub,nt.tf2),h.emotion=Ca==null?void 0:Ca.execute(h.grayscaleMul)),Vy=ne();const m=await h.emotion.data();for(let g=0;g<m.length;g++)m[g]>(t.face.emotion.minConfidence||0)&&c.push({score:Math.min(.99,Math.trunc(100*m[g])/100),emotion:w0[g]});c.sort((g,y)=>y.score-g.score),Object.keys(h).forEach(g=>ae(h[g]))}Dp[a]=c,By=n,u(c)}))}var da,qo=[],Gy=0,Hy=0,ef=Number.MAX_SAFE_INTEGER;async function n0e(e){var t;return de.initial&&(da=null),da?e.debug&&Q("cached model:",da.modelUrl):da=await gt((t=e.face.description)==null?void 0:t.modelPath),da}function r0e(e,t){var a,n;const r=e.image||e.tensor||e;if(!(da!=null&&da.inputs[0].shape))return r;let s;if(((a=t.face.description)==null?void 0:a.crop)>0){const o=(n=t.face.description)==null?void 0:n.crop,u=[[o,o,1-o,1-o]];s=Pe.cropAndResize(r,u,[0],[da.inputs[0].shape[2],da.inputs[0].shape[1]])}else s=Pe.resizeBilinear(r,[da.inputs[0].shape[2],da.inputs[0].shape[1]],!1);const i=te(s,nt.tf255);return ae(s),i}async function jy(e,t,a,n){var r,s,i,o;const u={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(!(da!=null&&da.executor))return u;const d=ef<(((r=t.face.description)==null?void 0:r.skipFrames)||0),l=(((s=t.face.description)==null?void 0:s.skipTime)||0)>ne()-Gy;return t.skipAllowed&&d&&l&&Hy===n&&((i=qo==null?void 0:qo[a])==null?void 0:i.age)>0&&((o=qo==null?void 0:qo[a])==null?void 0:o.genderScore)>0?(ef++,qo[a]):(ef=0,new Promise(async p=>{var c;if((c=t.face.description)!=null&&c.enabled){const h=r0e(e,t),f=da==null?void 0:da.execute(h);Gy=ne(),ae(h);const g=await f.find(T=>T.shape[1]===1).data(),y=Math.trunc(200*Math.abs(g[0]-.5))/100;y>(t.face.description.minConfidence||0)&&(u.gender=g[0]<=.5?"female":"male",u.genderScore=Math.min(.99,y));const x=su(f.find(T=>T.shape[1]===100),1),A=(await x.data())[0];ae(x);const w=await f.find(T=>T.shape[1]===100).data();u.age=Math.round(w[A-1]>w[A+1]?10*A-100*w[A-1]:10*A+100*w[A+1])/10,(Number.isNaN(g[0])||Number.isNaN(w[0]))&&Q("faceres error:",{model:da,result:f});const S=f.find(T=>T.shape[1]===1024),N=S?await S.data():[];u.descriptor=Array.from(N),f.forEach(T=>ae(T))}qo[a]=u,Hy=n,p(u)}))}var zp=.1,tf=.5;function s0e(e,t,a){let n=!1,r=a.length-1;for(let s=0;s<a.length;r=s++)a[s].y>t!=a[r].y>t&&e<(a[r].x-a[s].x)*(t-a[s].y)/(a[r].y-a[s].y)+a[s].x&&(n=!n);return n}async function i0e(e){if(!e.tensor||!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,a=e.tensor.shape[1]||0,n=await e.tensor.buffer();let r=[];for(const i of ur.silhouette)r.push({x:(e.mesh[i][0]-e.box[0])/e.box[2],y:(e.mesh[i][1]-e.box[1])/e.box[3]});r=r.map(i=>({x:i.x>.5?i.x+zp:i.x-zp,y:i.y>.5?i.y+zp:i.y-zp}));for(let i=0;i<t;i++)for(let o=0;o<a;o++)s0e(i/t,o/t,r)||(n.set(tf*n.get(0,o,i,0),0,o,i,0),n.set(tf*n.get(0,o,i,1),0,o,i,1),n.set(tf*n.get(0,o,i,2),0,o,i,2));return n.toTensor()}var wa,Lp=[],af=Number.MAX_SAFE_INTEGER,qy=0,Xy=0;async function o0e(e){var t;return de.initial&&(wa=null),wa?e.debug&&Q("cached model:",wa.modelUrl):wa=await gt((t=e.face.antispoof)==null?void 0:t.modelPath),wa}async function Ky(e,t,a,n){var r,s;if(!(wa!=null&&wa.executor))return 0;const i=(((r=t.face.antispoof)==null?void 0:r.skipTime)||0)>ne()-Xy,o=af<(((s=t.face.antispoof)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&qy===n&&Lp[a]?(af++,Lp[a]):(af=0,new Promise(async u=>{const d=Pe.resizeBilinear(e,[wa!=null&&wa.inputs[0].shape?wa.inputs[0].shape[2]:0,wa!=null&&wa.inputs[0].shape?wa.inputs[0].shape[1]:0],!1),l=wa==null?void 0:wa.execute(d),p=(await l.data())[0];Lp[a]=Math.round(100*p)/100,qy=n,Xy=ne(),ae([d,l]),u(Lp[a])}))}var ka,Wp=[],nf=Number.MAX_SAFE_INTEGER,Yy=0,Zy=0;async function l0e(e){var t;return de.initial&&(ka=null),ka?e.debug&&Q("cached model:",ka.modelUrl):ka=await gt((t=e.face.liveness)==null?void 0:t.modelPath),ka}async function Jy(e,t,a,n){var r,s;if(!(ka!=null&&ka.executor))return 0;const i=(((r=t.face.liveness)==null?void 0:r.skipTime)||0)>ne()-Zy,o=nf<(((s=t.face.liveness)==null?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&Yy===n&&Wp[a]?(nf++,Wp[a]):(nf=0,new Promise(async u=>{const d=Pe.resizeBilinear(e,[ka!=null&&ka.inputs[0].shape?ka.inputs[0].shape[2]:0,ka!=null&&ka.inputs[0].shape?ka.inputs[0].shape[1]:0],!1),l=ka==null?void 0:ka.execute(d),p=(await l.data())[0];Wp[a]=Math.round(100*p)/100,Yy=n,Zy=ne(),ae([d,l]),u(Wp[a])}))}var kn,rf=[],u0e=["white","black","asian","indian","other"],d0e=[15,23,28,35.5,45.5,55.5,65],Qy=0,ex=0,sf=Number.MAX_SAFE_INTEGER;async function p0e(e){var t;return de.initial&&(kn=null),kn?e.debug&&Q("cached model:",kn.modelUrl):kn=await gt((t=e.face.gear)==null?void 0:t.modelPath),kn}async function tx(e,t,a,n){var r,s;if(!kn)return{age:0,gender:"unknown",genderScore:0,race:[]};const i=sf<(((r=t.face.gear)==null?void 0:r.skipFrames)||0),o=(((s=t.face.gear)==null?void 0:s.skipTime)||0)>ne()-ex;return t.skipAllowed&&o&&i&&Qy===n&&rf[a]?(sf++,rf[a]):(sf=0,new Promise(async u=>{var d,l,p,c;if(!(kn!=null&&kn.inputs[0].shape))return;const h={};let f=[[0,.1,.9,.9]];if(((d=t.face.gear)==null?void 0:d.crop)>0){const w=(l=t.face.gear)==null?void 0:l.crop;f=[[w,w,1-w,1-w]]}h.resize=Pe.cropAndResize(e,f,[0],[kn.inputs[0].shape[2],kn.inputs[0].shape[1]]);const m={age:0,gender:"unknown",genderScore:0,race:[]};(p=t.face.gear)!=null&&p.enabled&&([h.age,h.gender,h.race]=kn.execute(h.resize,["age_output","gender_output","race_output"]));const g=await h.gender.data();m.gender=g[0]>g[1]?"male":"female",m.genderScore=Math.round(100*(g[0]>g[1]?g[0]:g[1]))/100;const y=await h.race.data();for(let w=0;w<y.length;w++)y[w]>(((c=t.face.gear)==null?void 0:c.minConfidence)||.2)&&m.race.push({score:Math.round(100*y[w])/100,race:u0e[w]});m.race.sort((w,S)=>S.score-w.score);const A=Array.from(await h.age.data()).map((w,S)=>[d0e[S],w]).sort((w,S)=>S[1]-w[1]);let b=A[0][0];for(let w=1;w<A.length;w++)b+=A[w][1]*(A[w][0]-b);m.age=Math.round(10*b)/10,Object.keys(h).forEach(w=>ae(h[w])),rf[a]=m,Qy=n,ex=ne(),u(m)}))}var Ia,Bp=[],ax=0,nx=0,of=Number.MAX_SAFE_INTEGER;async function c0e(e){return de.initial&&(Ia=null),Ia?e.debug&&Q("cached model:",Ia.modelUrl):Ia=await gt(e.face.ssrnet.modelPathAge),Ia}async function rx(e,t,a,n){var r,s,i,o;if(!Ia)return{age:0};const u=of<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),d=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>ne()-nx;return t.skipAllowed&&u&&d&&ax===n&&((i=Bp[a])!=null&&i.age)&&((o=Bp[a])==null?void 0:o.age)>0?(of++,Bp[a]):(of=0,new Promise(async l=>{var p,c,h;if(!(Ia!=null&&Ia.inputs)||!Ia.inputs[0]||!Ia.inputs[0].shape)return;const f={};if(((p=t.face.ssrnet)==null?void 0:p.crop)>0){const g=(c=t.face.ssrnet)==null?void 0:c.crop,y=[[g,g,1-g,1-g]];f.resize=Pe.cropAndResize(e,y,[0],[Ia.inputs[0].shape[2],Ia.inputs[0].shape[1]])}else f.resize=Pe.resizeBilinear(e,[Ia.inputs[0].shape[2],Ia.inputs[0].shape[1]],!1);f.enhance=te(f.resize,nt.tf255);const m={age:0};if((h=t.face.ssrnet)!=null&&h.enabled&&(f.age=Ia.execute(f.enhance)),f.age){const g=await f.age.data();m.age=Math.trunc(10*g[0])/10}Object.keys(f).forEach(g=>ae(f[g])),Bp[a]=m,ax=n,nx=ne(),l(m)}))}var Sa,Vp=[],sx=0,ix=0,lf=Number.MAX_SAFE_INTEGER,uf=[.2989,.587,.114];async function h0e(e){var t;return de.initial&&(Sa=null),Sa?e.debug&&Q("cached model:",Sa.modelUrl):Sa=await gt((t=e.face.ssrnet)==null?void 0:t.modelPathGender),Sa}async function ox(e,t,a,n){var r,s,i,o;if(!Sa)return{gender:"unknown",genderScore:0};const u=lf<(((r=t.face.ssrnet)==null?void 0:r.skipFrames)||0),d=(((s=t.face.ssrnet)==null?void 0:s.skipTime)||0)>ne()-ix;return t.skipAllowed&&u&&d&&sx===n&&((i=Vp[a])!=null&&i.gender)&&((o=Vp[a])==null?void 0:o.genderScore)>0?(lf++,Vp[a]):(lf=0,new Promise(async l=>{var p,c,h;if(!(Sa!=null&&Sa.inputs[0].shape))return;const f={};if(((p=t.face.ssrnet)==null?void 0:p.crop)>0){const y=(c=t.face.ssrnet)==null?void 0:c.crop,x=[[y,y,1-y,1-y]];f.resize=Pe.cropAndResize(e,x,[0],[Sa.inputs[0].shape[2],Sa.inputs[0].shape[1]])}else f.resize=Pe.resizeBilinear(e,[Sa.inputs[0].shape[2],Sa.inputs[0].shape[1]],!1);f.enhance=Ue(()=>{var y,x;let A;if(((x=(y=Sa==null?void 0:Sa.inputs)==null?void 0:y[0].shape)==null?void 0:x[3])===1){const[b,w,S]=Rn(f.resize,3,3),N=te(b,uf[0]),T=te(w,uf[1]),_=te(S,uf[2]),P=W0([N,T,_]);A=te(ke(P,nt.tf05),2)}else A=te(ke(f.resize,nt.tf05),2);return A});const m={gender:"unknown",genderScore:0};(h=t.face.ssrnet)!=null&&h.enabled&&(f.gender=Sa.execute(f.enhance));const g=await f.gender.data();m.gender=g[0]>g[1]?"female":"male",m.genderScore=g[0]>g[1]?Math.trunc(100*g[0])/100:Math.trunc(100*g[1])/100,Object.keys(f).forEach(y=>ae(f[y])),Vp[a]=m,sx=n,ix=ne(),l(m)}))}var cn,df=[],lx=0,ux=0,dx=Number.MAX_SAFE_INTEGER;async function f0e(e){var t;return de.initial&&(cn=null),cn?e.debug&&Q("cached model:",cn.modelUrl):cn=await gt((t=e.face.mobilefacenet)==null?void 0:t.modelPath),cn}async function px(e,t,a,n){var r,s;if(!(cn!=null&&cn.executor))return[];const i=dx<(((r=t.face.mobilefacenet)==null?void 0:r.skipFrames)||0),o=(((s=t.face.mobilefacenet)==null?void 0:s.skipTime)||0)>ne()-ux;return t.skipAllowed&&o&&i&&lx===n&&df[a]?(dx++,df[a]):new Promise(async u=>{var d;let l=[];if((d=t.face.mobilefacenet)!=null&&d.enabled&&(cn!=null&&cn.inputs[0].shape)){const p={};p.crop=Pe.resizeBilinear(e,[cn.inputs[0].shape[2],cn.inputs[0].shape[1]],!1),p.data=cn.execute(p.crop);const c=await p.data.data();l=Array.from(c),Object.keys(p).forEach(h=>ae(p[h]))}df[a]=l,lx=n,ux=ne(),u(l)})}var hn,pf=[],cx=0,hx=0,fx=Number.MAX_SAFE_INTEGER;async function m0e(e){return de.initial&&(hn=null),hn?e.debug&&Q("cached model:",hn.modelUrl):hn=await gt(e.face.insightface.modelPath),hn}async function mx(e,t,a,n){var r,s;if(!(hn!=null&&hn.executor))return[];const i=fx<(((r=t.face.insightface)==null?void 0:r.skipFrames)||0),o=(((s=t.face.insightface)==null?void 0:s.skipTime)||0)>ne()-hx;return t.skipAllowed&&o&&i&&cx===n&&pf[a]?(fx++,pf[a]):new Promise(async u=>{var d;let l=[];if((d=t.face.insightface)!=null&&d.enabled&&(hn!=null&&hn.inputs[0].shape)){const p={};p.crop=Pe.resizeBilinear(e,[hn.inputs[0].shape[2],hn.inputs[0].shape[1]],!1),p.data=hn.execute(p.crop);const c=await p.data.data();l=Array.from(c),Object.keys(p).forEach(h=>ae(p[h]))}pf[a]=l,cx=n,hx=ne(),u(l)})}var g0e=e=>{const t=(p,c)=>Math.atan2(p[1]-c[1],p[0]-c[0]);if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const a=[0,-.1],n=1,r=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),s=r?e.mesh[473]:e.mesh[468],i=r?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],o=r?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],u=[(i[0]-s[0])/o[0]-a[0],n*(s[1]-i[1])/o[1]-a[1]];let d=Math.sqrt(u[0]*u[0]+u[1]*u[1]);return d=Math.min(d,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(t([0,0],u)+Math.PI/2)%Math.PI,strength:d}},y0e=(e,t)=>{const a=m=>{const g=Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2]);return m[0]/=g,m[1]/=g,m[2]/=g,m},n=(m,g)=>{const y=m[0]-g[0],x=m[1]-g[1],A=m[2]-g[2];return[y,x,A]},r=(m,g)=>{const y=m[1]*g[2]-m[2]*g[1],x=m[2]*g[0]-m[0]*g[2],A=m[0]*g[1]-m[1]*g[0];return[y,x,A]},s=m=>{const[g,y,x,A,b,w,S,N,T]=m;let _,P,E;if(A<1)if(A>-1){const I=Math.sqrt(g*g+S*S);E=Math.atan2(A,I),P=Math.atan2(-S,g),_=Math.atan2(-w,b)}else E=-Math.PI/2,P=-Math.atan2(N,T),_=0;else E=Math.PI/2,P=Math.atan2(N,T),_=0;return Number.isNaN(_)&&(_=0),Number.isNaN(P)&&(P=0),Number.isNaN(E)&&(E=0),{pitch:-_,yaw:-P,roll:-E}},i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const o=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,u=[i[10],i[152],i[234],i[454]].map(m=>[m[0]*t[0]/o,m[1]*t[1]/o,m[2]]),d=a(n(u[1],u[0]));let l=a(n(u[3],u[2]));const p=a(r(l,d));l=r(d,p);const c=[l[0],l[1],l[2],d[0],d[1],d[2],p[0],p[1],p[2]],h=s(c),f=i.length===478?g0e(e):{bearing:0,strength:0};return{angle:h,matrix:c,gaze:f}};function x0e(e,t){const a=e==null?void 0:e.annotations;if(!(a!=null&&a.leftEyeIris)||!(a!=null&&a.rightEyeIris))return 0;const n=Math.max(Math.abs(a.leftEyeIris[3][0]-a.leftEyeIris[1][0]),Math.abs(a.rightEyeIris[3][0]-a.rightEyeIris[1][0]))/t;return Math.round(1.17/n)/100}var gx=async(e,t)=>{var a,n,r,s,i,o,u,d,l,p,c,h,f,m,g,y,x,A,b,w,S,N,T;let _=ne(),P,E,I,F,$,z,M,H,V;const q=[];e.state="run:face";const G=await Jfe(t,e.config);if(e.performance.face=de.perfadd?(e.performance.face||0)+Math.trunc(ne()-_):Math.trunc(ne()-_),!t.shape||t.shape.length!==4)return[];if(!G)return[];for(let B=0;B<G.length;B++){if(e.analyze("Get Face"),!G[B].tensor||G[B].tensor.isDisposedInternal){Q("Face object is disposed:",G[B].tensor);continue}if((a=e.config.face.detector)!=null&&a.mask){const ye=await i0e(G[B]);ae(G[B].tensor),ye&&(G[B].tensor=ye)}const K=G[B].mesh&&G[B].mesh.length>200?y0e(G[B],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?F=(n=e.config.face.emotion)!=null&&n.enabled?Uy(G[B].tensor||He([]),e.config,B,G.length):[]:(e.state="run:emotion",_=ne(),F=(r=e.config.face.emotion)!=null&&r.enabled?await Uy(G[B].tensor||He([]),e.config,B,G.length):[],e.performance.emotion=de.perfadd?(e.performance.emotion||0)+Math.trunc(ne()-_):Math.trunc(ne()-_)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?M=(s=e.config.face.antispoof)!=null&&s.enabled?Ky(G[B].tensor||He([]),e.config,B,G.length):0:(e.state="run:antispoof",_=ne(),M=(i=e.config.face.antispoof)!=null&&i.enabled?await Ky(G[B].tensor||He([]),e.config,B,G.length):0,e.performance.antispoof=de.perfadd?(e.performance.antispoof||0)+Math.trunc(ne()-_):Math.trunc(ne()-_)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?H=(o=e.config.face.liveness)!=null&&o.enabled?Jy(G[B].tensor||He([]),e.config,B,G.length):0:(e.state="run:liveness",_=ne(),H=(u=e.config.face.liveness)!=null&&u.enabled?await Jy(G[B].tensor||He([]),e.config,B,G.length):0,e.performance.liveness=de.perfadd?(e.performance.antispoof||0)+Math.trunc(ne()-_):Math.trunc(ne()-_)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?E=(d=e.config.face.gear)!=null&&d.enabled?tx(G[B].tensor||He([]),e.config,B,G.length):null:(e.state="run:gear",_=ne(),E=(l=e.config.face.gear)!=null&&l.enabled?await tx(G[B].tensor||He([]),e.config,B,G.length):null,e.performance.gear=Math.trunc(ne()-_)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(P=(p=e.config.face.ssrnet)!=null&&p.enabled?rx(G[B].tensor||He([]),e.config,B,G.length):null,I=(c=e.config.face.ssrnet)!=null&&c.enabled?ox(G[B].tensor||He([]),e.config,B,G.length):null):(e.state="run:ssrnet",_=ne(),P=(h=e.config.face.ssrnet)!=null&&h.enabled?await rx(G[B].tensor||He([]),e.config,B,G.length):null,I=(f=e.config.face.ssrnet)!=null&&f.enabled?await ox(G[B].tensor||He([]),e.config,B,G.length):null,e.performance.ssrnet=Math.trunc(ne()-_)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?$=(m=e.config.face.mobilefacenet)!=null&&m.enabled?px(G[B].tensor||He([]),e.config,B,G.length):null:(e.state="run:mobilefacenet",_=ne(),$=(g=e.config.face.mobilefacenet)!=null&&g.enabled?await px(G[B].tensor||He([]),e.config,B,G.length):null,e.performance.mobilefacenet=Math.trunc(ne()-_)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?z=(y=e.config.face.insightface)!=null&&y.enabled?mx(G[B].tensor||He([]),e.config,B,G.length):null:(e.state="run:mobilefacenet",_=ne(),z=(x=e.config.face.insightface)!=null&&x.enabled?await mx(G[B].tensor||He([]),e.config,B,G.length):null,e.performance.mobilefacenet=Math.trunc(ne()-_)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?V=jy(G[B].tensor||He([]),e.config,B,G.length):(e.state="run:description",_=ne(),V=await jy(G[B].tensor||He([]),e.config,B,G.length),e.performance.description=de.perfadd?(e.performance.description||0)+Math.trunc(ne()-_):Math.trunc(ne()-_)),e.analyze("End Description:"),e.config.async&&([P,I,F,$,z,V,E,M,H]=await Promise.all([P,I,F,$,z,V,E,M,H])),e.analyze("Finish Face:"),(A=e.config.face.ssrnet)!=null&&A.enabled&&P&&I&&(V={...V,age:P.age,gender:I.gender,genderScore:I.genderScore}),(b=e.config.face.gear)!=null&&b.enabled&&E&&(V={...V,age:E.age,gender:E.gender,genderScore:E.genderScore,race:E.race}),(w=e.config.face.mobilefacenet)!=null&&w.enabled&&$&&(V.descriptor=$),(S=e.config.face.insightface)!=null&&S.enabled&&z&&(V.descriptor=z);const X=(N=e.config.face.iris)!=null&&N.enabled?x0e(G[B],t.shape[2]):0,J=(T=e.config.face.detector)!=null&&T.return?Ze(G[B].tensor):null;ae(G[B].tensor),G[B].tensor&&delete G[B].tensor;const ee={...G[B],id:B};V.age&&(ee.age=V.age),V.gender&&(ee.gender=V.gender),V.genderScore&&(ee.genderScore=V.genderScore),V.descriptor&&(ee.embedding=V.descriptor),V.race&&(ee.race=V.race),F&&(ee.emotion=F),M&&(ee.real=M),H&&(ee.live=H),X>0&&(ee.distance=X),K&&(ee.rotation=K),J&&(ee.tensor=J),q.push(ee),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),q},Ba={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>Ba.nameMapping[e],getPoints:e=>Ba.pointsMapping[e]},sl={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>sl.nameMapping[e]},Ct={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>Ct.nameMapping[e]},up=class{constructor(e){Ae(this,"name"),Ae(this,"curls"),Ae(this,"directions"),Ae(this,"weights"),Ae(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,a){typeof this.curls[e]>"u"&&(this.curls[e]=[]),this.curls[e].push([t,a])}direction(e,t,a){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,a])}weight(e,t){this.weights[e]=t;const a=this.weights.reduce((n,r)=>n+r,0);this.weightsRelative=this.weights.map(n=>n*5/a)}matchAgainst(e,t){let a=0;for(const n in e){const r=e[n],s=this.curls[n];if(typeof s>"u"){a+=this.weightsRelative[n];continue}for(const[i,o]of s)if(r===i){a+=o*this.weightsRelative[n];break}}for(const n in t){const r=t[n],s=this.directions[n];if(typeof s>"u"){a+=this.weightsRelative[n];continue}for(const[i,o]of s)if(r===i){a+=o*this.weightsRelative[n];break}}return a/10}},{thumb:_n,index:yr,middle:xr,ring:zo,pinky:Lo}=Ba,{none:$n,half:A0e,full:Mn}=sl,{verticalUp:xu,horizontalLeft:E2,horizontalRight:b0e,diagonalUpRight:v0e,diagonalUpLeft:Au}=Ct,Lr=new up("thumbs up");Lr.curl(_n,$n,1);Lr.direction(_n,xu,1);Lr.direction(_n,Au,.25);Lr.direction(_n,v0e,.25);for(const e of[Ba.index,Ba.middle,Ba.ring,Ba.pinky])Lr.curl(e,Mn,1),Lr.direction(e,E2,1),Lr.direction(e,b0e,1);var Ot=new up("victory");Ot.curl(_n,A0e,.5);Ot.curl(_n,$n,.5);Ot.direction(_n,xu,1);Ot.direction(_n,Au,1);Ot.curl(yr,$n,1);Ot.direction(yr,xu,.75);Ot.direction(yr,Au,1);Ot.curl(xr,$n,1);Ot.direction(xr,xu,1);Ot.direction(xr,Au,.75);Ot.curl(zo,Mn,1);Ot.direction(zo,xu,.2);Ot.direction(zo,Au,1);Ot.direction(zo,E2,.2);Ot.curl(Lo,Mn,1);Ot.direction(Lo,xu,.2);Ot.direction(Lo,Au,1);Ot.direction(Lo,E2,.2);Ot.weight(yr,2);Ot.weight(xr,2);var us=new up("point");us.curl(_n,Mn,1);us.curl(yr,$n,.5);us.curl(xr,Mn,.5);us.curl(zo,Mn,.5);us.curl(Lo,Mn,.5);us.weight(yr,2);us.weight(xr,2);var ds=new up("middle finger");ds.curl(_n,$n,1);ds.curl(yr,Mn,.5);ds.curl(xr,Mn,.5);ds.curl(zo,Mn,.5);ds.curl(Lo,Mn,.5);ds.weight(yr,2);ds.weight(xr,2);var bu=new up("open palm");bu.curl(_n,$n,.75);bu.curl(yr,$n,.75);bu.curl(xr,$n,.75);bu.curl(zo,$n,.75);bu.curl(Lo,$n,.75);var w0e=[Lr,Ot,us,ds,bu],k0e=.7,Cs={HALF_CURL_START_LIMIT:60,NO_CURL_START_LIMIT:130,DISTANCE_VOTE_POWER:1.1,SINGLE_ANGLE_VOTE_POWER:.9,TOTAL_ANGLE_VOTE_POWER:1.6};function yx(e,t,a,n){const r=(t-n)/(e-a);let s=Math.atan(r)*180/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function s4(e,t){if(!e||!t)return[0,0];const a=yx(e[0],e[1],t[0],t[1]);if(e.length===2)return a;const n=yx(e[1],e[2],t[1],t[2]);return[a,n]}function xx(e,t=1){let a=0,n=0,r=0;return e>=75&&e<=105?a=1*t:e>=25&&e<=155?n=1*t:r=1*t,[a,n,r]}function I0e(e,t,a){const n=e[0]-t[0],r=e[0]-a[0],s=t[0]-a[0],i=e[1]-t[1],o=e[1]-a[1],u=t[1]-a[1],d=e[2]-t[2],l=e[2]-a[2],p=t[2]-a[2],c=Math.sqrt(n*n+i*i+d*d),h=Math.sqrt(r*r+o*o+l*l),f=Math.sqrt(s*s+u*u+p*p);let m=(f*f+c*c-h*h)/(2*f*c);m>1?m=1:m<-1&&(m=-1);let g=Math.acos(m);g=57.2958*g%180;let y;return g>Cs.NO_CURL_START_LIMIT?y=sl.none:g>Cs.HALF_CURL_START_LIMIT?y=sl.half:y=sl.full,y}function i4(e,t,a,n){let r;return n===Math.abs(e)?e>0?r=Ct.horizontalLeft:r=Ct.horizontalRight:n===Math.abs(t)?t>0?r=Ct.horizontalLeft:r=Ct.horizontalRight:a>0?r=Ct.horizontalLeft:r=Ct.horizontalRight,r}function o4(e,t,a,n){let r;return n===Math.abs(e)?e<0?r=Ct.verticalDown:r=Ct.verticalUp:n===Math.abs(t)?t<0?r=Ct.verticalDown:r=Ct.verticalUp:a<0?r=Ct.verticalDown:r=Ct.verticalUp,r}function S0e(e,t,a,n,r,s,i,o){let u;const d=o4(e,t,a,n),l=i4(r,s,i,o);return d===Ct.verticalUp?l===Ct.horizontalLeft?u=Ct.diagonalUpLeft:u=Ct.diagonalUpRight:l===Ct.horizontalLeft?u=Ct.diagonalDownLeft:u=Ct.diagonalDownRight,u}function C0e(e,t,a,n){const r=e[0]-t[0],s=e[0]-a[0],i=t[0]-a[0],o=e[1]-t[1],u=e[1]-a[1],d=t[1]-a[1],l=Math.max(Math.abs(r),Math.abs(s),Math.abs(i)),p=Math.max(Math.abs(o),Math.abs(u),Math.abs(d));let c=0,h=0,f=0;const m=p/(l+1e-5);m>1.5?c+=Cs.DISTANCE_VOTE_POWER:m>.66?h+=Cs.DISTANCE_VOTE_POWER:f+=Cs.DISTANCE_VOTE_POWER;const g=Math.sqrt(r*r+o*o),y=Math.sqrt(s*s+u*u),x=Math.sqrt(i*i+d*d),A=Math.max(g,y,x);let b=e[0],w=e[1],S=a[0],N=a[1];A===g?(S=a[0],N=a[1]):A===x&&(b=t[0],w=t[1]);const P=s4([b,w],[S,N]),E=xx(P,Cs.TOTAL_ANGLE_VOTE_POWER);c+=E[0],h+=E[1],f+=E[2];for(const F of n){const $=xx(F,Cs.SINGLE_ANGLE_VOTE_POWER);c+=$[0],h+=$[1],f+=$[2]}let I;return c===Math.max(c,h,f)?I=o4(u,o,d,p):f===Math.max(h,f)?I=i4(s,r,i,l):I=S0e(u,o,d,p,s,r,i,l),I}function l4(e){const t=[],a=[],n=[];if(!e)return{curls:a,directions:n};for(const r of Ba.all){const s=Ba.getPoints(r),i=[],o=[];for(const u of s){const d=e[u[0]],l=e[u[1]],p=s4(d,l),c=p[0],h=p[1];i.push(c),o.push(h)}t.push(i)}for(const r of Ba.all){const s=r===Ba.thumb?1:0,i=Ba.getPoints(r),o=e[i[s][0]],u=e[i[s+1][1]],d=e[i[3][1]],l=I0e(o,u,d),p=C0e(o,u,d,t[r].slice(s));a[r]=l,n[r]=p}return{curls:a,directions:n}}function u4(e){if(!e||e.length===0)return null;const t=l4(e),a={};for(const n of Ba.all)a[Ba.getName(n)]={curl:sl.getName(t.curls[n]),direction:Ct.getName(t.directions[n])};return a}function N0e(e){const t=[];if(!e||e.length===0)return t;const a=l4(e);for(const n of w0e){const r=n.matchAgainst(a.curls,a.directions);r>=k0e&&t.push({name:n.name,confidence:r})}return t}var T0e=e=>{if(!e)return[];const t=[];for(let a=0;a<e.length;a++){const n=e[a].keypoints.find(u=>u.part==="leftWrist"),r=e[a].keypoints.find(u=>u.part==="rightWrist"),s=e[a].keypoints.find(u=>u.part==="nose");s&&n&&r&&n.position[1]<s.position[1]&&r.position[1]<s.position[1]?t.push({body:a,gesture:"i give up"}):s&&n&&n.position[1]<s.position[1]?t.push({body:a,gesture:"raise left hand"}):s&&r&&r.position[1]<s.position[1]&&t.push({body:a,gesture:"raise right hand"});const i=e[a].keypoints.find(u=>u.part==="leftShoulder"),o=e[a].keypoints.find(u=>u.part==="rightShoulder");i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:a,gesture:`leaning ${i.position[1]>o.position[1]?"left":"right"}`})}return t},R0e=e=>{if(!e)return[];const t=[];for(let a=0;a<e.length;a++)if(e[a].mesh&&e[a].mesh.length>450){const n=(e[a].mesh[33][2]||0)-(e[a].mesh[263][2]||0),r=e[a].mesh[33][0]-e[a].mesh[263][0];Math.abs(n/r)<=.15?t.push({face:a,gesture:"facing center"}):t.push({face:a,gesture:`facing ${n<0?"left":"right"}`}),Math.abs(e[a].mesh[374][1]-e[a].mesh[386][1])/Math.abs(e[a].mesh[443][1]-e[a].mesh[450][1])<.2&&t.push({face:a,gesture:"blink left eye"}),Math.abs(e[a].mesh[145][1]-e[a].mesh[159][1])/Math.abs(e[a].mesh[223][1]-e[a].mesh[230][1])<.2&&t.push({face:a,gesture:"blink right eye"});const o=Math.min(100,500*Math.abs(e[a].mesh[13][1]-e[a].mesh[14][1])/Math.abs(e[a].mesh[10][1]-e[a].mesh[152][1]));o>10&&t.push({face:a,gesture:`mouth ${Math.trunc(o)}% open`});const u=e[a].mesh[152][2]||0;Math.abs(u)>10&&t.push({face:a,gesture:`head ${u<0?"up":"down"}`})}return t},E0e=e=>{var t,a,n,r;if(!e)return[];const s=[];for(let i=0;i<e.length;i++){if(!((a=(t=e[i].annotations)==null?void 0:t.leftEyeIris)!=null&&a[0])||!((r=(n=e[i].annotations)==null?void 0:n.rightEyeIris)!=null&&r[0]))continue;const o=e[i].annotations.leftEyeIris[3][0]-e[i].annotations.leftEyeIris[1][0],u=e[i].annotations.leftEyeIris[4][1]-e[i].annotations.leftEyeIris[2][1],d=Math.abs(o*u),l=e[i].annotations.rightEyeIris[3][0]-e[i].annotations.rightEyeIris[1][0],p=e[i].annotations.rightEyeIris[4][1]-e[i].annotations.rightEyeIris[2][1],c=Math.abs(l*p);let h=!1;Math.abs(d-c)/Math.max(d,c)<.25&&(h=!0,s.push({iris:i,gesture:"facing center"}));const m=Math.abs(e[i].mesh[263][0]-e[i].annotations.leftEyeIris[0][0])/e[i].box[2],g=Math.abs(e[i].mesh[33][0]-e[i].annotations.rightEyeIris[0][0])/e[i].box[2];(m>.06||g>.06)&&(h=!1),m>g?g>.04&&s.push({iris:i,gesture:"looking right"}):m>.04&&s.push({iris:i,gesture:"looking left"});const y=Math.abs(e[i].mesh[145][1]-e[i].annotations.rightEyeIris[0][1])/e[i].box[3],x=Math.abs(e[i].mesh[374][1]-e[i].annotations.leftEyeIris[0][1])/e[i].box[3];(x<.01||y<.01||x>.022||y>.022)&&(h=!1),(x<.01||y<.01)&&s.push({iris:i,gesture:"looking down"}),(x>.022||y>.022)&&s.push({iris:i,gesture:"looking up"}),h&&s.push({iris:i,gesture:"looking center"})}return s},_0e=e=>{if(!e)return[];const t=[];for(let a=0;a<e.length;a++){const n=[];if(e[a].annotations)for(const[r,s]of Object.entries(e[a].annotations))r!=="palmBase"&&Array.isArray(s)&&s[0]&&n.push({name:r.toLowerCase(),position:s[0]});if(n&&n.length>0){const r=n.reduce((i,o)=>(i.position[2]||0)<(o.position[2]||0)?i:o);t.push({hand:a,gesture:`${r.name} forward`});const s=n.reduce((i,o)=>i.position[1]<o.position[1]?i:o);t.push({hand:a,gesture:`${s.name} up`})}if(e[a].keypoints){const r=N0e(e[a].keypoints);for(const s of r)t.push({hand:a,gesture:s.name})}}return t};function _2(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function Mc(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function $0e(e,t,a){const n=t.shape[1],r=t.shape[2],s=[[e.startPoint[1]/n,e.startPoint[0]/r,e.endPoint[1]/n,e.endPoint[0]/r]];return Pe.cropAndResize(t,s,[0],a)}function M0e(e,t){const a=[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],n=[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],r=e.palmLandmarks.map(s=>[s[0]*t[0],s[1]*t[1]]);return{startPoint:a,endPoint:n,palmLandmarks:r,confidence:e.confidence}}function cf(e,t=1.5){const a=Mc(e),n=_2(e),r=[t*n[0]/2,t*n[1]/2],s=[a[0]-r[0],a[1]-r[1]],i=[a[0]+r[0],a[1]+r[1]];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function hf(e){const t=Mc(e),a=_2(e),r=Math.max(...a)/2,s=[t[0]-r,t[1]-r],i=[t[0]+r,t[1]+r];return{startPoint:s,endPoint:i,palmLandmarks:e.palmLandmarks}}function F0e(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function P0e(e,t){const a=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return F0e(a)}var Ax=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function Ks(e,t){let a=0;for(let n=0;n<e.length;n++)a+=e[n]*t[n];return a}function O0e(e,t){const a=[];for(let n=0;n<e.length;n++)a.push(e[n][t]);return a}function bx(e,t){const a=[],n=e.length;for(let r=0;r<n;r++){a.push([]);for(let s=0;s<n;s++)a[r].push(Ks(e[r],O0e(t,s)))}return a}function vx(e,t){const a=Math.cos(e),n=Math.sin(e),r=[[a,-n,0],[n,a,0],[0,0,1]],s=Ax(t[0],t[1]),i=bx(s,r),o=Ax(-t[0],-t[1]);return bx(i,o)}function D0e(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],a=[e[0][2],e[1][2]],n=[-Ks(t[0],a),-Ks(t[1],a)];return[t[0].concat(n[0]),t[1].concat(n[1]),[0,0,1]]}function wx(e,t){return[Ks(e,t[0]),Ks(e,t[1])]}var z0e=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],L0e=class{constructor(e){Ae(this,"model"),Ae(this,"anchors"),Ae(this,"anchorsTensor"),Ae(this,"inputSize"),Ae(this,"inputSizeTensor"),Ae(this,"doubleInputSizeTensor");var t,a,n,r;this.model=e,this.anchors=z0e.map(s=>[s.x,s.y]),this.anchorsTensor=Or(this.anchors),this.inputSize=((r=(n=(a=(t=this==null?void 0:this.model)==null?void 0:t.inputs)==null?void 0:a[0])==null?void 0:n.shape)==null?void 0:r[2])||0,this.inputSizeTensor=Qt([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Qt([this.inputSize*2,this.inputSize*2])}normalizeBoxes(e){const t={};t.boxOffsets=We(e,[0,0],[-1,2]),t.boxSizes=We(e,[0,2],[-1,2]),t.div=Te(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=Ie(t.div,this.anchorsTensor),t.halfBoxSizes=Te(t.boxSizes,this.doubleInputSizeTensor),t.sub=ke(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=te(t.sub,this.inputSizeTensor),t.add=Ie(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=te(t.add,this.inputSizeTensor);const a=Gc([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(n=>ae(t[n])),a}normalizeLandmarks(e,t){const a={};a.reshape=Z(e,[-1,7,2]),a.div=Te(a.reshape,this.inputSizeTensor),a.landmarks=Ie(a.div,this.anchors[t]?this.anchors[t]:0);const n=te(a.landmarks,this.inputSizeTensor);return Object.keys(a).forEach(r=>ae(a[r])),n}async predict(e,t){var a;const n={};n.resize=Pe.resizeBilinear(e,[this.inputSize,this.inputSize]),n.div=Te(n.resize,nt.tf127),n.image=ke(n.div,nt.tf1),n.batched=this.model.execute(n.image),n.predictions=Ze(n.batched),n.slice=We(n.predictions,[0,0],[-1,1]),n.sigmoid=Cn(n.slice),n.scores=Ze(n.sigmoid);const r=await n.scores.data();n.boxes=We(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await Pe.nonMaxSuppressionAsync(n.norm,n.scores,3*(((a=t.hand)==null?void 0:a.maxDetected)||1),t.hand.iouThreshold,t.hand.minConfidence);const s=await n.nms.array(),i=[];for(const o of s){const u={};u.box=We(n.norm,[o,0],[1,-1]),u.slice=We(n.predictions,[o,5],[1,14]),u.norm=this.normalizeLandmarks(u.slice,o),u.palmLandmarks=Z(u.norm,[-1,2]);const d=await u.box.data(),l=d.slice(0,2),p=d.slice(2,4),c=await u.palmLandmarks.array(),h={startPoint:l,endPoint:p,palmLandmarks:c,confidence:r[o]},f=M0e(h,[(e.shape[2]||1)/this.inputSize,(e.shape[1]||0)/this.inputSize]);i.push(f),Object.keys(u).forEach(m=>ae(u[m]))}return Object.keys(n).forEach(o=>ae(n[o])),i}},W0e=5,kx=1.65,Ix=[0,5,9,13,17,1,2],B0e=0,V0e=2,Sx=0,U0e=class{constructor(e,t){Ae(this,"handDetector"),Ae(this,"handPoseModel"),Ae(this,"inputSize"),Ae(this,"storedBoxes"),Ae(this,"skipped"),Ae(this,"detectedHands");var a,n,r;this.handDetector=e,this.handPoseModel=t,this.inputSize=((r=(n=(a=this.handPoseModel)==null?void 0:a.inputs)==null?void 0:n[0].shape)==null?void 0:r[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map(s=>s[0]),a=e.map(s=>s[1]),n=[Math.min(...t),Math.min(...a)],r=[Math.max(...t),Math.max(...a)];return{startPoint:n,endPoint:r}}getBoxForPalmLandmarks(e,t){const a=e.map(r=>wx([...r,1],t)),n=this.calculateLandmarksBoundingBox(a);return cf(hf(n),W0e)}getBoxForHandLandmarks(e){const t=this.calculateLandmarksBoundingBox(e),a=cf(hf(t),kx);a.palmLandmarks=[];for(let n=0;n<Ix.length;n++)a.palmLandmarks.push(e[Ix[n]].slice(0,2));return a}transformRawCoords(e,t,a,n){const r=_2(t),s=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],i=e.map(c=>[s[0]*(c[0]-this.inputSize/2),s[1]*(c[1]-this.inputSize/2),s[2]*c[2]]),o=vx(a,[0,0]),u=i.map(c=>[...wx(c,o),c[2]]),d=D0e(n),l=[...Mc(t),1],p=[Ks(l,d[0]),Ks(l,d[1])];return u.map(c=>[Math.trunc(c[0]+p[0]),Math.trunc(c[1]+p[1]),Math.trunc(c[2])])}async estimateHands(e,t){let a=!1,n;const r=(t.hand.skipTime||0)>ne()-Sx,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&s?this.skipped++:(n=await this.handDetector.predict(e,t),this.skipped=0),n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(a=!0));const i=[];for(let o=0;o<this.storedBoxes.length;o++){const u=this.storedBoxes[o];if(u)if(t.hand.landmarks){const d=t.hand.rotation?P0e(u.palmLandmarks[B0e],u.palmLandmarks[V0e]):0,l=Mc(u),p=[l[0]/e.shape[2],l[1]/e.shape[1]],c=t.hand.rotation&&de.kernels.includes("rotatewithoffset")?Pe.rotateWithOffset(e,d,0,p):e.clone(),h=vx(-d,l),f=a?this.getBoxForPalmLandmarks(u.palmLandmarks,h):u,m=$0e(f,c,[this.inputSize,this.inputSize]),g=Te(m,nt.tf255);ae(m),ae(c);const[y,x]=this.handPoseModel.execute(g);Sx=ne(),ae(g);const A=(await y.data())[0];if(ae(y),A>=t.hand.minConfidence/4){const b=Z(x,[-1,3]),w=await b.array();ae(x),ae(b);const S=this.transformRawCoords(w,f,d,h),N=this.getBoxForHandLandmarks(S);this.storedBoxes[o]={...N,confidence:A};const T={landmarks:S,confidence:A,boxConfidence:u.confidence,fingerConfidence:A,box:{topLeft:N.startPoint,bottomRight:N.endPoint}};i.push(T)}else this.storedBoxes[o]=null;ae(x)}else{const d=cf(hf(u),kx),l={confidence:u.confidence,boxConfidence:u.confidence,fingerConfidence:0,box:{topLeft:d.startPoint,bottomRight:d.endPoint},landmarks:[]};i.push(l)}}return this.storedBoxes=this.storedBoxes.filter(o=>o!==null),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}},Cx={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]},Ns,Ts,I0;function G0e(){const e=Ns?new L0e(Ns):void 0;e&&Ts&&(I0=new U0e(e,Ts))}async function Nx(e,t){I0||G0e();const a=await I0.estimateHands(e,t);if(!a)return[];const n=[];for(let r=0;r<a.length;r++){const s={};if(a[r].landmarks)for(const l of Object.keys(Cx))s[l]=Cx[l].map(p=>a[r].landmarks[p]);const i=a[r].landmarks;let o=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],u=[0,0,0,0];if(i&&i.length>0){for(const l of i)l[0]<o[0]&&(o[0]=l[0]),l[1]<o[1]&&(o[1]=l[1]),l[0]>o[2]&&(o[2]=l[0]),l[1]>o[3]&&(o[3]=l[1]);o[2]-=o[0],o[3]-=o[1],u=[o[0]/(e.shape[2]||0),o[1]/(e.shape[1]||0),o[2]/(e.shape[2]||0),o[3]/(e.shape[1]||0)]}else o=a[r].box?[Math.trunc(Math.max(0,a[r].box.topLeft[0])),Math.trunc(Math.max(0,a[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,a[r].box.bottomRight[0])-Math.max(0,a[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,a[r].box.bottomRight[1])-Math.max(0,a[r].box.topLeft[1]))]:[0,0,0,0],u=[a[r].box.topLeft[0]/(e.shape[2]||0),a[r].box.topLeft[1]/(e.shape[1]||0),(a[r].box.bottomRight[0]-a[r].box.topLeft[0])/(e.shape[2]||0),(a[r].box.bottomRight[1]-a[r].box.topLeft[1])/(e.shape[1]||0)];const d=u4(i);n.push({id:r,score:Math.round(100*a[r].confidence)/100,boxScore:Math.round(100*a[r].boxConfidence)/100,fingerScore:Math.round(100*a[r].fingerConfidence)/100,label:"hand",box:o,boxRaw:u,keypoints:i,annotations:s,landmarks:d})}return n}async function H0e(e){var t;return de.initial&&(Ns=null),Ns?e.debug&&Q("cached model:",Ns.modelUrl):Ns=await gt((t=e.hand.detector)==null?void 0:t.modelPath),Ns}async function j0e(e){var t;return de.initial&&(Ts=null),Ts?e.debug&&Q("cached model:",Ts.modelUrl):Ts=await gt((t=e.hand.skeleton)==null?void 0:t.modelPath),Ts}var Nt=[null,null],q0e=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],Fr=[[0,0],[0,0]],X0e=["hand","fist","pinch","point","face","tip","pinchtip"],Tx=4,Rx=1.6,K0e=512,Y0e=1.4,Up=Number.MAX_SAFE_INTEGER,ff=0,nr=[0,0],St={boxes:[],hands:[]},Ex={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function Z0e(e){var t;if(de.initial&&(Nt[0]=null),Nt[0])e.debug&&Q("cached model:",Nt[0].modelUrl);else{W6(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),Nt[0]=await gt((t=e.hand.detector)==null?void 0:t.modelPath);const a=Nt[0].executor?Object.values(Nt[0].modelSignature.inputs):void 0;Fr[0][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,Fr[0][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return Nt[0]}async function J0e(e){var t;if(de.initial&&(Nt[1]=null),Nt[1])e.debug&&Q("cached model:",Nt[1].modelUrl);else{Nt[1]=await gt((t=e.hand.skeleton)==null?void 0:t.modelPath);const a=Nt[1].executor?Object.values(Nt[1].modelSignature.inputs):void 0;Fr[1][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,Fr[1][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0}return Nt[1]}async function Q0e(e,t){const a=[];if(!e||!Nt[0])return a;const n={},r=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(Math.round((e.shape[1]||0)/8)*8,K0e),i=Math.round(s*r/8)*8;n.resize=Pe.resizeBilinear(e,[s,i]),n.cast=qe(n.resize,"int32"),[n.rawScores,n.rawBoxes]=await Nt[0].executeAsync(n.cast,q0e),n.boxes=Ze(n.rawBoxes,[0,2]),n.scores=Ze(n.rawScores,[0]);const o=gn(n.scores,1);ae(o[Tx]),o.splice(Tx,1),n.filtered=Ua(o,1),ae(o),n.max=tn(n.filtered,1),n.argmax=su(n.filtered,1);let u=0;n.nms=await Pe.nonMaxSuppressionAsync(n.boxes,n.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const d=await n.nms.data(),l=await n.max.data(),p=await n.argmax.data();for(const c of Array.from(d)){const h=We(n.boxes,c,1),f=await h.data();ae(h);const m=[f[1],f[0],f[3]-f[1],f[2]-f[0]],g=A0(m,Y0e),y=[Math.trunc(m[0]*nr[0]),Math.trunc(m[1]*nr[1]),Math.trunc(m[2]*nr[0]),Math.trunc(m[3]*nr[1])],x=l[c],A=X0e[p[c]],b={id:u++,score:x,box:y,boxRaw:g,label:A};a.push(b)}return Object.keys(n).forEach(c=>ae(n[c])),a.sort((c,h)=>h.score-c.score),a.length>(t.hand.maxDetected||1)&&(a.length=t.hand.maxDetected||1),a}async function mf(e,t,a){const n={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&Nt[1]&&a.hand.landmarks&&t.score>(a.hand.minConfidence||0)){const r={},s=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=Pe.cropAndResize(e,[s],[0],[Fr[1][0],Fr[1][1]],"bilinear"),r.div=Te(r.crop,nt.tf255),[r.score,r.keypoints]=Nt[1].execute(r.div,["Identity_1","Identity"]);const i=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(i))))/100;if(o>=(a.hand.minConfidence||0)){n.fingerScore=o,r.reshaped=Z(r.keypoints,[-1,3]);const l=(await r.reshaped.array()).map(p=>[p[0]/Fr[1][1],p[1]/Fr[1][0],p[2]||0]).map(p=>[p[0]*t.boxRaw[2],p[1]*t.boxRaw[3],p[2]||0]);n.keypoints=l.map(p=>[nr[0]*(p[0]+t.boxRaw[0]),nr[1]*(p[1]+t.boxRaw[1]),p[2]||0]),n.landmarks=u4(n.keypoints);for(const p of Object.keys(Ex))n.annotations[p]=Ex[p].map(c=>n.landmarks&&n.keypoints[c]?n.keypoints[c]:null)}Object.keys(r).forEach(u=>ae(r[u]))}return n}async function _x(e,t){var a,n;if(!((a=Nt[0])!=null&&a.executor)||!((n=Nt[1])!=null&&n.executor)||!Nt[0].inputs[0].shape||!Nt[1].inputs[0].shape)return[];nr=[e.shape[2]||0,e.shape[1]||0],Up++;const r=(t.hand.skipTime||0)>ne()-ff,s=Up<(t.hand.skipFrames||0);return t.skipAllowed&&r&&s?St.hands:new Promise(async i=>{const o=3*(t.hand.skipTime||0)>ne()-ff,u=Up<3*(t.hand.skipFrames||0);t.skipAllowed&&St.hands.length===t.hand.maxDetected?St.hands=await Promise.all(St.boxes.map(l=>mf(e,l,t))):t.skipAllowed&&o&&u&&St.hands.length>0?St.hands=await Promise.all(St.boxes.map(l=>mf(e,l,t))):(St.boxes=await Q0e(e,t),ff=ne(),St.hands=await Promise.all(St.boxes.map(l=>mf(e,l,t))),Up=0);const d=[...St.boxes];if(St.boxes.length=0,t.cacheSensitivity>0)for(let l=0;l<St.hands.length;l++){const p=vfe(St.hands[l].keypoints,nr);if(p.box[2]/(e.shape[2]||1)>.05&&p.box[3]/(e.shape[1]||1)>.05&&St.hands[l].fingerScore&&St.hands[l].fingerScore>(t.hand.minConfidence||0)){const c=A0(p.box,Rx),h=A0(p.boxRaw,Rx);St.boxes.push({...d[l],box:c,boxRaw:h})}}for(let l=0;l<St.hands.length;l++){const p=wh(St.hands[l].keypoints,nr);St.hands[l].box=p.box,St.hands[l].boxRaw=p.boxRaw}i(St.hands)})}var il=(e=null)=>({face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,width:0,height:0,error:e}),d4={};Jr(d4,{connected:()=>M2,horizontal:()=>p4,kpt:()=>$2,relative:()=>h4,vertical:()=>c4});var $2=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],p4=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],c4=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],h4=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],M2={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},ge=il(),gf=0;function eme(e,t){var a,n,r,s,i,o,u,d,l,p,c,h,f,m,g,y,x,A,b,w,S,N,T,_,P,E;const I=ne();if(!e)return il();const F=Date.now()-e.timestamp,$=F<1e3?8-Math.log(F+1):1;if(e.canvas&&(ge.canvas=e.canvas),e.error&&(ge.error=e.error),!ge.body||e.body.length!==ge.body.length)ge.body=JSON.parse(JSON.stringify(e.body));else for(let M=0;M<e.body.length;M++){const H=e.body[M].box.map((K,X)=>(($-1)*ge.body[M].box[X]+K)/$),V=e.body[M].boxRaw.map((K,X)=>(($-1)*ge.body[M].boxRaw[X]+K)/$),q=e.body[M].keypoints.map((K,X)=>{var J,ee,ye,xe,le,Se,Re,Me,Oe;return{score:K.score,part:K.part,position:[ge.body[M].keypoints[X]?(($-1)*(ge.body[M].keypoints[X].position[0]||0)+(K.position[0]||0))/$:K.position[0],ge.body[M].keypoints[X]?(($-1)*(ge.body[M].keypoints[X].position[1]||0)+(K.position[1]||0))/$:K.position[1],ge.body[M].keypoints[X]?(($-1)*(ge.body[M].keypoints[X].position[2]||0)+(K.position[2]||0))/$:K.position[2]],positionRaw:[ge.body[M].keypoints[X]?(($-1)*(ge.body[M].keypoints[X].positionRaw[0]||0)+(K.positionRaw[0]||0))/$:K.positionRaw[0],ge.body[M].keypoints[X]?(($-1)*(ge.body[M].keypoints[X].positionRaw[1]||0)+(K.positionRaw[1]||0))/$:K.positionRaw[1],ge.body[M].keypoints[X]?(($-1)*(ge.body[M].keypoints[X].positionRaw[2]||0)+(K.positionRaw[2]||0))/$:K.positionRaw[2]],distance:[ge.body[M].keypoints[X]?(($-1)*(((J=ge.body[M].keypoints[X].distance)==null?void 0:J[0])||0)+(((ee=K.distance)==null?void 0:ee[0])||0))/$:(ye=K.distance)==null?void 0:ye[0],ge.body[M].keypoints[X]?(($-1)*(((xe=ge.body[M].keypoints[X].distance)==null?void 0:xe[1])||0)+(((le=K.distance)==null?void 0:le[1])||0))/$:(Se=K.distance)==null?void 0:Se[1],ge.body[M].keypoints[X]?(($-1)*(((Re=ge.body[M].keypoints[X].distance)==null?void 0:Re[2])||0)+(((Me=K.distance)==null?void 0:Me[2])||0))/$:(Oe=K.distance)==null?void 0:Oe[2]]}}),G={};let B={connected:{}};(a=t.body.modelPath)!=null&&a.includes("efficientpose")?B=Q6:(n=t.body.modelPath)!=null&&n.includes("blazepose")?B=K6:(r=t.body.modelPath)!=null&&r.includes("movenet")&&(B=d4);for(const[K,X]of Object.entries(B.connected)){const J=[];for(let ee=0;ee<X.length-1;ee++){const ye=q.find(le=>le.part===X[ee]),xe=q.find(le=>le.part===X[ee+1]);ye&&xe&&J.push([ye.position,xe.position])}G[K]=J}ge.body[M]={...e.body[M],box:H,boxRaw:V,keypoints:q,annotations:G}}if(!ge.hand||e.hand.length!==ge.hand.length)ge.hand=JSON.parse(JSON.stringify(e.hand));else for(let M=0;M<e.hand.length;M++){const H=e.hand[M].box.map((B,K)=>(($-1)*ge.hand[M].box[K]+B)/$),V=e.hand[M].boxRaw.map((B,K)=>(($-1)*ge.hand[M].boxRaw[K]+B)/$);ge.hand[M].keypoints.length!==e.hand[M].keypoints.length&&(ge.hand[M].keypoints=e.hand[M].keypoints);const q=e.hand[M].keypoints&&e.hand[M].keypoints.length>0?e.hand[M].keypoints.map((B,K)=>B.map((X,J)=>(($-1)*(ge.hand[M].keypoints[K][J]||1)+(X||0))/$)):[];let G={};if(Object.keys(ge.hand[M].annotations).length!==Object.keys(e.hand[M].annotations).length)ge.hand[M].annotations=e.hand[M].annotations,G=ge.hand[M].annotations;else if(e.hand[M].annotations)for(const B of Object.keys(e.hand[M].annotations))G[B]=(o=(i=(s=e.hand[M])==null?void 0:s.annotations)==null?void 0:i[B])!=null&&o[0]?e.hand[M].annotations[B].map((K,X)=>K.map((J,ee)=>(($-1)*ge.hand[M].annotations[B][X][ee]+J)/$)):null;ge.hand[M]={...e.hand[M],box:H,boxRaw:V,keypoints:q,annotations:G}}if(!ge.face||e.face.length!==ge.face.length)ge.face=JSON.parse(JSON.stringify(e.face));else for(let M=0;M<e.face.length;M++){const H=e.face[M].box.map((G,B)=>(($-1)*ge.face[M].box[B]+G)/$),V=e.face[M].boxRaw.map((G,B)=>(($-1)*ge.face[M].boxRaw[B]+G)/$);let q=e.face[M].annotations;if(Object.keys(ge.face[M].annotations).length!==Object.keys(e.face[M].annotations).length)ge.face[M].annotations=e.face[M].annotations,q=ge.face[M].annotations;else if(e.face[M].annotations)for(const G of Object.keys(e.face[M].annotations))q[G]=(l=(d=(u=e.face[M])==null?void 0:u.annotations)==null?void 0:d[G])!=null&&l[0]?e.face[M].annotations[G].map((B,K)=>B.map((X,J)=>(($-1)*ge.face[M].annotations[G][K][J]+X)/$)):null;if(e.face[M].rotation){const G={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};G.matrix=(p=e.face[M].rotation)==null?void 0:p.matrix,G.angle={roll:(($-1)*(((h=(c=ge.face[M].rotation)==null?void 0:c.angle)==null?void 0:h.roll)||0)+(((m=(f=e.face[M].rotation)==null?void 0:f.angle)==null?void 0:m.roll)||0))/$,yaw:(($-1)*(((y=(g=ge.face[M].rotation)==null?void 0:g.angle)==null?void 0:y.yaw)||0)+(((A=(x=e.face[M].rotation)==null?void 0:x.angle)==null?void 0:A.yaw)||0))/$,pitch:(($-1)*(((w=(b=ge.face[M].rotation)==null?void 0:b.angle)==null?void 0:w.pitch)||0)+(((N=(S=e.face[M].rotation)==null?void 0:S.angle)==null?void 0:N.pitch)||0))/$},G.gaze={bearing:(($-1)*(((T=ge.face[M].rotation)==null?void 0:T.gaze.bearing)||0)+(((_=e.face[M].rotation)==null?void 0:_.gaze.bearing)||0))/$,strength:(($-1)*(((P=ge.face[M].rotation)==null?void 0:P.gaze.strength)||0)+(((E=e.face[M].rotation)==null?void 0:E.gaze.strength)||0))/$},ge.face[M]={...e.face[M],rotation:G,box:H,boxRaw:V,annotations:q}}else ge.face[M]={...e.face[M],box:H,boxRaw:V,annotations:q}}if(!ge.object||e.object.length!==ge.object.length)ge.object=JSON.parse(JSON.stringify(e.object));else for(let M=0;M<e.object.length;M++){const H=e.object[M].box.map((q,G)=>(($-1)*ge.object[M].box[G]+q)/$),V=e.object[M].boxRaw.map((q,G)=>(($-1)*ge.object[M].boxRaw[G]+q)/$);ge.object[M]={...e.object[M],box:H,boxRaw:V}}if(e.persons){const M=e.persons;if(!ge.persons||M.length!==ge.persons.length)ge.persons=JSON.parse(JSON.stringify(M));else for(let H=0;H<M.length;H++)ge.persons[H].box=M[H].box.map((V,q)=>(($-1)*ge.persons[H].box[q]+V)/$)}e.gesture&&(ge.gesture=e.gesture),ge.width=e.width,ge.height=e.height;const z=ne();return gf=de.perfadd?gf+Math.round(z-I):Math.round(z-I),e.performance&&(ge.performance={...e.performance,interpolate:gf}),ge}var ba;async function f4(e){return!ba||de.initial?ba=await gt(e.segmentation.modelPath):e.debug&&Q("cached model:",ba.modelUrl),ba}async function tme(e,t){var a;if(ba||(ba=await f4(t)),!(ba!=null&&ba.executor)||!((a=ba==null?void 0:ba.inputs)!=null&&a[0].shape))return null;const n={};n.resize=Pe.resizeBilinear(e,[ba.inputs[0].shape?ba.inputs[0].shape[1]:0,ba.inputs[0].shape?ba.inputs[0].shape[2]:0],!1),n.norm=Te(n.resize,nt.tf255),n.res=ba.execute(n.norm),n.squeeze=Ze(n.res,[0]),[n.bgRaw,n.fgRaw]=gn(n.squeeze,2),n.fg=xm(n.fgRaw),n.mul=te(n.fg,nt.tf255),n.expand=ua(n.mul,2),n.output=Pe.resizeBilinear(n.expand,[e.shape[1]||0,e.shape[2]||0]);let r;switch(t.segmentation.mode||"default"){case"default":n.input=Ze(e),n.concat=ft([n.input,n.output],-1),r=qe(n.concat,"int32");break;case"alpha":r=qe(n.output,"int32");break;default:r=He(0)}return Object.keys(n).forEach(s=>ae(n[s])),r}var m4={};Jr(m4,{distance:()=>F2,find:()=>nme,similarity:()=>ame});function F2(e,t,a={order:2,multiplier:25}){if(!e||!e)return Number.MAX_SAFE_INTEGER;let n=0;for(let s=0;s<e.length;s++){const i=!a.order||a.order===2?e[s]-t[s]:Math.abs(e[s]-t[s]);n+=!a.order||a.order===2?i*i:i**a.order}return Math.round(100*(a.multiplier||20)*n)/100}var g4=(e,t,a,n)=>{if(e===0)return 1;const s=(1-(t===2?Math.sqrt(e):e**(1/t))/100-a)/(n-a);return Math.round(100*Math.max(Math.min(s,1),0))/100};function ame(e,t,a={order:2,multiplier:25,min:.2,max:.8}){const n=F2(e,t,a);return g4(n,a.order||2,a.min||0,a.max||1)}function nme(e,t,a={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||t.length===0)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let n=Number.MAX_SAFE_INTEGER,r=-1;for(let i=0;i<t.length;i++){const o=t[i].length===e.length?F2(e,t[i],a):Number.MAX_SAFE_INTEGER;if(o<n&&(n=o,r=i),n<(a.threshold||0))break}const s=g4(n,a.order||2,a.min||0,a.max||1);return{index:r,distance:n,similarity:s}}var rme={};Jr(rme,{Models:()=>I4,validateModel:()=>P2});var $x=.005,La={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function y4(e){for(const t of p4){const a=e.keypoints.findIndex(r=>r.part===t[0]),n=e.keypoints.findIndex(r=>r.part===t[1]);if(e.keypoints[a]&&e.keypoints[n]&&e.keypoints[a].position[0]<e.keypoints[n].position[0]){const r=e.keypoints[a];e.keypoints[a]=e.keypoints[n],e.keypoints[n]=r}}for(const t of c4){const a=e.keypoints.findIndex(r=>r&&r.part===t[0]),n=e.keypoints.findIndex(r=>r&&r.part===t[1]);e.keypoints[a]&&e.keypoints[n]&&e.keypoints[a].position[1]<e.keypoints[n].position[1]&&e.keypoints.splice(a,1)}for(const[t,a]of h4){const n=e.keypoints.findIndex(d=>d&&d.part===t[0]),r=e.keypoints.findIndex(d=>d&&d.part===t[1]),s=e.keypoints.findIndex(d=>d&&d.part===a[0]),i=e.keypoints.findIndex(d=>d&&d.part===a[1]);if(!e.keypoints[s]||!e.keypoints[i])continue;const o=e.keypoints[n]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[n].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[n].position[0])]:[0,0],u=e.keypoints[r]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0])]:[0,0];if(o[0]>o[1]||u[0]>u[1]){const d=e.keypoints[n];e.keypoints[n]=e.keypoints[r],e.keypoints[r]=d}}}function sme(e){for(let t=0;t<e.length;t++)if(e[t]&&La.keypoints[t]){const a=[Math.abs(e[t].positionRaw[0]-La.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-La.keypoints[t].positionRaw[1])];a[0]<$x&&a[1]<$x?e[t]=La.keypoints[t]:La.keypoints[t]=e[t]}else La.keypoints[t]=e[t];return e}function ime(e,t){var a,n;const r={};if(!((a=e==null?void 0:e.shape)!=null&&a[1])||!((n=e==null?void 0:e.shape)!=null&&n[2]))return e;La.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],r.pad=hr(e,La.padding),r.resize=Pe.resizeBilinear(r.pad,[t,t]);const s=qe(r.resize,"int32");return Object.keys(r).forEach(i=>ae(r[i])),s}function ome(e,t){e.keypoints=e.keypoints.filter(n=>n==null?void 0:n.position);for(const n of e.keypoints)n.position=[n.position[0]*(t[0]+La.padding[2][0]+La.padding[2][1])/t[0]-La.padding[2][0],n.position[1]*(t[1]+La.padding[1][0]+La.padding[1][1])/t[1]-La.padding[1][0]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1]];const a=wh(e.keypoints.map(n=>n.position),t);return e.box=a.box,e.boxRaw=a.boxRaw,e}var sa,ic=0,yf=Number.MAX_SAFE_INTEGER,gs={boxes:[],bodies:[],last:0};async function lme(e){var t;return de.initial&&(sa=null),sa?e.debug&&Q("cached model:",sa.modelUrl):(W6(["size"],e),sa=await gt(e.body.modelPath)),ic=sa!=null&&sa.executor&&((t=sa==null?void 0:sa.inputs)!=null&&t[0].shape)?sa.inputs[0].shape[2]:0,ic<64&&(ic=256),U().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&U().set("WEBGL_USE_SHAPES_UNIFORMS",!1),sa}function ume(e,t,a){const n=e[0][0],r=[];let s=0;for(let l=0;l<n.length;l++)if(s=n[l][2],s>t.body.minConfidence){const p=[n[l][1],n[l][0]];r.push({score:Math.round(100*s)/100,part:$2[l],positionRaw:p,position:[Math.round((a.shape[2]||0)*p[0]),Math.round((a.shape[1]||0)*p[1])]})}s=r.reduce((l,p)=>p.score>l?p.score:l,0);const i=[],o=wh(r.map(l=>l.position),[a.shape[2],a.shape[1]]),u={};for(const[l,p]of Object.entries(M2)){const c=[];for(let h=0;h<p.length-1;h++){const f=r.find(g=>g.part===p[h]),m=r.find(g=>g.part===p[h+1]);f&&m&&f.score>(t.body.minConfidence||0)&&m.score>(t.body.minConfidence||0)&&c.push([f.position,m.position])}u[l]=c}const d={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:r,annotations:u};return y4(d),i.push(d),i}function dme(e,t,a){const n=[];for(let r=0;r<e[0].length;r++){const s=e[0][r],i=Math.round(100*s[55])/100;if(i>t.body.minConfidence){const o=[];for(let c=0;c<17;c++){const h=s[3*c+2];if(h>t.body.minConfidence){const f=[s[3*c+1],s[3*c+0]];o.push({part:$2[c],score:Math.round(100*h)/100,positionRaw:f,position:[Math.round((a.shape[2]||0)*f[0]),Math.round((a.shape[1]||0)*f[1])]})}}const u=[s[52],s[51],s[54]-s[52],s[53]-s[51]],d=[Math.trunc(u[0]*(a.shape[2]||0)),Math.trunc(u[1]*(a.shape[1]||0)),Math.trunc(u[2]*(a.shape[2]||0)),Math.trunc(u[3]*(a.shape[1]||0))],l={};for(const[c,h]of Object.entries(M2)){const f=[];for(let m=0;m<h.length-1;m++){const g=o.find(x=>x.part===h[m]),y=o.find(x=>x.part===h[m+1]);g&&y&&g.score>(t.body.minConfidence||0)&&y.score>(t.body.minConfidence||0)&&f.push([g.position,y.position])}l[c]=f}const p={id:r,score:i,box:d,boxRaw:u,keypoints:[...o],annotations:l};y4(p),n.push(p)}}return n.sort((r,s)=>s.score-r.score),n.length>t.body.maxDetected&&(n.length=t.body.maxDetected),n}async function Mx(e,t){var a;if(!(sa!=null&&sa.executor)||!((a=sa==null?void 0:sa.inputs)!=null&&a[0].shape))return[];t.skipAllowed||(gs.boxes.length=0),yf++;const n=(t.body.skipTime||0)>ne()-gs.last,r=yf<(t.body.skipFrames||0);return t.skipAllowed&&n&&r?gs.bodies:new Promise(async s=>{const i={};yf=0,i.input=ime(e,ic),i.res=sa==null?void 0:sa.execute(i.input),gs.last=ne();const o=await i.res.array();gs.bodies=i.res.shape[2]===17?ume(o,t,e):dme(o,t,e);for(const u of gs.bodies)ome(u,[e.shape[2]||1,e.shape[1]||1]),sme(u.keypoints);Object.keys(i).forEach(u=>ae(i[u])),s(gs.bodies)})}var Dn,Gp=[],Fx=0,xf=Number.MAX_SAFE_INTEGER,Fc=0,Hp=2.5;async function pme(e){if(!Dn||de.initial){Dn=await gt(e.object.modelPath);const t=Dn!=null&&Dn.executor?Object.values(Dn.modelSignature.inputs):void 0;Fc=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):416}else e.debug&&Q("cached model:",Dn.modelUrl);return Dn}async function cme(e,t,a){var n,r;let s=0,i=[];const o=Fc;for(const p of[1,2,4]){const c=p*13,h=Ze(e.find(A=>A.shape[1]===c**2&&(A.shape[2]||0)===sc.length)),f=await h.array(),m=Ze(e.find(A=>A.shape[1]===c**2&&(A.shape[2]||0)<sc.length)),g=Z(m,[-1,4,(((n=m.shape)==null?void 0:n[1])||0)/4]),y=su(g,2),x=await y.array();for(let A=0;A<h.shape[0];A++)for(let b=0;b<(((r=h.shape)==null?void 0:r[1])||0);b++){const w=f[A][b];if(w>(a.object.minConfidence||0)&&b!==61){const S=(.5+Math.trunc(A%c))/c,N=(.5+Math.trunc(A/c))/c,T=x[A].map(M=>M*(c/p/o)),[_,P]=[S-Hp/p*T[0],N-Hp/p*T[1]],[E,I]=[S+Hp/p*T[2]-_,N+Hp/p*T[3]-P];let F=[_,P,E,I];F=F.map(M=>Math.max(0,Math.min(M,1)));const $=[F[0]*t[0],F[1]*t[1],F[2]*t[0],F[3]*t[1]],z={id:s++,score:Math.round(100*w)/100,class:b+1,label:sc[b].label,box:$.map(M=>Math.trunc(M)),boxRaw:F};i.push(z)}}ae([h,m,g,y])}const u=i.map(p=>[p.boxRaw[1],p.boxRaw[0],p.boxRaw[3],p.boxRaw[2]]),d=i.map(p=>p.score);let l=[];if(u&&u.length>0){const p=await Pe.nonMaxSuppressionAsync(u,d,a.object.maxDetected||0,a.object.iouThreshold,a.object.minConfidence);l=Array.from(await p.data()),ae(p)}return i=i.filter((p,c)=>l.includes(c)).sort((p,c)=>c.score-p.score),i}async function Px(e,t){if(!(Dn!=null&&Dn.executor))return[];const a=(t.object.skipTime||0)>ne()-Fx,n=xf<(t.object.skipFrames||0);return t.skipAllowed&&a&&n&&Gp.length>0?(xf++,Gp):(xf=0,!de.kernels.includes("mod")||!de.kernels.includes("sparsetodense")?Gp:new Promise(async r=>{const s=[e.shape[2]||0,e.shape[1]||0],i=Pe.resizeBilinear(e,[Fc,Fc],!1),o=Te(i,nt.tf255),u=ml(o,[0,3,1,2]);let d;t.object.enabled&&(d=Dn.execute(u)),Fx=ne();const l=await cme(d,s,t);Gp=l,ae([i,o,u,...d]),r(l)}))}var Ih=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],hme=Ih.length,Pc=Ih.reduce((e,t,a)=>(e[t]=a,e),{}),fme=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]];fme.map(([e,t])=>[Pc[e],Pc[t]]);var mme=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]];function gme(e){const t=e.reduce(({maxX:a,maxY:n,minX:r,minY:s},{position:{x:i,y:o}})=>({maxX:Math.max(a,i),maxY:Math.max(n,o),minX:Math.min(r,i),minY:Math.min(s,o)}),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function yme(e,[t,a],[n,r]){const s=t/n,i=a/r,o=(d,l)=>({id:l,score:d.score,boxRaw:[d.box[0]/r,d.box[1]/n,d.box[2]/r,d.box[3]/n],box:[Math.trunc(d.box[0]*i),Math.trunc(d.box[1]*s),Math.trunc(d.box[2]*i),Math.trunc(d.box[3]*s)],keypoints:d.keypoints.map(({score:p,part:c,position:h})=>({score:p,part:c,position:[Math.trunc(h.x*i),Math.trunc(h.y*s)],positionRaw:[h.x/n,h.y/n]})),annotations:{}});return e.map((d,l)=>o(d,l))}var xme=class{constructor(e,t){Ae(this,"priorityQueue"),Ae(this,"numberOfElements"),Ae(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return this.numberOfElements===-1}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const a=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=a}};function x4(e,t,a,n){return{y:n.get(e,t,a),x:n.get(e,t,a+hme)}}function A4(e,t,a){const{heatmapY:n,heatmapX:r,id:s}=e,{y:i,x:o}=x4(n,r,s,a);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function Ox(e,t,a){return e<t?t:e>a?a:e}function Ame(e,t,a,n){const r=a-e,s=n-t;return r*r+s*s}function Dx(e,t){return{x:e.x+t.x,y:e.y+t.y}}var Ja,bme=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],jp=1,el=16,vme=50**2;function zx(e,t,a,n,r,s,i=2){const o=y=>({y:s.get(y.y,y.x,e),x:s.get(y.y,y.x,s.shape[2]/2+e)}),u=(y,x,A)=>({y:Ox(Math.round(y.y/el),0,x-1),x:Ox(Math.round(y.x/el),0,A-1)}),[d,l]=n.shape,p=u(t.position,d,l),c=o(p);let f=Dx(t.position,c);for(let y=0;y<i;y++){const x=u(f,d,l),A=x4(x.y,x.x,a,r);f=Dx({x:x.x*el,y:x.y*el},{x:A.x,y:A.y})}const m=u(f,d,l),g=n.get(m.y,m.x,a);return{position:f,part:Ih[a],score:g}}function wme(e,t,a,n,r){const s=mme.map(([c,h])=>[Pc[c],Pc[h]]),i=s.map(([,c])=>c),o=s.map(([c])=>c),u=t.shape[2],d=i.length,l=new Array(u),p=A4(e.part,el,a);l[e.part.id]={score:e.score,part:Ih[e.part.id],position:p};for(let c=d-1;c>=0;--c){const h=i[c],f=o[c];l[h]&&!l[f]&&(l[f]=zx(c,l[h],f,t,a,r))}for(let c=0;c<d;++c){const h=o[c],f=i[c];l[h]&&!l[f]&&(l[f]=zx(c,l[h],f,t,a,n))}return l}function kme(e,t,a,n,r){const[s,i]=r.shape;let o=!0;const u=Math.max(a-jp,0),d=Math.min(a+jp+1,s);for(let l=u;l<d;++l){const p=Math.max(n-jp,0),c=Math.min(n+jp+1,i);for(let h=p;h<c;++h)if(r.get(l,h,e)>t){o=!1;break}if(!o)break}return o}function Ime(e,t){const[a,n,r]=t.shape,s=new xme(a*n*r,({score:i})=>i);for(let i=0;i<a;++i)for(let o=0;o<n;++o)for(let u=0;u<r;++u){const d=t.get(i,o,u);d<e||kme(u,d,i,o,t)&&s.enqueue({score:d,part:{heatmapY:i,heatmapX:o,id:u}})}return s}function b4(e,{x:t,y:a},n){return e.some(({keypoints:r})=>{var s;const i=(s=r[n])==null?void 0:s.position;return i?Ame(a,t,i.y,i.x)<=vme:!1})}function Sme(e,t){return t.reduce((n,{position:r,score:s},i)=>(b4(e,r,i)||(n+=s),n),0)/t.length}function Cme(e,t,a,n,r,s){const i=[],o=Ime(s,t);for(;i.length<r&&!o.empty();){const u=o.dequeue(),d=A4(u.part,el,e);if(b4(i,d,u.part.id))continue;let l=wme(u,t,e,a,n);l=l.filter(h=>h.score>s);const p=Sme(i,l),c=gme(l);p>s&&i.push({keypoints:l,box:c,score:Math.round(100*p)/100})}return i}async function Lx(e,t){if(!(Ja!=null&&Ja.executor))return[];const a=Ue(()=>{if(!Ja.inputs[0].shape)return[];const i=Pe.resizeBilinear(e,[Ja.inputs[0].shape[2],Ja.inputs[0].shape[1]]),o=ke(Te(qe(i,"float32"),127.5),1),d=Ja.execute(o,bme).map(l=>Ze(l,[0]));return d[1]=Cn(d[1]),d}),n=await Promise.all(a.map(i=>i.buffer()));for(const i of a)ae(i);const r=Cme(n[0],n[1],n[2],n[3],t.body.maxDetected,t.body.minConfidence);return Ja.inputs[0].shape?yme(r,[e.shape[1],e.shape[2]],[Ja.inputs[0].shape[2],Ja.inputs[0].shape[1]]):[]}async function Nme(e){return!Ja||de.initial?Ja=await gt(e.body.modelPath):e.debug&&Q("cached model:",Ja.modelUrl),Ja}var tr,Tme=["fgr","pha","r1o","r2o","r3o","r4o"],_t={},S0=0;function v4(e){ae([_t.r1i,_t.r2i,_t.r3i,_t.r4i,_t.downsample_ratio]),_t.r1i=He(0),_t.r2i=He(0),_t.r3i=He(0),_t.r4i=He(0),S0=e.segmentation.ratio||.5,_t.downsample_ratio=He(S0)}async function w4(e){return!tr||de.initial?tr=await gt(e.segmentation.modelPath):e.debug&&Q("cached model:",tr.modelUrl),v4(e),tr}var Wx=e=>Ue(()=>{const t=Ze(e,[0]),a=te(t,nt.tf255);return qe(a,"int32")});function Af(e,t){const a=e?Wx(e):lr([t.shape[1]||0,t.shape[2]||0,3],255,"int32"),n=t?Wx(t):lr([e.shape[1]||0,e.shape[2]||0,1],255,"int32"),r=ft([a,n],-1);return ae([a,n]),r}function Rme(e){return Ue(()=>{const t={};return t.unstack=gn(e,-1),t.concat=ft(t.unstack,1),t.split=Rn(t.concat,4,1),t.stack=ft(t.split,2),t.squeeze=Ze(t.stack,[0]),t.expand=ua(t.squeeze,-1),t.add=Ie(t.expand,1),t.mul=te(t.add,127.5),t.cast=qe(t.mul,"int32"),t.tile=Ps(t.cast,[1,1,3]),t.alpha=lr([t.tile.shape[0]||0,t.tile.shape[1]||0,1],255,"int32"),ft([t.tile,t.alpha],-1)})}async function Eme(e,t){if(tr||(tr=await w4(t)),!(tr!=null&&tr.executor))return null;_t.src=Te(e,255),S0!==t.segmentation.ratio&&v4(t);const[a,n,r,s,i,o]=await tr.executeAsync(_t,Tme);let u;switch(t.segmentation.mode||"default"){case"default":u=Af(a,n);break;case"alpha":u=Af(null,n);break;case"foreground":u=Af(a,null);break;case"state":u=Rme(r);break;default:u=He(0)}return ae([_t.src,a,n,_t.r1i,_t.r2i,_t.r3i,_t.r4i]),[_t.r1i,_t.r2i,_t.r3i,_t.r4i]=[r,s,i,o],u}var va;async function k4(e){return!va||de.initial?va=await gt(e.segmentation.modelPath):e.debug&&Q("cached model:",va.modelUrl),va}async function _me(e,t){var a;if(va||(va=await k4(t)),!(va!=null&&va.executor)||!((a=va==null?void 0:va.inputs)!=null&&a[0].shape))return null;const n={};n.resize=Pe.resizeBilinear(e,[va.inputs[0].shape?va.inputs[0].shape[1]:0,va.inputs[0].shape?va.inputs[0].shape[2]:0],!1),n.norm=Te(n.resize,nt.tf255),n.res=va.execute(n.norm),n.squeeze=Ze(n.res,[0]),n.alpha=Pe.resizeBilinear(n.squeeze,[e.shape[1]||0,e.shape[2]||0]),n.mul=te(n.alpha,nt.tf255);let r;switch(t.segmentation.mode||"default"){case"default":n.input=Ze(e),n.concat=ft([n.input,n.mul],-1),r=qe(n.concat,"int32");break;case"alpha":r=qe(n.mul,"int32");break;default:r=He(0)}return Object.keys(n).forEach(s=>ae(n[s])),r}function P2(e,t,a){var n,r;if(!t||!((n=e==null?void 0:e.config)!=null&&n.validateModels))return null;const s=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],i=["biasadd","fusedbatchnormv3","matmul","switch","shape","merge","split","broadcastto"],o=[],u=[],d=t.modelUrl,l=t.executor;if((r=l==null?void 0:l.graph)!=null&&r.nodes)for(const p of Object.values(l.graph.nodes)){const c=p.op.toLowerCase();o.includes(c)||o.push(c)}else!l&&e.config.debug&&Q("model not loaded",a);for(const p of o)!s.includes(p)&&!i.includes(p)&&!e.env.kernels.includes(p)&&!e.env.kernels.includes(p.replace("_",""))&&!e.env.kernels.includes(p.replace("native",""))&&!e.env.kernels.includes(p.replace("v2",""))&&u.push(p);return e.config.debug&&u.length>0&&Q("model validation failed:",a,u),u.length>0?{name:a,missing:u,ops:o,url:d}:null}var I4=class{constructor(e){Ae(this,"instance"),Ae(this,"models",{}),this.models={},this.instance=e}stats(){let e=0,t=0,a=0;for(const r of Object.values(Ut))e+=Number.isNaN(+r.sizeFromManifest)?0:r.sizeFromManifest,t+=Number.isNaN(+r.sizeLoadedWeights)?0:r.sizeLoadedWeights,a+=Number.isNaN(+r.sizeDesired)?0:r.sizeDesired;const n=a>0?t/a:0;return{numLoadedModels:Object.values(Ut).filter(r=>r==null?void 0:r.loaded).length,numDefinedModels:Object.keys(this.models).length,percentageLoaded:n,totalSizeFromManifest:e,totalSizeWeights:t,totalSizeLoading:a,modelStats:Object.values(Ut)}}reset(){for(const e of Object.keys(this.models))this.models[e]=null}async load(e){var t,a,n,r,s,i,o,u,d,l,p,c,h,f,m,g,y,x,A,b,w,S,N,T,_,P,E;de.initial&&this.reset(),e&&(this.instance=e);const I={};I.blazeface=this.instance.config.face.enabled&&!this.models.blazeface?Hfe(this.instance.config):null,I.antispoof=this.instance.config.face.enabled&&((t=this.instance.config.face.antispoof)!=null&&t.enabled)&&!this.models.antispoof?o0e(this.instance.config):null,I.liveness=this.instance.config.face.enabled&&((a=this.instance.config.face.liveness)!=null&&a.enabled)&&!this.models.liveness?l0e(this.instance.config):null,I.faceres=this.instance.config.face.enabled&&((n=this.instance.config.face.description)!=null&&n.enabled)&&!this.models.faceres?n0e(this.instance.config):null,I.emotion=this.instance.config.face.enabled&&((r=this.instance.config.face.emotion)!=null&&r.enabled)&&!this.models.emotion?a0e(this.instance.config):null,I.iris=this.instance.config.face.enabled&&((s=this.instance.config.face.iris)!=null&&s.enabled)&&!((i=this.instance.config.face.attention)!=null&&i.enabled)&&!this.models.iris?Xfe(this.instance.config):null,I.facemesh=this.instance.config.face.enabled&&((o=this.instance.config.face.mesh)!=null&&o.enabled)&&!this.models.facemesh?Qfe(this.instance.config):null,I.gear=this.instance.config.face.enabled&&((u=this.instance.config.face.gear)!=null&&u.enabled)&&!this.models.gear?p0e(this.instance.config):null,I.ssrnetage=this.instance.config.face.enabled&&((d=this.instance.config.face.ssrnet)!=null&&d.enabled)&&!this.models.ssrnetage?c0e(this.instance.config):null,I.ssrnetgender=this.instance.config.face.enabled&&((l=this.instance.config.face.ssrnet)!=null&&l.enabled)&&!this.models.ssrnetgender?h0e(this.instance.config):null,I.mobilefacenet=this.instance.config.face.enabled&&((p=this.instance.config.face.mobilefacenet)!=null&&p.enabled)&&!this.models.mobilefacenet?f0e(this.instance.config):null,I.insightface=this.instance.config.face.enabled&&((c=this.instance.config.face.insightface)!=null&&c.enabled)&&!this.models.insightface?m0e(this.instance.config):null,I.blazepose=this.instance.config.body.enabled&&!this.models.blazepose&&((h=this.instance.config.body.modelPath)!=null&&h.includes("blazepose"))?Ife(this.instance.config):null,I.blazeposedetect=this.instance.config.body.enabled&&!this.models.blazeposedetect&&this.instance.config.body.detector&&this.instance.config.body.detector.modelPath?kfe(this.instance.config):null,I.efficientpose=this.instance.config.body.enabled&&!this.models.efficientpose&&((f=this.instance.config.body.modelPath)!=null&&f.includes("efficientpose"))?Efe(this.instance.config):null,I.movenet=this.instance.config.body.enabled&&!this.models.movenet&&((m=this.instance.config.body.modelPath)!=null&&m.includes("movenet"))?lme(this.instance.config):null,I.posenet=this.instance.config.body.enabled&&!this.models.posenet&&((g=this.instance.config.body.modelPath)!=null&&g.includes("posenet"))?Nme(this.instance.config):null,I.handtrack=this.instance.config.hand.enabled&&!this.models.handtrack&&((x=(y=this.instance.config.hand.detector)==null?void 0:y.modelPath)!=null&&x.includes("handtrack"))?Z0e(this.instance.config):null,I.handskeleton=this.instance.config.hand.enabled&&this.instance.config.hand.landmarks&&!this.models.handskeleton&&((b=(A=this.instance.config.hand.detector)==null?void 0:A.modelPath)!=null&&b.includes("handtrack"))?J0e(this.instance.config):null,this.instance.config.hand.enabled&&!this.models.handdetect&&((S=(w=this.instance.config.hand.detector)==null?void 0:w.modelPath)!=null&&S.includes("handdetect"))&&(I.handdetect=H0e(this.instance.config),I.handskeleton=j0e(this.instance.config)),I.centernet=this.instance.config.object.enabled&&!this.models.centernet&&((N=this.instance.config.object.modelPath)!=null&&N.includes("centernet"))?Tfe(this.instance.config):null,I.nanodet=this.instance.config.object.enabled&&!this.models.nanodet&&((T=this.instance.config.object.modelPath)!=null&&T.includes("nanodet"))?pme(this.instance.config):null,I.selfie=this.instance.config.segmentation.enabled&&!this.models.selfie&&((_=this.instance.config.segmentation.modelPath)!=null&&_.includes("selfie"))?k4(this.instance.config):null,I.meet=this.instance.config.segmentation.enabled&&!this.models.meet&&((P=this.instance.config.segmentation.modelPath)!=null&&P.includes("meet"))?f4(this.instance.config):null,I.rvm=this.instance.config.segmentation.enabled&&!this.models.rvm&&((E=this.instance.config.segmentation.modelPath)!=null&&E.includes("rvm"))?w4(this.instance.config):null;for(const[F,$]of Object.entries(I))$!=null&&$.then&&$.then(z=>this.models[F]=z);await Promise.all(Object.values(I))}list(){const e=Object.keys(this.models).map(t=>{var a;return{name:t,loaded:this.models[t]!==null,size:0,url:this.models[t]?(a=this.models[t])==null?void 0:a.modelUrl:null}});for(const t of e){const a=Object.keys(Ut).find(n=>n.startsWith(t.name));a&&(t.size=Ut[a].sizeLoadedWeights,t.url=Ut[a].url)}return e}loaded(){return this.list().filter(a=>a.loaded).map(a=>a.name)}validate(){const e=[];for(const t of Object.keys(this.models)){const a=this.models[t];if(!a)continue;const n=P2(this.instance,a,t);n&&e.push(n)}return e}};function $me(e,t,a,n,r){var s,i,o,u,d,l;let p=0;const c=[];for(const h of e){const f={id:p++,face:h,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const b of t)h.box[0]>b.box[0]&&h.box[0]<b.box[0]+b.box[2]&&h.box[1]+h.box[3]>b.box[1]&&h.box[1]+h.box[3]<b.box[1]+b.box[3]&&(f.body=b);if(f.body)for(const b of a)b.box[0]+b.box[2]>f.body.box[0]&&b.box[0]+b.box[2]<f.body.box[0]+f.body.box[2]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.left=b),b.box[0]<f.body.box[0]+f.body.box[2]&&b.box[0]>f.body.box[0]&&b.box[1]+b.box[3]>f.body.box[1]&&b.box[1]+b.box[3]<f.body.box[1]+f.body.box[3]&&f.hands&&(f.hands.right=b);for(const b of n)(b.face!==void 0&&b.face===h.id||b.iris!==void 0&&b.iris===h.id||b.body!==void 0&&b.body===((s=f.body)==null?void 0:s.id)||b.hand!==void 0&&b.hand===((i=f.hands.left)==null?void 0:i.id)||b.hand!==void 0&&b.hand===((o=f.hands.right)==null?void 0:o.id))&&f.gestures.push(b);const m=[],g=[],y=b=>{b&&b.length===4&&(m.push(b[0],b[0]+b[2]),g.push(b[1],b[1]+b[3]))};y(f.face.box),y((u=f.body)==null?void 0:u.box),y((d=f.hands.left)==null?void 0:d.box),y((l=f.hands.right)==null?void 0:l.box);const x=Math.min(...m),A=Math.min(...g);f.box=[x,A,Math.max(...m)-x,Math.max(...g)-A],r!=null&&r[1]&&(r!=null&&r[2])&&(f.boxRaw=[f.box[0]/r[2],f.box[1]/r[1],f.box[2]/r[2],f.box[3]/r[1]]),c.push(f)}return c}var O2=`
/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA
AAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu
bmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob
IxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo
KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E
AB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH
SElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB
AQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET
IjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML
Xp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF
PUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/
AJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z
5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9
zZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO
tHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6
8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W
wA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk
EtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6
GhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT
A7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep
rBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb
LCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ
ih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K
KAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l
pBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x
UqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4
HaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr
xL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS
NO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD
1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX
+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3
GBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K
q4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0
nhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm
uic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH
ArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV
wF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8
87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P
FQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD
YNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv
JmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ
QmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el
UJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681
ly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly
CK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc
UDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF
63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x
XY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2
ZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk
Xb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK
cBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef
eNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4
/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5
rl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru
/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A
zviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO
I4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1
jfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ
GRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG
cZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb
WmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis
ZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH
ckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi
lbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO
xuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK
JtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX
PaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c
W0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t
C6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk
4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn
xHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW
vHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi
qr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV
hamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F
j4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6
wqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm
oy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ
k7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg
nQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP
1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1
H1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ
1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx
zSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt
fFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp
Oxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj
VtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy
rFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe
5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D
d/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69
MlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ
Fbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ
MA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP
ByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn
0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU
yOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is
pNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz
TSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu
uCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem
gGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk
HvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy
s9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu
m6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb
0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz
9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN
DNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n
R6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk
nmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu
6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd
9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb
Sms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S
MSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz
FEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8
VSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx
Y0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ
mupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+
5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh
05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd
ua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ
5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR
Mqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8
1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4
B9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag
Bc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA
3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn
3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx
1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU
tzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6
f3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA
bvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ
zyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup
6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM
350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0
/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a
YfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ
agBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO
mAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl
mOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR
nqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo
EPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt
4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ
ScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p
iMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj
PQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l
c6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1
8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3
ylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY
euPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==`,D2=`
/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk
JyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF
RUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA
AhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA
AQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA
AAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA
AhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj
+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt
Fh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR
PLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl
mZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp
+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa
zhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D
h1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2
ex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67
d4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y
Rv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP
Ld3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC
vy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi
eSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/
Mx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+
r3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO
O0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s
tfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN
TmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc
0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj
q83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w
+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s
d8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t
cI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4
Yibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe
bzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi
KxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6
rNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ
9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf
Jvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V
bxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q
Vbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM
lorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/
/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme
E4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv
fauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6
jkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN
+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk
Rvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK
cGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop
yW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn
E8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX
12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW
iI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS
RWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf
0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx
DS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL
G8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK
xC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ
a9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4
ZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6
tvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+
fJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE
erk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR
Md5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9
lcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD
j8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV
5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt
Cu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/
+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c
vUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p
jrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0
77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP
Sel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8
5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe
Y0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R
Hwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV
rWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU
z7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8
to6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X
y8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt
stcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/
w9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT
DpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l
XV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t
ydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS
34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX
e09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn
26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf
3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q
6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P
NbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO
yZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN
3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8
2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h
dqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx
kr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t
DHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb
eFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc
1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka
c258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE
xEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu
s5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK
0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9
dM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt
PXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T
Md/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T
adq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b
SVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt
pdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm
vfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr
EejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N
vwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh
ZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I
tkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW
d43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe
N4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218
8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG
PNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY
V1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw
w18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT
Ex5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1
axqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/
tDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I
mbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe
XRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1
izjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2
crFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4
OadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2
r8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx
zc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz
+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v
Mevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu
ryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095
YZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE
9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8
mNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O
uSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O
fft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6
Olty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT
uTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3
6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1
Mb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF
feH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq
xVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v
ed7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ
mtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz
mWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP
B39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0
5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1
mkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt
mxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO
1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq
ZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q
ky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7
ROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK
GEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i
tMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T
+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+
O8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO
esd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es
vPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz
XV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1
+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY
36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL
q555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY
3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz
p7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr
1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV
xUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt
pCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS
fP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH
mMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z
1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+
n3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d
MRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df
zXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl
J2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs
zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH
DpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ
dHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR
tER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j
admFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC
b2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X
qdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh
ydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O
8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L
T7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0
Za1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr
vNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer
rWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL
oNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq
j/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh
odZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8
8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1
lNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+
oza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL
knU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK
EtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N
mtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm
9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N
IpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W
MYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2
+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql
o+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37
O99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE
TE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1
L7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4
izsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt
1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb
V5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum
L37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12
CvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE
ebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo
Gvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu
L8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh
5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3
6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9
XO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM
feKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj
SZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF
XaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr
79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h
yeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT
OC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223
2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt
adohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y
cnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX
DpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p
7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso
S24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l
bPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe
vVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG
H6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7
x3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz
5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY
q+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn
vLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2
IjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK
z0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ
YYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON
ZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW
ekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf
cjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c
biuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO
CkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw
y1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi
QXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E
bL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r
tv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t
LRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP
RqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm
s7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el
XX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1
vK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq
qrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v
VYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0
ZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q
mT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm
6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG
f63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo
dPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22
gtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M
MoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb
c2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX
6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn
1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK
fOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ
EqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u
7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT
qPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa
S2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf
Lp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU
IiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O
8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c
vU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx
5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V
KTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm
2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu
j8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB
TTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9
RUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL
CWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA
AAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8
cTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj
qKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF
0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK
ZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK
66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu
XT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9
XOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN
M2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv
VrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK
7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI
3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m
XY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m
1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A
JUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC
EgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9
8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL
OrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H
M+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA
TsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8
elpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp
BjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS
CRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r
rcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY
jbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW
UsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB
KUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb
Sz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL
+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v
T471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM
sfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj
FontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl
5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q
7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv
6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa
0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/
AOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM
d8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5
6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP
bFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu
LJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy
wt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX
0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK
3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn
KAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0
vobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t
zya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps
uOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi
Fdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2
O3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z
aK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz
0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb
T/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l
qMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t
trJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn
mvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa
eq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe
PwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of
TdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O
1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG
f/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi
0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY
5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc
V2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L
/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM
t/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd
VknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD
KLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R
fwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3
Vxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ
DJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ
3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv
x7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD
weqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI
6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew
PnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk
j3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm
OqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/
AKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez
N9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ
92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp
+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue
V9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv
avHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0
vQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP
8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt
n1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw
nUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3
7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P
0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U
x8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG
0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L
faQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ
QKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA
BAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A
tLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv
9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr
jn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm
b7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB
ACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk
dEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1
rMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+
x+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA
AAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr
YvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4
5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V
kK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg
BIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA
AAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g
Wbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx
OEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2
H/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF
+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V
h6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA
EgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu
ZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml
HMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl
n0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN
3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi
/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00
+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC
UACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2
M2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp
5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn
N1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS
OjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL
/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo
stLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3
GyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA
AAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4
qmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy
WEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a
fJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI
rTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2
rz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc
3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3
Tur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA
AAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx
skA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F
o7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx
NO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h
2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te
pSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7
cvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7
mZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA
AAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA
hGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J
qx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI
XRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy
RHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX
qNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX
kaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P
ya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC
ExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA
lAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA
AAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o
b9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP
y6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae
kzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu
9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ
k7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1
8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp
DXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh
nyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ
AAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA
AAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO
yvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5
PM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii
IpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r
O3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE
yTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX
6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2
JgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS
AAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA
AAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx
Wa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI
6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5
K2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7
Vv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id
PW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ
2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4
eF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7
piVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR
ACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ
JQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i
UiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61
rZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq
ZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2
f0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO
IjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts
bAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA
AAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA
BAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2
SbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T
lBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/
2Q==`;async function Mme(e){const t=(r,s="application/octet-stream")=>fetch(`data:${s};base64,${r}`).then(i=>i.blob());let a,n;switch(e.config.warmup){case"face":a=await t(O2);break;case"body":case"full":a=await t(D2);break;default:a=null}if(a){const r=await createImageBitmap(a);n=await e.detect(r,e.config),r.close()}return n}async function Fme(e){return new Promise(t=>{let a;switch(e.config.warmup){case"face":a="data:image/jpeg;base64,"+O2;break;case"full":case"body":a="data:image/jpeg;base64,"+D2;break;default:a=""}let n;if(typeof Image<"u")n=new Image;else if(de.Image)n=new de.Image;else{t(void 0);return}n.onload=async()=>{const r=Dr(n.naturalWidth,n.naturalHeight);if(!r)Q("Warmup: Canvas not found"),t(void 0);else{const s=r.getContext("2d");s&&s.drawImage(n,0,0);const i=await e.image(r,!0),o=i.tensor?await e.detect(i.tensor,e.config):void 0;t(o)}},a?n.src=a:t(void 0)})}async function Pme(e){const t=r=>Buffer.from(r,"base64");let a;e.config.warmup==="face"?a=t(O2):a=t(D2);let n;if("node"in N0&&la()==="tensorflow"){const r=$7.decodeJpeg(a),s=ua(r,0);e.tf.dispose(r),n=await e.detect(s,e.config),e.tf.dispose(s)}else e.config.debug&&Q("Warmup tfjs-node not loaded");return n}async function Ome(e){let t;return typeof createImageBitmap=="function"?t=await Mme(e):typeof Image<"u"||de.Canvas!==void 0?t=await Fme(e):t=await Pme(e),t}async function Dme(e){var t,a,n,r;if(!U().flagRegistry.ENGINE_COMPILE_ONLY)return;const s=la(),i=Er();if(s!=="webgl"&&s!=="humangl"||!(i!=null&&i.checkCompileCompletion))return;U().set("ENGINE_COMPILE_ONLY",!0);const o=$t().state.numTensors,u=[];for(const[p,c]of Object.entries(e.models.models)){if(!c)continue;const h=c!=null&&c.modelSignature&&((a=(t=c==null?void 0:c.inputs)==null?void 0:t[0])!=null&&a.shape)?[...c.inputs[0].shape]:[1,64,64,3],f=c!=null&&c.modelSignature&&((r=(n=c==null?void 0:c.inputs)==null?void 0:n[0])!=null&&r.dtype)?c.inputs[0].dtype:"float32";for(let g=0;g<h.length;g++)h[g]===-1&&(h[g]=g===0?1:64);const m=Tn(h,f);try{const g=c.execute(m);u.push(p),Array.isArray(g)?g.forEach(y=>ae(y)):ae(g)}catch{e.config.debug&&Q("compile fail model:",p)}ae(m)}const d=await i.checkCompileCompletionAsync();i.getUniformLocations(),e.config.debug&&Q("compile pass:",{models:u,kernels:d.length}),U().set("ENGINE_COMPILE_ONLY",!1);const l=$t().state.numTensors;l-o>0&&Q("tensor leak:",l-o)}async function zme(e,t){await y0(e,!1);const a=ne();return e.state="warmup",t&&(e.config=ia(e.config,t)),!e.config.warmup||e.config.warmup.length===0||e.config.warmup==="none"?il():new Promise(async n=>{await e.models.load(),await Vc(),await Dme(e);const r=await Ome(e),s=ne();e.config.debug&&Q("warmup",e.config.warmup,Math.round(s-a),"ms"),e.emit("warmup"),n(r)})}var Uu,oc,lc,C0,As,Wme=class{constructor(e){Ae(this,"version"),Ae(this,"config"),Ae(this,"result"),Ae(this,"state"),Ae(this,"process"),Ae(this,"tf"),Ae(this,"env",de),Ae(this,"draw",B6),Ae(this,"match",m4),Ae(this,"models"),Ae(this,"events"),Ae(this,"faceTriangulation"),Ae(this,"faceUVMap"),Ae(this,"performance"),Nr(this,Uu),Nr(this,oc),Nr(this,lc),Ae(this,"analyze",(...n)=>{if(!on(this,oc))return;const r=this.tf.engine().state.numTensors,s=on(this,Uu);Rs(this,Uu,r);const i=r-s;i!==0&&Q(...n,i)}),Nr(this,C0,n=>{if(!on(this,lc))return null;if(!n)return"input is not defined";if(this.env.node&&!(n instanceof xt))return"input must be a tensor";try{this.tf.getBackend()}catch{return"backend not loaded"}return null}),Ae(this,"webcam",new Nhe),Ae(this,"emit",n=>{var r;(r=this.events)!=null&&r.dispatchEvent&&this.events.dispatchEvent(new Event(n))}),Nr(this,As,{});const t=R2.tfjs.replace(/-(.*)/,"");Nu.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${t}/dist/`,Nu.modelBasePath=de.browser?"../models/":"file://models/",this.version=vy,Object.defineProperty(this,"version",{value:vy}),this.config=JSON.parse(JSON.stringify(Nu)),Object.seal(this.config),this.config.cacheModels=typeof indexedDB<"u",e&&(this.config=ia(this.config,e)),Ehe(this.config),this.tf=N0,this.state="idle",Rs(this,Uu,0),Rs(this,oc,!1),Rs(this,lc,!1),this.performance={},this.events=typeof EventTarget<"u"?new EventTarget:void 0,this.models=new I4(this),X6(),this.result=il(),this.process={tensor:null,canvas:null},this.faceTriangulation=e0e,this.faceUVMap=t0e,P2(this,null,""),this.emit("create"),(this.config.debug||this.env.browser)&&Q(`version: ${this.version}`),this.config.debug&&Q(`tfjs version: ${this.tf.version["tfjs-core"]}`);const a=JSON.parse(JSON.stringify(this.env));delete a.kernels,delete a.initial,delete a.perfadd,this.config.debug&&Q("environment:",a)}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(Nu)),this.config.backend=e,by(),de.initial=!0}validate(e){const t=M7(Nu,e||this.config);return t.length===0&&(this.config=ia(this.config,e)),t}now(){return ne()}image(e,t=!1){return Vh(e,this.config,t)}async segmentation(e,t){var a,n,r;if(t&&(this.config=ia(this.config,t)),!this.config.segmentation.enabled)return null;const s=await Vh(e,this.config);if(!s.tensor)return null;let i=null;return(a=this.config.segmentation.modelPath)!=null&&a.includes("rvm")&&(i=await Eme(s.tensor,this.config)),(n=this.config.segmentation.modelPath)!=null&&n.includes("meet")&&(i=await tme(s.tensor,this.config)),(r=this.config.segmentation.modelPath)!=null&&r.includes("selfie")&&(i=await _me(s.tensor,this.config)),ae(s.tensor),i}compare(e,t){return She(this.config,e,t)}async init(){await y0(this,!0),await this.tf.ready(),by()}async load(e){this.state="load";const t=ne(),a=Object.values(this.models.models).filter(s=>s).length;e&&(this.config=ia(this.config,e)),this.env.initial&&(await y0(this,!1)||Q("error: backend check failed"),await Vc(),this.env.browser&&(this.config.debug&&Q("configuration:",this.config),this.config.debug&&Q("tf flags:",this.tf.ENV.flags))),await this.models.load(this),this.env.initial&&this.config.debug&&Q("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1,Object.values(this.models.models).filter(s=>s).length!==a&&(this.models.validate(),this.emit("load"));const r=Math.trunc(ne()-t);r>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+r:r)}next(e=this.result){return eme(e,this.config)}async warmup(e){const t=ne(),a=await zme(this,e),n=ne();return this.performance.warmup=Math.trunc(n-t),a}async profile(e,t){const a=await this.tf.profile(()=>this.detect(e,t)),n={};let r=0;for(const i of a.kernels){const o=Number(i.kernelTimeMs)||0;n[i.name]?n[i.name]+=o:n[i.name]=o,r+=o}const s=[];Object.entries(n).forEach(i=>s.push({kernel:i[0],time:i[1],perc:0}));for(const i of s)i.perc=Math.round(1e3*i.time/r)/1e3,i.time=Math.round(1e3*i.time)/1e3;return s.sort((i,o)=>o.time-i.time),s.length=20,s}async detect(e,t){return this.state="detect",new Promise(async a=>{var n,r,s,i,o,u,d,l,p,c,h,f,m,g,y,x,A,b,w,S,N;this.state="config";let T;this.config=ia(this.config,t),this.state="check";const _=on(this,C0).call(this,e);_&&(Q(_,e),this.emit("error"),a(il(_)));const P=ne();await this.load(),T=ne(),this.state="image";const E=await Vh(e,this.config);if(this.process=E,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(ne()-T):Math.trunc(ne()-T),this.analyze("Get Image:"),!E.tensor){this.config.debug&&Q("could not convert input to tensor"),this.emit("error"),a(il("could not convert input to tensor"));return}this.emit("image"),T=ne(),this.config.skipAllowed=await Ihe(this.config,E.tensor),this.config.filter.autoBrightness=(this.config.filter.autoBrightness||!1)&&this.config.skipAllowed,this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(ne()-T):Math.trunc(ne()-T),this.analyze("Check Changed:");let I=[],F=[],$=[],z=[];this.state="detect:face",this.config.async?(I=this.config.face.enabled?gx(this,E.tensor):[],this.performance.face&&delete this.performance.face):(T=ne(),I=this.config.face.enabled?await gx(this,E.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(ne()-T):Math.trunc(ne()-T)),this.config.async&&(this.config.body.maxDetected===-1||this.config.hand.maxDetected===-1)&&(I=await I),this.analyze("Start Body:"),this.state="detect:body";const M=this.config.body.maxDetected===-1?ia(this.config,{body:{maxDetected:this.config.face.enabled?1*I.length:1}}):this.config;this.config.async?((n=this.config.body.modelPath)!=null&&n.includes("posenet")?F=this.config.body.enabled?Lx(E.tensor,M):[]:(r=this.config.body.modelPath)!=null&&r.includes("blazepose")?F=this.config.body.enabled?Ey(E.tensor,M):[]:(s=this.config.body.modelPath)!=null&&s.includes("efficientpose")?F=this.config.body.enabled?Fy(E.tensor,M):[]:(i=this.config.body.modelPath)!=null&&i.includes("movenet")&&(F=this.config.body.enabled?Mx(E.tensor,M):[]),this.performance.body&&delete this.performance.body):(T=ne(),(o=this.config.body.modelPath)!=null&&o.includes("posenet")?F=this.config.body.enabled?await Lx(E.tensor,M):[]:(u=this.config.body.modelPath)!=null&&u.includes("blazepose")?F=this.config.body.enabled?await Ey(E.tensor,M):[]:(d=this.config.body.modelPath)!=null&&d.includes("efficientpose")?F=this.config.body.enabled?await Fy(E.tensor,M):[]:(l=this.config.body.modelPath)!=null&&l.includes("movenet")&&(F=this.config.body.enabled?await Mx(E.tensor,M):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(ne()-T):Math.trunc(ne()-T)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const H=this.config.hand.maxDetected===-1?ia(this.config,{hand:{maxDetected:this.config.face.enabled?2*I.length:1}}):this.config;this.config.async?((c=(p=this.config.hand.detector)==null?void 0:p.modelPath)!=null&&c.includes("handdetect")?$=this.config.hand.enabled?Nx(E.tensor,H):[]:(f=(h=this.config.hand.detector)==null?void 0:h.modelPath)!=null&&f.includes("handtrack")&&($=this.config.hand.enabled?_x(E.tensor,H):[]),this.performance.hand&&delete this.performance.hand):(T=ne(),(g=(m=this.config.hand.detector)==null?void 0:m.modelPath)!=null&&g.includes("handdetect")?$=this.config.hand.enabled?await Nx(E.tensor,H):[]:(x=(y=this.config.hand.detector)==null?void 0:y.modelPath)!=null&&x.includes("handtrack")&&($=this.config.hand.enabled?await _x(E.tensor,H):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(ne()-T):Math.trunc(ne()-T)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((A=this.config.object.modelPath)!=null&&A.includes("nanodet")?z=this.config.object.enabled?Px(E.tensor,this.config):[]:(b=this.config.object.modelPath)!=null&&b.includes("centernet")&&(z=this.config.object.enabled?$y(E.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(T=ne(),(w=this.config.object.modelPath)!=null&&w.includes("nanodet")?z=this.config.object.enabled?await Px(E.tensor,this.config):[]:(S=this.config.object.modelPath)!=null&&S.includes("centernet")&&(z=this.config.object.enabled?await $y(E.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(ne()-T):Math.trunc(ne()-T)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([I,F,$,z]=await Promise.all([I,F,$,z])),this.state="detect:gesture";let V=[];this.config.gesture.enabled&&(T=ne(),V=[...R0e(I),...T0e(F),..._0e($),...E0e(I)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(ne()-T):Math.trunc(ne()-T)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(ne()-P):Math.trunc(ne()-P);const q=((N=this.process.tensor)==null?void 0:N.shape)||[0,0,0,0];this.result={face:I,body:F,hand:$,gesture:V,object:z,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,width:q[2],height:q[1],get persons(){return $me(I,F,$,V,q)}},ae(E.tensor),this.emit("detect"),this.state="idle",a(this.result)})}async sleep(e){return new Promise(t=>{setTimeout(t,e)})}async video(e,t=!0,a=0){t?(on(this,As)[e.id]||(this.config.debug&&Q("video start",e.id),on(this,As)[e.id]=!0),!e.paused&&on(this,As)[e.id]&&e.readyState>=2&&await this.detect(e),a>0&&await this.sleep(a),on(this,As)[e.id]&&requestAnimationFrame(()=>this.video(e,t,a))):(this.config.debug&&Q("video stop",e.id),on(this,As)[e.id]=!1)}};Uu=new WeakMap;oc=new WeakMap;lc=new WeakMap;C0=new WeakMap;As=new WeakMap;export{Che as Env,Wme as Human,Wme as default,Nu as defaults,B6 as draw,il as empty,de as env,m4 as match,rme as models};
